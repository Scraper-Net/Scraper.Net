### YamlMime:XRefMap
sorted: true
references:
- uid: api.home
  name: API Reference
  href: api/index.html
- uid: articles.di
  name: articles.di
  href: articles/di.html
- uid: articles.getting_started
  name: Installation
  href: articles/getting_started.html
- uid: articles.introduction
  name: Introduction
  href: articles/introduction.html
- uid: PostsListener
  name: PostsListener
  href: api/PostsListener.html
  commentId: N:PostsListener
  fullName: PostsListener
  nameWithType: PostsListener
- uid: PostsListener.AddOrUpdateNewPostSubscriptionConsumer
  name: AddOrUpdateNewPostSubscriptionConsumer
  href: api/PostsListener.AddOrUpdateNewPostSubscriptionConsumer.html
  commentId: T:PostsListener.AddOrUpdateNewPostSubscriptionConsumer
  fullName: PostsListener.AddOrUpdateNewPostSubscriptionConsumer
  nameWithType: AddOrUpdateNewPostSubscriptionConsumer
- uid: PostsListener.AddOrUpdateNewPostSubscriptionConsumer.#ctor(PostsListener.ISubscriptionsManager,ILogger{PostsListener.AddOrUpdateNewPostSubscriptionConsumer})
  name: AddOrUpdateNewPostSubscriptionConsumer(ISubscriptionsManager, ILogger<AddOrUpdateNewPostSubscriptionConsumer>)
  href: api/PostsListener.AddOrUpdateNewPostSubscriptionConsumer.html#PostsListener_AddOrUpdateNewPostSubscriptionConsumer__ctor_PostsListener_ISubscriptionsManager_ILogger_PostsListener_AddOrUpdateNewPostSubscriptionConsumer__
  commentId: M:PostsListener.AddOrUpdateNewPostSubscriptionConsumer.#ctor(PostsListener.ISubscriptionsManager,ILogger{PostsListener.AddOrUpdateNewPostSubscriptionConsumer})
  name.vb: AddOrUpdateNewPostSubscriptionConsumer(ISubscriptionsManager, ILogger(Of AddOrUpdateNewPostSubscriptionConsumer))
  fullName: PostsListener.AddOrUpdateNewPostSubscriptionConsumer.AddOrUpdateNewPostSubscriptionConsumer(PostsListener.ISubscriptionsManager, ILogger<PostsListener.AddOrUpdateNewPostSubscriptionConsumer>)
  fullName.vb: PostsListener.AddOrUpdateNewPostSubscriptionConsumer.AddOrUpdateNewPostSubscriptionConsumer(PostsListener.ISubscriptionsManager, ILogger(Of PostsListener.AddOrUpdateNewPostSubscriptionConsumer))
  nameWithType: AddOrUpdateNewPostSubscriptionConsumer.AddOrUpdateNewPostSubscriptionConsumer(ISubscriptionsManager, ILogger<AddOrUpdateNewPostSubscriptionConsumer>)
  nameWithType.vb: AddOrUpdateNewPostSubscriptionConsumer.AddOrUpdateNewPostSubscriptionConsumer(ISubscriptionsManager, ILogger(Of AddOrUpdateNewPostSubscriptionConsumer))
- uid: PostsListener.AddOrUpdateNewPostSubscriptionConsumer.#ctor*
  name: AddOrUpdateNewPostSubscriptionConsumer
  href: api/PostsListener.AddOrUpdateNewPostSubscriptionConsumer.html#PostsListener_AddOrUpdateNewPostSubscriptionConsumer__ctor_
  commentId: Overload:PostsListener.AddOrUpdateNewPostSubscriptionConsumer.#ctor
  isSpec: "True"
  fullName: PostsListener.AddOrUpdateNewPostSubscriptionConsumer.AddOrUpdateNewPostSubscriptionConsumer
  nameWithType: AddOrUpdateNewPostSubscriptionConsumer.AddOrUpdateNewPostSubscriptionConsumer
- uid: PostsListener.AddOrUpdateNewPostSubscriptionConsumer.Consume(ConsumeContext{AddOrUpdateNewPostSubscription})
  name: Consume(ConsumeContext<AddOrUpdateNewPostSubscription>)
  href: api/PostsListener.AddOrUpdateNewPostSubscriptionConsumer.html#PostsListener_AddOrUpdateNewPostSubscriptionConsumer_Consume_ConsumeContext_AddOrUpdateNewPostSubscription__
  commentId: M:PostsListener.AddOrUpdateNewPostSubscriptionConsumer.Consume(ConsumeContext{AddOrUpdateNewPostSubscription})
  name.vb: Consume(ConsumeContext(Of AddOrUpdateNewPostSubscription))
  fullName: PostsListener.AddOrUpdateNewPostSubscriptionConsumer.Consume(ConsumeContext<AddOrUpdateNewPostSubscription>)
  fullName.vb: PostsListener.AddOrUpdateNewPostSubscriptionConsumer.Consume(ConsumeContext(Of AddOrUpdateNewPostSubscription))
  nameWithType: AddOrUpdateNewPostSubscriptionConsumer.Consume(ConsumeContext<AddOrUpdateNewPostSubscription>)
  nameWithType.vb: AddOrUpdateNewPostSubscriptionConsumer.Consume(ConsumeContext(Of AddOrUpdateNewPostSubscription))
- uid: PostsListener.AddOrUpdateNewPostSubscriptionConsumer.Consume*
  name: Consume
  href: api/PostsListener.AddOrUpdateNewPostSubscriptionConsumer.html#PostsListener_AddOrUpdateNewPostSubscriptionConsumer_Consume_
  commentId: Overload:PostsListener.AddOrUpdateNewPostSubscriptionConsumer.Consume
  isSpec: "True"
  fullName: PostsListener.AddOrUpdateNewPostSubscriptionConsumer.Consume
  nameWithType: AddOrUpdateNewPostSubscriptionConsumer.Consume
- uid: PostsListener.Client
  name: PostsListener.Client
  href: api/PostsListener.Client.html
  commentId: N:PostsListener.Client
  fullName: PostsListener.Client
  nameWithType: PostsListener.Client
- uid: PostsListener.Client.INewPostSubscriptionsClient
  name: INewPostSubscriptionsClient
  href: api/PostsListener.Client.INewPostSubscriptionsClient.html
  commentId: T:PostsListener.Client.INewPostSubscriptionsClient
  fullName: PostsListener.Client.INewPostSubscriptionsClient
  nameWithType: INewPostSubscriptionsClient
- uid: PostsListener.Client.INewPostSubscriptionsClient.AddOrUpdateSubscription(System.String,System.String,TimeSpan,DateTime,CancellationToken)
  name: AddOrUpdateSubscription(String, String, TimeSpan, DateTime, CancellationToken)
  href: api/PostsListener.Client.INewPostSubscriptionsClient.html#PostsListener_Client_INewPostSubscriptionsClient_AddOrUpdateSubscription_System_String_System_String_TimeSpan_DateTime_CancellationToken_
  commentId: M:PostsListener.Client.INewPostSubscriptionsClient.AddOrUpdateSubscription(System.String,System.String,TimeSpan,DateTime,CancellationToken)
  fullName: PostsListener.Client.INewPostSubscriptionsClient.AddOrUpdateSubscription(System.String, System.String, TimeSpan, DateTime, CancellationToken)
  nameWithType: INewPostSubscriptionsClient.AddOrUpdateSubscription(String, String, TimeSpan, DateTime, CancellationToken)
- uid: PostsListener.Client.INewPostSubscriptionsClient.AddOrUpdateSubscription*
  name: AddOrUpdateSubscription
  href: api/PostsListener.Client.INewPostSubscriptionsClient.html#PostsListener_Client_INewPostSubscriptionsClient_AddOrUpdateSubscription_
  commentId: Overload:PostsListener.Client.INewPostSubscriptionsClient.AddOrUpdateSubscription
  isSpec: "True"
  fullName: PostsListener.Client.INewPostSubscriptionsClient.AddOrUpdateSubscription
  nameWithType: INewPostSubscriptionsClient.AddOrUpdateSubscription
- uid: PostsListener.Client.INewPostSubscriptionsClient.GetSubscriptionsAsync(CancellationToken)
  name: GetSubscriptionsAsync(CancellationToken)
  href: api/PostsListener.Client.INewPostSubscriptionsClient.html#PostsListener_Client_INewPostSubscriptionsClient_GetSubscriptionsAsync_CancellationToken_
  commentId: M:PostsListener.Client.INewPostSubscriptionsClient.GetSubscriptionsAsync(CancellationToken)
  fullName: PostsListener.Client.INewPostSubscriptionsClient.GetSubscriptionsAsync(CancellationToken)
  nameWithType: INewPostSubscriptionsClient.GetSubscriptionsAsync(CancellationToken)
- uid: PostsListener.Client.INewPostSubscriptionsClient.GetSubscriptionsAsync*
  name: GetSubscriptionsAsync
  href: api/PostsListener.Client.INewPostSubscriptionsClient.html#PostsListener_Client_INewPostSubscriptionsClient_GetSubscriptionsAsync_
  commentId: Overload:PostsListener.Client.INewPostSubscriptionsClient.GetSubscriptionsAsync
  isSpec: "True"
  fullName: PostsListener.Client.INewPostSubscriptionsClient.GetSubscriptionsAsync
  nameWithType: INewPostSubscriptionsClient.GetSubscriptionsAsync
- uid: PostsListener.Client.INewPostSubscriptionsClient.RemoveSubscription(System.String,System.String,CancellationToken)
  name: RemoveSubscription(String, String, CancellationToken)
  href: api/PostsListener.Client.INewPostSubscriptionsClient.html#PostsListener_Client_INewPostSubscriptionsClient_RemoveSubscription_System_String_System_String_CancellationToken_
  commentId: M:PostsListener.Client.INewPostSubscriptionsClient.RemoveSubscription(System.String,System.String,CancellationToken)
  fullName: PostsListener.Client.INewPostSubscriptionsClient.RemoveSubscription(System.String, System.String, CancellationToken)
  nameWithType: INewPostSubscriptionsClient.RemoveSubscription(String, String, CancellationToken)
- uid: PostsListener.Client.INewPostSubscriptionsClient.RemoveSubscription*
  name: RemoveSubscription
  href: api/PostsListener.Client.INewPostSubscriptionsClient.html#PostsListener_Client_INewPostSubscriptionsClient_RemoveSubscription_
  commentId: Overload:PostsListener.Client.INewPostSubscriptionsClient.RemoveSubscription
  isSpec: "True"
  fullName: PostsListener.Client.INewPostSubscriptionsClient.RemoveSubscription
  nameWithType: INewPostSubscriptionsClient.RemoveSubscription
- uid: PostsListener.Client.INewPostSubscriptionsClient.TriggerPoll(System.String,System.String,CancellationToken)
  name: TriggerPoll(String, String, CancellationToken)
  href: api/PostsListener.Client.INewPostSubscriptionsClient.html#PostsListener_Client_INewPostSubscriptionsClient_TriggerPoll_System_String_System_String_CancellationToken_
  commentId: M:PostsListener.Client.INewPostSubscriptionsClient.TriggerPoll(System.String,System.String,CancellationToken)
  fullName: PostsListener.Client.INewPostSubscriptionsClient.TriggerPoll(System.String, System.String, CancellationToken)
  nameWithType: INewPostSubscriptionsClient.TriggerPoll(String, String, CancellationToken)
- uid: PostsListener.Client.INewPostSubscriptionsClient.TriggerPoll*
  name: TriggerPoll
  href: api/PostsListener.Client.INewPostSubscriptionsClient.html#PostsListener_Client_INewPostSubscriptionsClient_TriggerPoll_
  commentId: Overload:PostsListener.Client.INewPostSubscriptionsClient.TriggerPoll
  isSpec: "True"
  fullName: PostsListener.Client.INewPostSubscriptionsClient.TriggerPoll
  nameWithType: INewPostSubscriptionsClient.TriggerPoll
- uid: PostsListener.Client.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/PostsListener.Client.ServiceCollectionExtensions.html
  commentId: T:PostsListener.Client.ServiceCollectionExtensions
  fullName: PostsListener.Client.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: PostsListener.Client.ServiceCollectionExtensions.AddPostsListenerClient(IServiceCollectionBusConfigurator)
  name: AddPostsListenerClient(IServiceCollectionBusConfigurator)
  href: api/PostsListener.Client.ServiceCollectionExtensions.html#PostsListener_Client_ServiceCollectionExtensions_AddPostsListenerClient_IServiceCollectionBusConfigurator_
  commentId: M:PostsListener.Client.ServiceCollectionExtensions.AddPostsListenerClient(IServiceCollectionBusConfigurator)
  fullName: PostsListener.Client.ServiceCollectionExtensions.AddPostsListenerClient(IServiceCollectionBusConfigurator)
  nameWithType: ServiceCollectionExtensions.AddPostsListenerClient(IServiceCollectionBusConfigurator)
- uid: PostsListener.Client.ServiceCollectionExtensions.AddPostsListenerClient*
  name: AddPostsListenerClient
  href: api/PostsListener.Client.ServiceCollectionExtensions.html#PostsListener_Client_ServiceCollectionExtensions_AddPostsListenerClient_
  commentId: Overload:PostsListener.Client.ServiceCollectionExtensions.AddPostsListenerClient
  isSpec: "True"
  fullName: PostsListener.Client.ServiceCollectionExtensions.AddPostsListenerClient
  nameWithType: ServiceCollectionExtensions.AddPostsListenerClient
- uid: PostsListener.Client.ServiceCollectionExtensions.AddPostsListenerClient``1(IServiceCollectionBusConfigurator,System.Int32)
  name: AddPostsListenerClient<TNewPostConsumer>(IServiceCollectionBusConfigurator, Int32)
  href: api/PostsListener.Client.ServiceCollectionExtensions.html#PostsListener_Client_ServiceCollectionExtensions_AddPostsListenerClient__1_IServiceCollectionBusConfigurator_System_Int32_
  commentId: M:PostsListener.Client.ServiceCollectionExtensions.AddPostsListenerClient``1(IServiceCollectionBusConfigurator,System.Int32)
  name.vb: AddPostsListenerClient(Of TNewPostConsumer)(IServiceCollectionBusConfigurator, Int32)
  fullName: PostsListener.Client.ServiceCollectionExtensions.AddPostsListenerClient<TNewPostConsumer>(IServiceCollectionBusConfigurator, System.Int32)
  fullName.vb: PostsListener.Client.ServiceCollectionExtensions.AddPostsListenerClient(Of TNewPostConsumer)(IServiceCollectionBusConfigurator, System.Int32)
  nameWithType: ServiceCollectionExtensions.AddPostsListenerClient<TNewPostConsumer>(IServiceCollectionBusConfigurator, Int32)
  nameWithType.vb: ServiceCollectionExtensions.AddPostsListenerClient(Of TNewPostConsumer)(IServiceCollectionBusConfigurator, Int32)
- uid: PostsListener.GetNewPostSubscriptionsConsumer
  name: GetNewPostSubscriptionsConsumer
  href: api/PostsListener.GetNewPostSubscriptionsConsumer.html
  commentId: T:PostsListener.GetNewPostSubscriptionsConsumer
  fullName: PostsListener.GetNewPostSubscriptionsConsumer
  nameWithType: GetNewPostSubscriptionsConsumer
- uid: PostsListener.GetNewPostSubscriptionsConsumer.#ctor(PostsListener.ISubscriptionsManager)
  name: GetNewPostSubscriptionsConsumer(ISubscriptionsManager)
  href: api/PostsListener.GetNewPostSubscriptionsConsumer.html#PostsListener_GetNewPostSubscriptionsConsumer__ctor_PostsListener_ISubscriptionsManager_
  commentId: M:PostsListener.GetNewPostSubscriptionsConsumer.#ctor(PostsListener.ISubscriptionsManager)
  fullName: PostsListener.GetNewPostSubscriptionsConsumer.GetNewPostSubscriptionsConsumer(PostsListener.ISubscriptionsManager)
  nameWithType: GetNewPostSubscriptionsConsumer.GetNewPostSubscriptionsConsumer(ISubscriptionsManager)
- uid: PostsListener.GetNewPostSubscriptionsConsumer.#ctor*
  name: GetNewPostSubscriptionsConsumer
  href: api/PostsListener.GetNewPostSubscriptionsConsumer.html#PostsListener_GetNewPostSubscriptionsConsumer__ctor_
  commentId: Overload:PostsListener.GetNewPostSubscriptionsConsumer.#ctor
  isSpec: "True"
  fullName: PostsListener.GetNewPostSubscriptionsConsumer.GetNewPostSubscriptionsConsumer
  nameWithType: GetNewPostSubscriptionsConsumer.GetNewPostSubscriptionsConsumer
- uid: PostsListener.GetNewPostSubscriptionsConsumer.Consume(ConsumeContext{GetNewPostSubscriptions})
  name: Consume(ConsumeContext<GetNewPostSubscriptions>)
  href: api/PostsListener.GetNewPostSubscriptionsConsumer.html#PostsListener_GetNewPostSubscriptionsConsumer_Consume_ConsumeContext_GetNewPostSubscriptions__
  commentId: M:PostsListener.GetNewPostSubscriptionsConsumer.Consume(ConsumeContext{GetNewPostSubscriptions})
  name.vb: Consume(ConsumeContext(Of GetNewPostSubscriptions))
  fullName: PostsListener.GetNewPostSubscriptionsConsumer.Consume(ConsumeContext<GetNewPostSubscriptions>)
  fullName.vb: PostsListener.GetNewPostSubscriptionsConsumer.Consume(ConsumeContext(Of GetNewPostSubscriptions))
  nameWithType: GetNewPostSubscriptionsConsumer.Consume(ConsumeContext<GetNewPostSubscriptions>)
  nameWithType.vb: GetNewPostSubscriptionsConsumer.Consume(ConsumeContext(Of GetNewPostSubscriptions))
- uid: PostsListener.GetNewPostSubscriptionsConsumer.Consume*
  name: Consume
  href: api/PostsListener.GetNewPostSubscriptionsConsumer.html#PostsListener_GetNewPostSubscriptionsConsumer_Consume_
  commentId: Overload:PostsListener.GetNewPostSubscriptionsConsumer.Consume
  isSpec: "True"
  fullName: PostsListener.GetNewPostSubscriptionsConsumer.Consume
  nameWithType: GetNewPostSubscriptionsConsumer.Consume
- uid: PostsListener.ILastPostsPersistence
  name: ILastPostsPersistence
  href: api/PostsListener.ILastPostsPersistence.html
  commentId: T:PostsListener.ILastPostsPersistence
  fullName: PostsListener.ILastPostsPersistence
  nameWithType: ILastPostsPersistence
- uid: PostsListener.ILastPostsPersistence.AddOrUpdateAsync(System.String,System.String,DateTime,CancellationToken)
  name: AddOrUpdateAsync(String, String, DateTime, CancellationToken)
  href: api/PostsListener.ILastPostsPersistence.html#PostsListener_ILastPostsPersistence_AddOrUpdateAsync_System_String_System_String_DateTime_CancellationToken_
  commentId: M:PostsListener.ILastPostsPersistence.AddOrUpdateAsync(System.String,System.String,DateTime,CancellationToken)
  fullName: PostsListener.ILastPostsPersistence.AddOrUpdateAsync(System.String, System.String, DateTime, CancellationToken)
  nameWithType: ILastPostsPersistence.AddOrUpdateAsync(String, String, DateTime, CancellationToken)
- uid: PostsListener.ILastPostsPersistence.AddOrUpdateAsync*
  name: AddOrUpdateAsync
  href: api/PostsListener.ILastPostsPersistence.html#PostsListener_ILastPostsPersistence_AddOrUpdateAsync_
  commentId: Overload:PostsListener.ILastPostsPersistence.AddOrUpdateAsync
  isSpec: "True"
  fullName: PostsListener.ILastPostsPersistence.AddOrUpdateAsync
  nameWithType: ILastPostsPersistence.AddOrUpdateAsync
- uid: PostsListener.ILastPostsPersistence.GetAsync(CancellationToken)
  name: GetAsync(CancellationToken)
  href: api/PostsListener.ILastPostsPersistence.html#PostsListener_ILastPostsPersistence_GetAsync_CancellationToken_
  commentId: M:PostsListener.ILastPostsPersistence.GetAsync(CancellationToken)
  fullName: PostsListener.ILastPostsPersistence.GetAsync(CancellationToken)
  nameWithType: ILastPostsPersistence.GetAsync(CancellationToken)
- uid: PostsListener.ILastPostsPersistence.GetAsync(System.String,System.String,CancellationToken)
  name: GetAsync(String, String, CancellationToken)
  href: api/PostsListener.ILastPostsPersistence.html#PostsListener_ILastPostsPersistence_GetAsync_System_String_System_String_CancellationToken_
  commentId: M:PostsListener.ILastPostsPersistence.GetAsync(System.String,System.String,CancellationToken)
  fullName: PostsListener.ILastPostsPersistence.GetAsync(System.String, System.String, CancellationToken)
  nameWithType: ILastPostsPersistence.GetAsync(String, String, CancellationToken)
- uid: PostsListener.ILastPostsPersistence.GetAsync*
  name: GetAsync
  href: api/PostsListener.ILastPostsPersistence.html#PostsListener_ILastPostsPersistence_GetAsync_
  commentId: Overload:PostsListener.ILastPostsPersistence.GetAsync
  isSpec: "True"
  fullName: PostsListener.ILastPostsPersistence.GetAsync
  nameWithType: ILastPostsPersistence.GetAsync
- uid: PostsListener.ILastPostsPersistence.RemoveAsync(LastPost,CancellationToken)
  name: RemoveAsync(LastPost, CancellationToken)
  href: api/PostsListener.ILastPostsPersistence.html#PostsListener_ILastPostsPersistence_RemoveAsync_LastPost_CancellationToken_
  commentId: M:PostsListener.ILastPostsPersistence.RemoveAsync(LastPost,CancellationToken)
  fullName: PostsListener.ILastPostsPersistence.RemoveAsync(LastPost, CancellationToken)
  nameWithType: ILastPostsPersistence.RemoveAsync(LastPost, CancellationToken)
- uid: PostsListener.ILastPostsPersistence.RemoveAsync*
  name: RemoveAsync
  href: api/PostsListener.ILastPostsPersistence.html#PostsListener_ILastPostsPersistence_RemoveAsync_
  commentId: Overload:PostsListener.ILastPostsPersistence.RemoveAsync
  isSpec: "True"
  fullName: PostsListener.ILastPostsPersistence.RemoveAsync
  nameWithType: ILastPostsPersistence.RemoveAsync
- uid: PostsListener.InMemoryLastPostsPersistence
  name: InMemoryLastPostsPersistence
  href: api/PostsListener.InMemoryLastPostsPersistence.html
  commentId: T:PostsListener.InMemoryLastPostsPersistence
  fullName: PostsListener.InMemoryLastPostsPersistence
  nameWithType: InMemoryLastPostsPersistence
- uid: PostsListener.InMemoryLastPostsPersistence.#ctor(ILogger{PostsListener.InMemoryLastPostsPersistence})
  name: InMemoryLastPostsPersistence(ILogger<InMemoryLastPostsPersistence>)
  href: api/PostsListener.InMemoryLastPostsPersistence.html#PostsListener_InMemoryLastPostsPersistence__ctor_ILogger_PostsListener_InMemoryLastPostsPersistence__
  commentId: M:PostsListener.InMemoryLastPostsPersistence.#ctor(ILogger{PostsListener.InMemoryLastPostsPersistence})
  name.vb: InMemoryLastPostsPersistence(ILogger(Of InMemoryLastPostsPersistence))
  fullName: PostsListener.InMemoryLastPostsPersistence.InMemoryLastPostsPersistence(ILogger<PostsListener.InMemoryLastPostsPersistence>)
  fullName.vb: PostsListener.InMemoryLastPostsPersistence.InMemoryLastPostsPersistence(ILogger(Of PostsListener.InMemoryLastPostsPersistence))
  nameWithType: InMemoryLastPostsPersistence.InMemoryLastPostsPersistence(ILogger<InMemoryLastPostsPersistence>)
  nameWithType.vb: InMemoryLastPostsPersistence.InMemoryLastPostsPersistence(ILogger(Of InMemoryLastPostsPersistence))
- uid: PostsListener.InMemoryLastPostsPersistence.#ctor*
  name: InMemoryLastPostsPersistence
  href: api/PostsListener.InMemoryLastPostsPersistence.html#PostsListener_InMemoryLastPostsPersistence__ctor_
  commentId: Overload:PostsListener.InMemoryLastPostsPersistence.#ctor
  isSpec: "True"
  fullName: PostsListener.InMemoryLastPostsPersistence.InMemoryLastPostsPersistence
  nameWithType: InMemoryLastPostsPersistence.InMemoryLastPostsPersistence
- uid: PostsListener.InMemoryLastPostsPersistence.AddOrUpdateAsync(System.String,System.String,DateTime,CancellationToken)
  name: AddOrUpdateAsync(String, String, DateTime, CancellationToken)
  href: api/PostsListener.InMemoryLastPostsPersistence.html#PostsListener_InMemoryLastPostsPersistence_AddOrUpdateAsync_System_String_System_String_DateTime_CancellationToken_
  commentId: M:PostsListener.InMemoryLastPostsPersistence.AddOrUpdateAsync(System.String,System.String,DateTime,CancellationToken)
  fullName: PostsListener.InMemoryLastPostsPersistence.AddOrUpdateAsync(System.String, System.String, DateTime, CancellationToken)
  nameWithType: InMemoryLastPostsPersistence.AddOrUpdateAsync(String, String, DateTime, CancellationToken)
- uid: PostsListener.InMemoryLastPostsPersistence.AddOrUpdateAsync*
  name: AddOrUpdateAsync
  href: api/PostsListener.InMemoryLastPostsPersistence.html#PostsListener_InMemoryLastPostsPersistence_AddOrUpdateAsync_
  commentId: Overload:PostsListener.InMemoryLastPostsPersistence.AddOrUpdateAsync
  isSpec: "True"
  fullName: PostsListener.InMemoryLastPostsPersistence.AddOrUpdateAsync
  nameWithType: InMemoryLastPostsPersistence.AddOrUpdateAsync
- uid: PostsListener.InMemoryLastPostsPersistence.GetAsync(CancellationToken)
  name: GetAsync(CancellationToken)
  href: api/PostsListener.InMemoryLastPostsPersistence.html#PostsListener_InMemoryLastPostsPersistence_GetAsync_CancellationToken_
  commentId: M:PostsListener.InMemoryLastPostsPersistence.GetAsync(CancellationToken)
  fullName: PostsListener.InMemoryLastPostsPersistence.GetAsync(CancellationToken)
  nameWithType: InMemoryLastPostsPersistence.GetAsync(CancellationToken)
- uid: PostsListener.InMemoryLastPostsPersistence.GetAsync(System.String,System.String,CancellationToken)
  name: GetAsync(String, String, CancellationToken)
  href: api/PostsListener.InMemoryLastPostsPersistence.html#PostsListener_InMemoryLastPostsPersistence_GetAsync_System_String_System_String_CancellationToken_
  commentId: M:PostsListener.InMemoryLastPostsPersistence.GetAsync(System.String,System.String,CancellationToken)
  fullName: PostsListener.InMemoryLastPostsPersistence.GetAsync(System.String, System.String, CancellationToken)
  nameWithType: InMemoryLastPostsPersistence.GetAsync(String, String, CancellationToken)
- uid: PostsListener.InMemoryLastPostsPersistence.GetAsync*
  name: GetAsync
  href: api/PostsListener.InMemoryLastPostsPersistence.html#PostsListener_InMemoryLastPostsPersistence_GetAsync_
  commentId: Overload:PostsListener.InMemoryLastPostsPersistence.GetAsync
  isSpec: "True"
  fullName: PostsListener.InMemoryLastPostsPersistence.GetAsync
  nameWithType: InMemoryLastPostsPersistence.GetAsync
- uid: PostsListener.InMemoryLastPostsPersistence.RemoveAsync(LastPost,CancellationToken)
  name: RemoveAsync(LastPost, CancellationToken)
  href: api/PostsListener.InMemoryLastPostsPersistence.html#PostsListener_InMemoryLastPostsPersistence_RemoveAsync_LastPost_CancellationToken_
  commentId: M:PostsListener.InMemoryLastPostsPersistence.RemoveAsync(LastPost,CancellationToken)
  fullName: PostsListener.InMemoryLastPostsPersistence.RemoveAsync(LastPost, CancellationToken)
  nameWithType: InMemoryLastPostsPersistence.RemoveAsync(LastPost, CancellationToken)
- uid: PostsListener.InMemoryLastPostsPersistence.RemoveAsync*
  name: RemoveAsync
  href: api/PostsListener.InMemoryLastPostsPersistence.html#PostsListener_InMemoryLastPostsPersistence_RemoveAsync_
  commentId: Overload:PostsListener.InMemoryLastPostsPersistence.RemoveAsync
  isSpec: "True"
  fullName: PostsListener.InMemoryLastPostsPersistence.RemoveAsync
  nameWithType: InMemoryLastPostsPersistence.RemoveAsync
- uid: PostsListener.InMemoryPostUrlsPersistence
  name: InMemoryPostUrlsPersistence
  href: api/PostsListener.InMemoryPostUrlsPersistence.html
  commentId: T:PostsListener.InMemoryPostUrlsPersistence
  fullName: PostsListener.InMemoryPostUrlsPersistence
  nameWithType: InMemoryPostUrlsPersistence
- uid: PostsListener.InMemoryPostUrlsPersistence.#ctor(ILogger{PostsListener.InMemoryPostUrlsPersistence})
  name: InMemoryPostUrlsPersistence(ILogger<InMemoryPostUrlsPersistence>)
  href: api/PostsListener.InMemoryPostUrlsPersistence.html#PostsListener_InMemoryPostUrlsPersistence__ctor_ILogger_PostsListener_InMemoryPostUrlsPersistence__
  commentId: M:PostsListener.InMemoryPostUrlsPersistence.#ctor(ILogger{PostsListener.InMemoryPostUrlsPersistence})
  name.vb: InMemoryPostUrlsPersistence(ILogger(Of InMemoryPostUrlsPersistence))
  fullName: PostsListener.InMemoryPostUrlsPersistence.InMemoryPostUrlsPersistence(ILogger<PostsListener.InMemoryPostUrlsPersistence>)
  fullName.vb: PostsListener.InMemoryPostUrlsPersistence.InMemoryPostUrlsPersistence(ILogger(Of PostsListener.InMemoryPostUrlsPersistence))
  nameWithType: InMemoryPostUrlsPersistence.InMemoryPostUrlsPersistence(ILogger<InMemoryPostUrlsPersistence>)
  nameWithType.vb: InMemoryPostUrlsPersistence.InMemoryPostUrlsPersistence(ILogger(Of InMemoryPostUrlsPersistence))
- uid: PostsListener.InMemoryPostUrlsPersistence.#ctor*
  name: InMemoryPostUrlsPersistence
  href: api/PostsListener.InMemoryPostUrlsPersistence.html#PostsListener_InMemoryPostUrlsPersistence__ctor_
  commentId: Overload:PostsListener.InMemoryPostUrlsPersistence.#ctor
  isSpec: "True"
  fullName: PostsListener.InMemoryPostUrlsPersistence.InMemoryPostUrlsPersistence
  nameWithType: InMemoryPostUrlsPersistence.InMemoryPostUrlsPersistence
- uid: PostsListener.InMemoryPostUrlsPersistence.AddAsync(System.String,CancellationToken)
  name: AddAsync(String, CancellationToken)
  href: api/PostsListener.InMemoryPostUrlsPersistence.html#PostsListener_InMemoryPostUrlsPersistence_AddAsync_System_String_CancellationToken_
  commentId: M:PostsListener.InMemoryPostUrlsPersistence.AddAsync(System.String,CancellationToken)
  fullName: PostsListener.InMemoryPostUrlsPersistence.AddAsync(System.String, CancellationToken)
  nameWithType: InMemoryPostUrlsPersistence.AddAsync(String, CancellationToken)
- uid: PostsListener.InMemoryPostUrlsPersistence.AddAsync*
  name: AddAsync
  href: api/PostsListener.InMemoryPostUrlsPersistence.html#PostsListener_InMemoryPostUrlsPersistence_AddAsync_
  commentId: Overload:PostsListener.InMemoryPostUrlsPersistence.AddAsync
  isSpec: "True"
  fullName: PostsListener.InMemoryPostUrlsPersistence.AddAsync
  nameWithType: InMemoryPostUrlsPersistence.AddAsync
- uid: PostsListener.InMemoryPostUrlsPersistence.ExistsAsync(System.String,CancellationToken)
  name: ExistsAsync(String, CancellationToken)
  href: api/PostsListener.InMemoryPostUrlsPersistence.html#PostsListener_InMemoryPostUrlsPersistence_ExistsAsync_System_String_CancellationToken_
  commentId: M:PostsListener.InMemoryPostUrlsPersistence.ExistsAsync(System.String,CancellationToken)
  fullName: PostsListener.InMemoryPostUrlsPersistence.ExistsAsync(System.String, CancellationToken)
  nameWithType: InMemoryPostUrlsPersistence.ExistsAsync(String, CancellationToken)
- uid: PostsListener.InMemoryPostUrlsPersistence.ExistsAsync*
  name: ExistsAsync
  href: api/PostsListener.InMemoryPostUrlsPersistence.html#PostsListener_InMemoryPostUrlsPersistence_ExistsAsync_
  commentId: Overload:PostsListener.InMemoryPostUrlsPersistence.ExistsAsync
  isSpec: "True"
  fullName: PostsListener.InMemoryPostUrlsPersistence.ExistsAsync
  nameWithType: InMemoryPostUrlsPersistence.ExistsAsync
- uid: PostsListener.InMemoryPostUrlsPersistence.RemoveAsync(System.String,CancellationToken)
  name: RemoveAsync(String, CancellationToken)
  href: api/PostsListener.InMemoryPostUrlsPersistence.html#PostsListener_InMemoryPostUrlsPersistence_RemoveAsync_System_String_CancellationToken_
  commentId: M:PostsListener.InMemoryPostUrlsPersistence.RemoveAsync(System.String,CancellationToken)
  fullName: PostsListener.InMemoryPostUrlsPersistence.RemoveAsync(System.String, CancellationToken)
  nameWithType: InMemoryPostUrlsPersistence.RemoveAsync(String, CancellationToken)
- uid: PostsListener.InMemoryPostUrlsPersistence.RemoveAsync*
  name: RemoveAsync
  href: api/PostsListener.InMemoryPostUrlsPersistence.html#PostsListener_InMemoryPostUrlsPersistence_RemoveAsync_
  commentId: Overload:PostsListener.InMemoryPostUrlsPersistence.RemoveAsync
  isSpec: "True"
  fullName: PostsListener.InMemoryPostUrlsPersistence.RemoveAsync
  nameWithType: InMemoryPostUrlsPersistence.RemoveAsync
- uid: PostsListener.InMemorySubscriptionsPersistence
  name: InMemorySubscriptionsPersistence
  href: api/PostsListener.InMemorySubscriptionsPersistence.html
  commentId: T:PostsListener.InMemorySubscriptionsPersistence
  fullName: PostsListener.InMemorySubscriptionsPersistence
  nameWithType: InMemorySubscriptionsPersistence
- uid: PostsListener.InMemorySubscriptionsPersistence.#ctor(ILogger{PostsListener.InMemorySubscriptionsPersistence})
  name: InMemorySubscriptionsPersistence(ILogger<InMemorySubscriptionsPersistence>)
  href: api/PostsListener.InMemorySubscriptionsPersistence.html#PostsListener_InMemorySubscriptionsPersistence__ctor_ILogger_PostsListener_InMemorySubscriptionsPersistence__
  commentId: M:PostsListener.InMemorySubscriptionsPersistence.#ctor(ILogger{PostsListener.InMemorySubscriptionsPersistence})
  name.vb: InMemorySubscriptionsPersistence(ILogger(Of InMemorySubscriptionsPersistence))
  fullName: PostsListener.InMemorySubscriptionsPersistence.InMemorySubscriptionsPersistence(ILogger<PostsListener.InMemorySubscriptionsPersistence>)
  fullName.vb: PostsListener.InMemorySubscriptionsPersistence.InMemorySubscriptionsPersistence(ILogger(Of PostsListener.InMemorySubscriptionsPersistence))
  nameWithType: InMemorySubscriptionsPersistence.InMemorySubscriptionsPersistence(ILogger<InMemorySubscriptionsPersistence>)
  nameWithType.vb: InMemorySubscriptionsPersistence.InMemorySubscriptionsPersistence(ILogger(Of InMemorySubscriptionsPersistence))
- uid: PostsListener.InMemorySubscriptionsPersistence.#ctor*
  name: InMemorySubscriptionsPersistence
  href: api/PostsListener.InMemorySubscriptionsPersistence.html#PostsListener_InMemorySubscriptionsPersistence__ctor_
  commentId: Overload:PostsListener.InMemorySubscriptionsPersistence.#ctor
  isSpec: "True"
  fullName: PostsListener.InMemorySubscriptionsPersistence.InMemorySubscriptionsPersistence
  nameWithType: InMemorySubscriptionsPersistence.InMemorySubscriptionsPersistence
- uid: PostsListener.InMemorySubscriptionsPersistence.AddOrUpdateAsync(SubscriptionEntity,CancellationToken)
  name: AddOrUpdateAsync(SubscriptionEntity, CancellationToken)
  href: api/PostsListener.InMemorySubscriptionsPersistence.html#PostsListener_InMemorySubscriptionsPersistence_AddOrUpdateAsync_SubscriptionEntity_CancellationToken_
  commentId: M:PostsListener.InMemorySubscriptionsPersistence.AddOrUpdateAsync(SubscriptionEntity,CancellationToken)
  fullName: PostsListener.InMemorySubscriptionsPersistence.AddOrUpdateAsync(SubscriptionEntity, CancellationToken)
  nameWithType: InMemorySubscriptionsPersistence.AddOrUpdateAsync(SubscriptionEntity, CancellationToken)
- uid: PostsListener.InMemorySubscriptionsPersistence.AddOrUpdateAsync*
  name: AddOrUpdateAsync
  href: api/PostsListener.InMemorySubscriptionsPersistence.html#PostsListener_InMemorySubscriptionsPersistence_AddOrUpdateAsync_
  commentId: Overload:PostsListener.InMemorySubscriptionsPersistence.AddOrUpdateAsync
  isSpec: "True"
  fullName: PostsListener.InMemorySubscriptionsPersistence.AddOrUpdateAsync
  nameWithType: InMemorySubscriptionsPersistence.AddOrUpdateAsync
- uid: PostsListener.InMemorySubscriptionsPersistence.GetAsync(CancellationToken)
  name: GetAsync(CancellationToken)
  href: api/PostsListener.InMemorySubscriptionsPersistence.html#PostsListener_InMemorySubscriptionsPersistence_GetAsync_CancellationToken_
  commentId: M:PostsListener.InMemorySubscriptionsPersistence.GetAsync(CancellationToken)
  fullName: PostsListener.InMemorySubscriptionsPersistence.GetAsync(CancellationToken)
  nameWithType: InMemorySubscriptionsPersistence.GetAsync(CancellationToken)
- uid: PostsListener.InMemorySubscriptionsPersistence.GetAsync(System.String,System.String,CancellationToken)
  name: GetAsync(String, String, CancellationToken)
  href: api/PostsListener.InMemorySubscriptionsPersistence.html#PostsListener_InMemorySubscriptionsPersistence_GetAsync_System_String_System_String_CancellationToken_
  commentId: M:PostsListener.InMemorySubscriptionsPersistence.GetAsync(System.String,System.String,CancellationToken)
  fullName: PostsListener.InMemorySubscriptionsPersistence.GetAsync(System.String, System.String, CancellationToken)
  nameWithType: InMemorySubscriptionsPersistence.GetAsync(String, String, CancellationToken)
- uid: PostsListener.InMemorySubscriptionsPersistence.GetAsync*
  name: GetAsync
  href: api/PostsListener.InMemorySubscriptionsPersistence.html#PostsListener_InMemorySubscriptionsPersistence_GetAsync_
  commentId: Overload:PostsListener.InMemorySubscriptionsPersistence.GetAsync
  isSpec: "True"
  fullName: PostsListener.InMemorySubscriptionsPersistence.GetAsync
  nameWithType: InMemorySubscriptionsPersistence.GetAsync
- uid: PostsListener.InMemorySubscriptionsPersistence.RemoveAsync(SubscriptionEntity,CancellationToken)
  name: RemoveAsync(SubscriptionEntity, CancellationToken)
  href: api/PostsListener.InMemorySubscriptionsPersistence.html#PostsListener_InMemorySubscriptionsPersistence_RemoveAsync_SubscriptionEntity_CancellationToken_
  commentId: M:PostsListener.InMemorySubscriptionsPersistence.RemoveAsync(SubscriptionEntity,CancellationToken)
  fullName: PostsListener.InMemorySubscriptionsPersistence.RemoveAsync(SubscriptionEntity, CancellationToken)
  nameWithType: InMemorySubscriptionsPersistence.RemoveAsync(SubscriptionEntity, CancellationToken)
- uid: PostsListener.InMemorySubscriptionsPersistence.RemoveAsync*
  name: RemoveAsync
  href: api/PostsListener.InMemorySubscriptionsPersistence.html#PostsListener_InMemorySubscriptionsPersistence_RemoveAsync_
  commentId: Overload:PostsListener.InMemorySubscriptionsPersistence.RemoveAsync
  isSpec: "True"
  fullName: PostsListener.InMemorySubscriptionsPersistence.RemoveAsync
  nameWithType: InMemorySubscriptionsPersistence.RemoveAsync
- uid: PostsListener.IPostUrlsPersistence
  name: IPostUrlsPersistence
  href: api/PostsListener.IPostUrlsPersistence.html
  commentId: T:PostsListener.IPostUrlsPersistence
  fullName: PostsListener.IPostUrlsPersistence
  nameWithType: IPostUrlsPersistence
- uid: PostsListener.IPostUrlsPersistence.AddAsync(System.String,CancellationToken)
  name: AddAsync(String, CancellationToken)
  href: api/PostsListener.IPostUrlsPersistence.html#PostsListener_IPostUrlsPersistence_AddAsync_System_String_CancellationToken_
  commentId: M:PostsListener.IPostUrlsPersistence.AddAsync(System.String,CancellationToken)
  fullName: PostsListener.IPostUrlsPersistence.AddAsync(System.String, CancellationToken)
  nameWithType: IPostUrlsPersistence.AddAsync(String, CancellationToken)
- uid: PostsListener.IPostUrlsPersistence.AddAsync*
  name: AddAsync
  href: api/PostsListener.IPostUrlsPersistence.html#PostsListener_IPostUrlsPersistence_AddAsync_
  commentId: Overload:PostsListener.IPostUrlsPersistence.AddAsync
  isSpec: "True"
  fullName: PostsListener.IPostUrlsPersistence.AddAsync
  nameWithType: IPostUrlsPersistence.AddAsync
- uid: PostsListener.IPostUrlsPersistence.ExistsAsync(System.String,CancellationToken)
  name: ExistsAsync(String, CancellationToken)
  href: api/PostsListener.IPostUrlsPersistence.html#PostsListener_IPostUrlsPersistence_ExistsAsync_System_String_CancellationToken_
  commentId: M:PostsListener.IPostUrlsPersistence.ExistsAsync(System.String,CancellationToken)
  fullName: PostsListener.IPostUrlsPersistence.ExistsAsync(System.String, CancellationToken)
  nameWithType: IPostUrlsPersistence.ExistsAsync(String, CancellationToken)
- uid: PostsListener.IPostUrlsPersistence.ExistsAsync*
  name: ExistsAsync
  href: api/PostsListener.IPostUrlsPersistence.html#PostsListener_IPostUrlsPersistence_ExistsAsync_
  commentId: Overload:PostsListener.IPostUrlsPersistence.ExistsAsync
  isSpec: "True"
  fullName: PostsListener.IPostUrlsPersistence.ExistsAsync
  nameWithType: IPostUrlsPersistence.ExistsAsync
- uid: PostsListener.IPostUrlsPersistence.RemoveAsync(System.String,CancellationToken)
  name: RemoveAsync(String, CancellationToken)
  href: api/PostsListener.IPostUrlsPersistence.html#PostsListener_IPostUrlsPersistence_RemoveAsync_System_String_CancellationToken_
  commentId: M:PostsListener.IPostUrlsPersistence.RemoveAsync(System.String,CancellationToken)
  fullName: PostsListener.IPostUrlsPersistence.RemoveAsync(System.String, CancellationToken)
  nameWithType: IPostUrlsPersistence.RemoveAsync(String, CancellationToken)
- uid: PostsListener.IPostUrlsPersistence.RemoveAsync*
  name: RemoveAsync
  href: api/PostsListener.IPostUrlsPersistence.html#PostsListener_IPostUrlsPersistence_RemoveAsync_
  commentId: Overload:PostsListener.IPostUrlsPersistence.RemoveAsync
  isSpec: "True"
  fullName: PostsListener.IPostUrlsPersistence.RemoveAsync
  nameWithType: IPostUrlsPersistence.RemoveAsync
- uid: PostsListener.ISubscriptionsManager
  name: ISubscriptionsManager
  href: api/PostsListener.ISubscriptionsManager.html
  commentId: T:PostsListener.ISubscriptionsManager
  fullName: PostsListener.ISubscriptionsManager
  nameWithType: ISubscriptionsManager
- uid: PostsListener.ISubscriptionsManager.AddOrUpdateAsync(Subscription,System.Nullable{DateTime},CancellationToken)
  name: AddOrUpdateAsync(Subscription, Nullable<DateTime>, CancellationToken)
  href: api/PostsListener.ISubscriptionsManager.html#PostsListener_ISubscriptionsManager_AddOrUpdateAsync_Subscription_System_Nullable_DateTime__CancellationToken_
  commentId: M:PostsListener.ISubscriptionsManager.AddOrUpdateAsync(Subscription,System.Nullable{DateTime},CancellationToken)
  name.vb: AddOrUpdateAsync(Subscription, Nullable(Of DateTime), CancellationToken)
  fullName: PostsListener.ISubscriptionsManager.AddOrUpdateAsync(Subscription, System.Nullable<DateTime>, CancellationToken)
  fullName.vb: PostsListener.ISubscriptionsManager.AddOrUpdateAsync(Subscription, System.Nullable(Of DateTime), CancellationToken)
  nameWithType: ISubscriptionsManager.AddOrUpdateAsync(Subscription, Nullable<DateTime>, CancellationToken)
  nameWithType.vb: ISubscriptionsManager.AddOrUpdateAsync(Subscription, Nullable(Of DateTime), CancellationToken)
- uid: PostsListener.ISubscriptionsManager.AddOrUpdateAsync*
  name: AddOrUpdateAsync
  href: api/PostsListener.ISubscriptionsManager.html#PostsListener_ISubscriptionsManager_AddOrUpdateAsync_
  commentId: Overload:PostsListener.ISubscriptionsManager.AddOrUpdateAsync
  isSpec: "True"
  fullName: PostsListener.ISubscriptionsManager.AddOrUpdateAsync
  nameWithType: ISubscriptionsManager.AddOrUpdateAsync
- uid: PostsListener.ISubscriptionsManager.Get
  name: Get()
  href: api/PostsListener.ISubscriptionsManager.html#PostsListener_ISubscriptionsManager_Get
  commentId: M:PostsListener.ISubscriptionsManager.Get
  fullName: PostsListener.ISubscriptionsManager.Get()
  nameWithType: ISubscriptionsManager.Get()
- uid: PostsListener.ISubscriptionsManager.Get*
  name: Get
  href: api/PostsListener.ISubscriptionsManager.html#PostsListener_ISubscriptionsManager_Get_
  commentId: Overload:PostsListener.ISubscriptionsManager.Get
  isSpec: "True"
  fullName: PostsListener.ISubscriptionsManager.Get
  nameWithType: ISubscriptionsManager.Get
- uid: PostsListener.ISubscriptionsManager.RemoveAsync(Subscription,CancellationToken)
  name: RemoveAsync(Subscription, CancellationToken)
  href: api/PostsListener.ISubscriptionsManager.html#PostsListener_ISubscriptionsManager_RemoveAsync_Subscription_CancellationToken_
  commentId: M:PostsListener.ISubscriptionsManager.RemoveAsync(Subscription,CancellationToken)
  fullName: PostsListener.ISubscriptionsManager.RemoveAsync(Subscription, CancellationToken)
  nameWithType: ISubscriptionsManager.RemoveAsync(Subscription, CancellationToken)
- uid: PostsListener.ISubscriptionsManager.RemoveAsync*
  name: RemoveAsync
  href: api/PostsListener.ISubscriptionsManager.html#PostsListener_ISubscriptionsManager_RemoveAsync_
  commentId: Overload:PostsListener.ISubscriptionsManager.RemoveAsync
  isSpec: "True"
  fullName: PostsListener.ISubscriptionsManager.RemoveAsync
  nameWithType: ISubscriptionsManager.RemoveAsync
- uid: PostsListener.ISubscriptionsPersistence
  name: ISubscriptionsPersistence
  href: api/PostsListener.ISubscriptionsPersistence.html
  commentId: T:PostsListener.ISubscriptionsPersistence
  fullName: PostsListener.ISubscriptionsPersistence
  nameWithType: ISubscriptionsPersistence
- uid: PostsListener.ISubscriptionsPersistence.AddOrUpdateAsync(SubscriptionEntity,CancellationToken)
  name: AddOrUpdateAsync(SubscriptionEntity, CancellationToken)
  href: api/PostsListener.ISubscriptionsPersistence.html#PostsListener_ISubscriptionsPersistence_AddOrUpdateAsync_SubscriptionEntity_CancellationToken_
  commentId: M:PostsListener.ISubscriptionsPersistence.AddOrUpdateAsync(SubscriptionEntity,CancellationToken)
  fullName: PostsListener.ISubscriptionsPersistence.AddOrUpdateAsync(SubscriptionEntity, CancellationToken)
  nameWithType: ISubscriptionsPersistence.AddOrUpdateAsync(SubscriptionEntity, CancellationToken)
- uid: PostsListener.ISubscriptionsPersistence.AddOrUpdateAsync*
  name: AddOrUpdateAsync
  href: api/PostsListener.ISubscriptionsPersistence.html#PostsListener_ISubscriptionsPersistence_AddOrUpdateAsync_
  commentId: Overload:PostsListener.ISubscriptionsPersistence.AddOrUpdateAsync
  isSpec: "True"
  fullName: PostsListener.ISubscriptionsPersistence.AddOrUpdateAsync
  nameWithType: ISubscriptionsPersistence.AddOrUpdateAsync
- uid: PostsListener.ISubscriptionsPersistence.GetAsync(CancellationToken)
  name: GetAsync(CancellationToken)
  href: api/PostsListener.ISubscriptionsPersistence.html#PostsListener_ISubscriptionsPersistence_GetAsync_CancellationToken_
  commentId: M:PostsListener.ISubscriptionsPersistence.GetAsync(CancellationToken)
  fullName: PostsListener.ISubscriptionsPersistence.GetAsync(CancellationToken)
  nameWithType: ISubscriptionsPersistence.GetAsync(CancellationToken)
- uid: PostsListener.ISubscriptionsPersistence.GetAsync(System.String,System.String,CancellationToken)
  name: GetAsync(String, String, CancellationToken)
  href: api/PostsListener.ISubscriptionsPersistence.html#PostsListener_ISubscriptionsPersistence_GetAsync_System_String_System_String_CancellationToken_
  commentId: M:PostsListener.ISubscriptionsPersistence.GetAsync(System.String,System.String,CancellationToken)
  fullName: PostsListener.ISubscriptionsPersistence.GetAsync(System.String, System.String, CancellationToken)
  nameWithType: ISubscriptionsPersistence.GetAsync(String, String, CancellationToken)
- uid: PostsListener.ISubscriptionsPersistence.GetAsync*
  name: GetAsync
  href: api/PostsListener.ISubscriptionsPersistence.html#PostsListener_ISubscriptionsPersistence_GetAsync_
  commentId: Overload:PostsListener.ISubscriptionsPersistence.GetAsync
  isSpec: "True"
  fullName: PostsListener.ISubscriptionsPersistence.GetAsync
  nameWithType: ISubscriptionsPersistence.GetAsync
- uid: PostsListener.ISubscriptionsPersistence.RemoveAsync(SubscriptionEntity,CancellationToken)
  name: RemoveAsync(SubscriptionEntity, CancellationToken)
  href: api/PostsListener.ISubscriptionsPersistence.html#PostsListener_ISubscriptionsPersistence_RemoveAsync_SubscriptionEntity_CancellationToken_
  commentId: M:PostsListener.ISubscriptionsPersistence.RemoveAsync(SubscriptionEntity,CancellationToken)
  fullName: PostsListener.ISubscriptionsPersistence.RemoveAsync(SubscriptionEntity, CancellationToken)
  nameWithType: ISubscriptionsPersistence.RemoveAsync(SubscriptionEntity, CancellationToken)
- uid: PostsListener.ISubscriptionsPersistence.RemoveAsync*
  name: RemoveAsync
  href: api/PostsListener.ISubscriptionsPersistence.html#PostsListener_ISubscriptionsPersistence_RemoveAsync_
  commentId: Overload:PostsListener.ISubscriptionsPersistence.RemoveAsync
  isSpec: "True"
  fullName: PostsListener.ISubscriptionsPersistence.RemoveAsync
  nameWithType: ISubscriptionsPersistence.RemoveAsync
- uid: PostsListener.LastPostFilter
  name: LastPostFilter
  href: api/PostsListener.LastPostFilter.html
  commentId: T:PostsListener.LastPostFilter
  fullName: PostsListener.LastPostFilter
  nameWithType: LastPostFilter
- uid: PostsListener.LastPostFilter.#ctor(PostsListener.ILastPostsPersistence,ILogger{PostsListener.LastPostFilter})
  name: LastPostFilter(ILastPostsPersistence, ILogger<LastPostFilter>)
  href: api/PostsListener.LastPostFilter.html#PostsListener_LastPostFilter__ctor_PostsListener_ILastPostsPersistence_ILogger_PostsListener_LastPostFilter__
  commentId: M:PostsListener.LastPostFilter.#ctor(PostsListener.ILastPostsPersistence,ILogger{PostsListener.LastPostFilter})
  name.vb: LastPostFilter(ILastPostsPersistence, ILogger(Of LastPostFilter))
  fullName: PostsListener.LastPostFilter.LastPostFilter(PostsListener.ILastPostsPersistence, ILogger<PostsListener.LastPostFilter>)
  fullName.vb: PostsListener.LastPostFilter.LastPostFilter(PostsListener.ILastPostsPersistence, ILogger(Of PostsListener.LastPostFilter))
  nameWithType: LastPostFilter.LastPostFilter(ILastPostsPersistence, ILogger<LastPostFilter>)
  nameWithType.vb: LastPostFilter.LastPostFilter(ILastPostsPersistence, ILogger(Of LastPostFilter))
- uid: PostsListener.LastPostFilter.#ctor*
  name: LastPostFilter
  href: api/PostsListener.LastPostFilter.html#PostsListener_LastPostFilter__ctor_
  commentId: Overload:PostsListener.LastPostFilter.#ctor
  isSpec: "True"
  fullName: PostsListener.LastPostFilter.LastPostFilter
  nameWithType: LastPostFilter.LastPostFilter
- uid: PostsListener.LastPostFilter.FilterAsync(Post,System.String,TimeSpan,CancellationToken)
  name: FilterAsync(Post, String, TimeSpan, CancellationToken)
  href: api/PostsListener.LastPostFilter.html#PostsListener_LastPostFilter_FilterAsync_Post_System_String_TimeSpan_CancellationToken_
  commentId: M:PostsListener.LastPostFilter.FilterAsync(Post,System.String,TimeSpan,CancellationToken)
  fullName: PostsListener.LastPostFilter.FilterAsync(Post, System.String, TimeSpan, CancellationToken)
  nameWithType: LastPostFilter.FilterAsync(Post, String, TimeSpan, CancellationToken)
- uid: PostsListener.LastPostFilter.FilterAsync*
  name: FilterAsync
  href: api/PostsListener.LastPostFilter.html#PostsListener_LastPostFilter_FilterAsync_
  commentId: Overload:PostsListener.LastPostFilter.FilterAsync
  isSpec: "True"
  fullName: PostsListener.LastPostFilter.FilterAsync
  nameWithType: LastPostFilter.FilterAsync
- uid: PostsListener.MongoDatabaseFactory
  name: MongoDatabaseFactory
  href: api/PostsListener.MongoDatabaseFactory.html
  commentId: T:PostsListener.MongoDatabaseFactory
  fullName: PostsListener.MongoDatabaseFactory
  nameWithType: MongoDatabaseFactory
- uid: PostsListener.MongoDatabaseFactory.CreateDatabase(PostsListener.MongoDbConfig)
  name: CreateDatabase(MongoDbConfig)
  href: api/PostsListener.MongoDatabaseFactory.html#PostsListener_MongoDatabaseFactory_CreateDatabase_PostsListener_MongoDbConfig_
  commentId: M:PostsListener.MongoDatabaseFactory.CreateDatabase(PostsListener.MongoDbConfig)
  fullName: PostsListener.MongoDatabaseFactory.CreateDatabase(PostsListener.MongoDbConfig)
  nameWithType: MongoDatabaseFactory.CreateDatabase(MongoDbConfig)
- uid: PostsListener.MongoDatabaseFactory.CreateDatabase*
  name: CreateDatabase
  href: api/PostsListener.MongoDatabaseFactory.html#PostsListener_MongoDatabaseFactory_CreateDatabase_
  commentId: Overload:PostsListener.MongoDatabaseFactory.CreateDatabase
  isSpec: "True"
  fullName: PostsListener.MongoDatabaseFactory.CreateDatabase
  nameWithType: MongoDatabaseFactory.CreateDatabase
- uid: PostsListener.MongoDbConfig
  name: MongoDbConfig
  href: api/PostsListener.MongoDbConfig.html
  commentId: T:PostsListener.MongoDbConfig
  fullName: PostsListener.MongoDbConfig
  nameWithType: MongoDbConfig
- uid: PostsListener.MongoDbConfig.ConnectionString
  name: ConnectionString
  href: api/PostsListener.MongoDbConfig.html#PostsListener_MongoDbConfig_ConnectionString
  commentId: P:PostsListener.MongoDbConfig.ConnectionString
  fullName: PostsListener.MongoDbConfig.ConnectionString
  nameWithType: MongoDbConfig.ConnectionString
- uid: PostsListener.MongoDbConfig.ConnectionString*
  name: ConnectionString
  href: api/PostsListener.MongoDbConfig.html#PostsListener_MongoDbConfig_ConnectionString_
  commentId: Overload:PostsListener.MongoDbConfig.ConnectionString
  isSpec: "True"
  fullName: PostsListener.MongoDbConfig.ConnectionString
  nameWithType: MongoDbConfig.ConnectionString
- uid: PostsListener.MongoDbConfig.DatabaseName
  name: DatabaseName
  href: api/PostsListener.MongoDbConfig.html#PostsListener_MongoDbConfig_DatabaseName
  commentId: P:PostsListener.MongoDbConfig.DatabaseName
  fullName: PostsListener.MongoDbConfig.DatabaseName
  nameWithType: MongoDbConfig.DatabaseName
- uid: PostsListener.MongoDbConfig.DatabaseName*
  name: DatabaseName
  href: api/PostsListener.MongoDbConfig.html#PostsListener_MongoDbConfig_DatabaseName_
  commentId: Overload:PostsListener.MongoDbConfig.DatabaseName
  isSpec: "True"
  fullName: PostsListener.MongoDbConfig.DatabaseName
  nameWithType: MongoDbConfig.DatabaseName
- uid: PostsListener.MongoDbLastPostsPersistence
  name: MongoDbLastPostsPersistence
  href: api/PostsListener.MongoDbLastPostsPersistence.html
  commentId: T:PostsListener.MongoDbLastPostsPersistence
  fullName: PostsListener.MongoDbLastPostsPersistence
  nameWithType: MongoDbLastPostsPersistence
- uid: PostsListener.MongoDbLastPostsPersistence.#ctor(IMongoDatabase,ILogger{PostsListener.MongoDbLastPostsPersistence})
  name: MongoDbLastPostsPersistence(IMongoDatabase, ILogger<MongoDbLastPostsPersistence>)
  href: api/PostsListener.MongoDbLastPostsPersistence.html#PostsListener_MongoDbLastPostsPersistence__ctor_IMongoDatabase_ILogger_PostsListener_MongoDbLastPostsPersistence__
  commentId: M:PostsListener.MongoDbLastPostsPersistence.#ctor(IMongoDatabase,ILogger{PostsListener.MongoDbLastPostsPersistence})
  name.vb: MongoDbLastPostsPersistence(IMongoDatabase, ILogger(Of MongoDbLastPostsPersistence))
  fullName: PostsListener.MongoDbLastPostsPersistence.MongoDbLastPostsPersistence(IMongoDatabase, ILogger<PostsListener.MongoDbLastPostsPersistence>)
  fullName.vb: PostsListener.MongoDbLastPostsPersistence.MongoDbLastPostsPersistence(IMongoDatabase, ILogger(Of PostsListener.MongoDbLastPostsPersistence))
  nameWithType: MongoDbLastPostsPersistence.MongoDbLastPostsPersistence(IMongoDatabase, ILogger<MongoDbLastPostsPersistence>)
  nameWithType.vb: MongoDbLastPostsPersistence.MongoDbLastPostsPersistence(IMongoDatabase, ILogger(Of MongoDbLastPostsPersistence))
- uid: PostsListener.MongoDbLastPostsPersistence.#ctor*
  name: MongoDbLastPostsPersistence
  href: api/PostsListener.MongoDbLastPostsPersistence.html#PostsListener_MongoDbLastPostsPersistence__ctor_
  commentId: Overload:PostsListener.MongoDbLastPostsPersistence.#ctor
  isSpec: "True"
  fullName: PostsListener.MongoDbLastPostsPersistence.MongoDbLastPostsPersistence
  nameWithType: MongoDbLastPostsPersistence.MongoDbLastPostsPersistence
- uid: PostsListener.MongoDbLastPostsPersistence.AddOrUpdateAsync(System.String,System.String,DateTime,CancellationToken)
  name: AddOrUpdateAsync(String, String, DateTime, CancellationToken)
  href: api/PostsListener.MongoDbLastPostsPersistence.html#PostsListener_MongoDbLastPostsPersistence_AddOrUpdateAsync_System_String_System_String_DateTime_CancellationToken_
  commentId: M:PostsListener.MongoDbLastPostsPersistence.AddOrUpdateAsync(System.String,System.String,DateTime,CancellationToken)
  fullName: PostsListener.MongoDbLastPostsPersistence.AddOrUpdateAsync(System.String, System.String, DateTime, CancellationToken)
  nameWithType: MongoDbLastPostsPersistence.AddOrUpdateAsync(String, String, DateTime, CancellationToken)
- uid: PostsListener.MongoDbLastPostsPersistence.AddOrUpdateAsync*
  name: AddOrUpdateAsync
  href: api/PostsListener.MongoDbLastPostsPersistence.html#PostsListener_MongoDbLastPostsPersistence_AddOrUpdateAsync_
  commentId: Overload:PostsListener.MongoDbLastPostsPersistence.AddOrUpdateAsync
  isSpec: "True"
  fullName: PostsListener.MongoDbLastPostsPersistence.AddOrUpdateAsync
  nameWithType: MongoDbLastPostsPersistence.AddOrUpdateAsync
- uid: PostsListener.MongoDbLastPostsPersistence.GetAsync(CancellationToken)
  name: GetAsync(CancellationToken)
  href: api/PostsListener.MongoDbLastPostsPersistence.html#PostsListener_MongoDbLastPostsPersistence_GetAsync_CancellationToken_
  commentId: M:PostsListener.MongoDbLastPostsPersistence.GetAsync(CancellationToken)
  fullName: PostsListener.MongoDbLastPostsPersistence.GetAsync(CancellationToken)
  nameWithType: MongoDbLastPostsPersistence.GetAsync(CancellationToken)
- uid: PostsListener.MongoDbLastPostsPersistence.GetAsync(System.String,System.String,CancellationToken)
  name: GetAsync(String, String, CancellationToken)
  href: api/PostsListener.MongoDbLastPostsPersistence.html#PostsListener_MongoDbLastPostsPersistence_GetAsync_System_String_System_String_CancellationToken_
  commentId: M:PostsListener.MongoDbLastPostsPersistence.GetAsync(System.String,System.String,CancellationToken)
  fullName: PostsListener.MongoDbLastPostsPersistence.GetAsync(System.String, System.String, CancellationToken)
  nameWithType: MongoDbLastPostsPersistence.GetAsync(String, String, CancellationToken)
- uid: PostsListener.MongoDbLastPostsPersistence.GetAsync*
  name: GetAsync
  href: api/PostsListener.MongoDbLastPostsPersistence.html#PostsListener_MongoDbLastPostsPersistence_GetAsync_
  commentId: Overload:PostsListener.MongoDbLastPostsPersistence.GetAsync
  isSpec: "True"
  fullName: PostsListener.MongoDbLastPostsPersistence.GetAsync
  nameWithType: MongoDbLastPostsPersistence.GetAsync
- uid: PostsListener.MongoDbLastPostsPersistence.RemoveAsync(LastPost,CancellationToken)
  name: RemoveAsync(LastPost, CancellationToken)
  href: api/PostsListener.MongoDbLastPostsPersistence.html#PostsListener_MongoDbLastPostsPersistence_RemoveAsync_LastPost_CancellationToken_
  commentId: M:PostsListener.MongoDbLastPostsPersistence.RemoveAsync(LastPost,CancellationToken)
  fullName: PostsListener.MongoDbLastPostsPersistence.RemoveAsync(LastPost, CancellationToken)
  nameWithType: MongoDbLastPostsPersistence.RemoveAsync(LastPost, CancellationToken)
- uid: PostsListener.MongoDbLastPostsPersistence.RemoveAsync*
  name: RemoveAsync
  href: api/PostsListener.MongoDbLastPostsPersistence.html#PostsListener_MongoDbLastPostsPersistence_RemoveAsync_
  commentId: Overload:PostsListener.MongoDbLastPostsPersistence.RemoveAsync
  isSpec: "True"
  fullName: PostsListener.MongoDbLastPostsPersistence.RemoveAsync
  nameWithType: MongoDbLastPostsPersistence.RemoveAsync
- uid: PostsListener.MongoDbPostUrlsPersistence
  name: MongoDbPostUrlsPersistence
  href: api/PostsListener.MongoDbPostUrlsPersistence.html
  commentId: T:PostsListener.MongoDbPostUrlsPersistence
  fullName: PostsListener.MongoDbPostUrlsPersistence
  nameWithType: MongoDbPostUrlsPersistence
- uid: PostsListener.MongoDbPostUrlsPersistence.#ctor(IMongoDatabase,PostsListener.PostUrlsPersistenceConfig,ILogger{PostsListener.MongoDbPostUrlsPersistence})
  name: MongoDbPostUrlsPersistence(IMongoDatabase, PostUrlsPersistenceConfig, ILogger<MongoDbPostUrlsPersistence>)
  href: api/PostsListener.MongoDbPostUrlsPersistence.html#PostsListener_MongoDbPostUrlsPersistence__ctor_IMongoDatabase_PostsListener_PostUrlsPersistenceConfig_ILogger_PostsListener_MongoDbPostUrlsPersistence__
  commentId: M:PostsListener.MongoDbPostUrlsPersistence.#ctor(IMongoDatabase,PostsListener.PostUrlsPersistenceConfig,ILogger{PostsListener.MongoDbPostUrlsPersistence})
  name.vb: MongoDbPostUrlsPersistence(IMongoDatabase, PostUrlsPersistenceConfig, ILogger(Of MongoDbPostUrlsPersistence))
  fullName: PostsListener.MongoDbPostUrlsPersistence.MongoDbPostUrlsPersistence(IMongoDatabase, PostsListener.PostUrlsPersistenceConfig, ILogger<PostsListener.MongoDbPostUrlsPersistence>)
  fullName.vb: PostsListener.MongoDbPostUrlsPersistence.MongoDbPostUrlsPersistence(IMongoDatabase, PostsListener.PostUrlsPersistenceConfig, ILogger(Of PostsListener.MongoDbPostUrlsPersistence))
  nameWithType: MongoDbPostUrlsPersistence.MongoDbPostUrlsPersistence(IMongoDatabase, PostUrlsPersistenceConfig, ILogger<MongoDbPostUrlsPersistence>)
  nameWithType.vb: MongoDbPostUrlsPersistence.MongoDbPostUrlsPersistence(IMongoDatabase, PostUrlsPersistenceConfig, ILogger(Of MongoDbPostUrlsPersistence))
- uid: PostsListener.MongoDbPostUrlsPersistence.#ctor*
  name: MongoDbPostUrlsPersistence
  href: api/PostsListener.MongoDbPostUrlsPersistence.html#PostsListener_MongoDbPostUrlsPersistence__ctor_
  commentId: Overload:PostsListener.MongoDbPostUrlsPersistence.#ctor
  isSpec: "True"
  fullName: PostsListener.MongoDbPostUrlsPersistence.MongoDbPostUrlsPersistence
  nameWithType: MongoDbPostUrlsPersistence.MongoDbPostUrlsPersistence
- uid: PostsListener.MongoDbPostUrlsPersistence.AddAsync(System.String,CancellationToken)
  name: AddAsync(String, CancellationToken)
  href: api/PostsListener.MongoDbPostUrlsPersistence.html#PostsListener_MongoDbPostUrlsPersistence_AddAsync_System_String_CancellationToken_
  commentId: M:PostsListener.MongoDbPostUrlsPersistence.AddAsync(System.String,CancellationToken)
  fullName: PostsListener.MongoDbPostUrlsPersistence.AddAsync(System.String, CancellationToken)
  nameWithType: MongoDbPostUrlsPersistence.AddAsync(String, CancellationToken)
- uid: PostsListener.MongoDbPostUrlsPersistence.AddAsync*
  name: AddAsync
  href: api/PostsListener.MongoDbPostUrlsPersistence.html#PostsListener_MongoDbPostUrlsPersistence_AddAsync_
  commentId: Overload:PostsListener.MongoDbPostUrlsPersistence.AddAsync
  isSpec: "True"
  fullName: PostsListener.MongoDbPostUrlsPersistence.AddAsync
  nameWithType: MongoDbPostUrlsPersistence.AddAsync
- uid: PostsListener.MongoDbPostUrlsPersistence.ExistsAsync(System.String,CancellationToken)
  name: ExistsAsync(String, CancellationToken)
  href: api/PostsListener.MongoDbPostUrlsPersistence.html#PostsListener_MongoDbPostUrlsPersistence_ExistsAsync_System_String_CancellationToken_
  commentId: M:PostsListener.MongoDbPostUrlsPersistence.ExistsAsync(System.String,CancellationToken)
  fullName: PostsListener.MongoDbPostUrlsPersistence.ExistsAsync(System.String, CancellationToken)
  nameWithType: MongoDbPostUrlsPersistence.ExistsAsync(String, CancellationToken)
- uid: PostsListener.MongoDbPostUrlsPersistence.ExistsAsync*
  name: ExistsAsync
  href: api/PostsListener.MongoDbPostUrlsPersistence.html#PostsListener_MongoDbPostUrlsPersistence_ExistsAsync_
  commentId: Overload:PostsListener.MongoDbPostUrlsPersistence.ExistsAsync
  isSpec: "True"
  fullName: PostsListener.MongoDbPostUrlsPersistence.ExistsAsync
  nameWithType: MongoDbPostUrlsPersistence.ExistsAsync
- uid: PostsListener.MongoDbPostUrlsPersistence.RemoveAsync(System.String,CancellationToken)
  name: RemoveAsync(String, CancellationToken)
  href: api/PostsListener.MongoDbPostUrlsPersistence.html#PostsListener_MongoDbPostUrlsPersistence_RemoveAsync_System_String_CancellationToken_
  commentId: M:PostsListener.MongoDbPostUrlsPersistence.RemoveAsync(System.String,CancellationToken)
  fullName: PostsListener.MongoDbPostUrlsPersistence.RemoveAsync(System.String, CancellationToken)
  nameWithType: MongoDbPostUrlsPersistence.RemoveAsync(String, CancellationToken)
- uid: PostsListener.MongoDbPostUrlsPersistence.RemoveAsync*
  name: RemoveAsync
  href: api/PostsListener.MongoDbPostUrlsPersistence.html#PostsListener_MongoDbPostUrlsPersistence_RemoveAsync_
  commentId: Overload:PostsListener.MongoDbPostUrlsPersistence.RemoveAsync
  isSpec: "True"
  fullName: PostsListener.MongoDbPostUrlsPersistence.RemoveAsync
  nameWithType: MongoDbPostUrlsPersistence.RemoveAsync
- uid: PostsListener.MongoDbSubscriptionsPersistence
  name: MongoDbSubscriptionsPersistence
  href: api/PostsListener.MongoDbSubscriptionsPersistence.html
  commentId: T:PostsListener.MongoDbSubscriptionsPersistence
  fullName: PostsListener.MongoDbSubscriptionsPersistence
  nameWithType: MongoDbSubscriptionsPersistence
- uid: PostsListener.MongoDbSubscriptionsPersistence.#ctor(IMongoDatabase,ILogger{PostsListener.MongoDbSubscriptionsPersistence})
  name: MongoDbSubscriptionsPersistence(IMongoDatabase, ILogger<MongoDbSubscriptionsPersistence>)
  href: api/PostsListener.MongoDbSubscriptionsPersistence.html#PostsListener_MongoDbSubscriptionsPersistence__ctor_IMongoDatabase_ILogger_PostsListener_MongoDbSubscriptionsPersistence__
  commentId: M:PostsListener.MongoDbSubscriptionsPersistence.#ctor(IMongoDatabase,ILogger{PostsListener.MongoDbSubscriptionsPersistence})
  name.vb: MongoDbSubscriptionsPersistence(IMongoDatabase, ILogger(Of MongoDbSubscriptionsPersistence))
  fullName: PostsListener.MongoDbSubscriptionsPersistence.MongoDbSubscriptionsPersistence(IMongoDatabase, ILogger<PostsListener.MongoDbSubscriptionsPersistence>)
  fullName.vb: PostsListener.MongoDbSubscriptionsPersistence.MongoDbSubscriptionsPersistence(IMongoDatabase, ILogger(Of PostsListener.MongoDbSubscriptionsPersistence))
  nameWithType: MongoDbSubscriptionsPersistence.MongoDbSubscriptionsPersistence(IMongoDatabase, ILogger<MongoDbSubscriptionsPersistence>)
  nameWithType.vb: MongoDbSubscriptionsPersistence.MongoDbSubscriptionsPersistence(IMongoDatabase, ILogger(Of MongoDbSubscriptionsPersistence))
- uid: PostsListener.MongoDbSubscriptionsPersistence.#ctor*
  name: MongoDbSubscriptionsPersistence
  href: api/PostsListener.MongoDbSubscriptionsPersistence.html#PostsListener_MongoDbSubscriptionsPersistence__ctor_
  commentId: Overload:PostsListener.MongoDbSubscriptionsPersistence.#ctor
  isSpec: "True"
  fullName: PostsListener.MongoDbSubscriptionsPersistence.MongoDbSubscriptionsPersistence
  nameWithType: MongoDbSubscriptionsPersistence.MongoDbSubscriptionsPersistence
- uid: PostsListener.MongoDbSubscriptionsPersistence.AddOrUpdateAsync(SubscriptionEntity,CancellationToken)
  name: AddOrUpdateAsync(SubscriptionEntity, CancellationToken)
  href: api/PostsListener.MongoDbSubscriptionsPersistence.html#PostsListener_MongoDbSubscriptionsPersistence_AddOrUpdateAsync_SubscriptionEntity_CancellationToken_
  commentId: M:PostsListener.MongoDbSubscriptionsPersistence.AddOrUpdateAsync(SubscriptionEntity,CancellationToken)
  fullName: PostsListener.MongoDbSubscriptionsPersistence.AddOrUpdateAsync(SubscriptionEntity, CancellationToken)
  nameWithType: MongoDbSubscriptionsPersistence.AddOrUpdateAsync(SubscriptionEntity, CancellationToken)
- uid: PostsListener.MongoDbSubscriptionsPersistence.AddOrUpdateAsync*
  name: AddOrUpdateAsync
  href: api/PostsListener.MongoDbSubscriptionsPersistence.html#PostsListener_MongoDbSubscriptionsPersistence_AddOrUpdateAsync_
  commentId: Overload:PostsListener.MongoDbSubscriptionsPersistence.AddOrUpdateAsync
  isSpec: "True"
  fullName: PostsListener.MongoDbSubscriptionsPersistence.AddOrUpdateAsync
  nameWithType: MongoDbSubscriptionsPersistence.AddOrUpdateAsync
- uid: PostsListener.MongoDbSubscriptionsPersistence.GetAsync(CancellationToken)
  name: GetAsync(CancellationToken)
  href: api/PostsListener.MongoDbSubscriptionsPersistence.html#PostsListener_MongoDbSubscriptionsPersistence_GetAsync_CancellationToken_
  commentId: M:PostsListener.MongoDbSubscriptionsPersistence.GetAsync(CancellationToken)
  fullName: PostsListener.MongoDbSubscriptionsPersistence.GetAsync(CancellationToken)
  nameWithType: MongoDbSubscriptionsPersistence.GetAsync(CancellationToken)
- uid: PostsListener.MongoDbSubscriptionsPersistence.GetAsync(System.String,System.String,CancellationToken)
  name: GetAsync(String, String, CancellationToken)
  href: api/PostsListener.MongoDbSubscriptionsPersistence.html#PostsListener_MongoDbSubscriptionsPersistence_GetAsync_System_String_System_String_CancellationToken_
  commentId: M:PostsListener.MongoDbSubscriptionsPersistence.GetAsync(System.String,System.String,CancellationToken)
  fullName: PostsListener.MongoDbSubscriptionsPersistence.GetAsync(System.String, System.String, CancellationToken)
  nameWithType: MongoDbSubscriptionsPersistence.GetAsync(String, String, CancellationToken)
- uid: PostsListener.MongoDbSubscriptionsPersistence.GetAsync*
  name: GetAsync
  href: api/PostsListener.MongoDbSubscriptionsPersistence.html#PostsListener_MongoDbSubscriptionsPersistence_GetAsync_
  commentId: Overload:PostsListener.MongoDbSubscriptionsPersistence.GetAsync
  isSpec: "True"
  fullName: PostsListener.MongoDbSubscriptionsPersistence.GetAsync
  nameWithType: MongoDbSubscriptionsPersistence.GetAsync
- uid: PostsListener.MongoDbSubscriptionsPersistence.RemoveAsync(SubscriptionEntity,CancellationToken)
  name: RemoveAsync(SubscriptionEntity, CancellationToken)
  href: api/PostsListener.MongoDbSubscriptionsPersistence.html#PostsListener_MongoDbSubscriptionsPersistence_RemoveAsync_SubscriptionEntity_CancellationToken_
  commentId: M:PostsListener.MongoDbSubscriptionsPersistence.RemoveAsync(SubscriptionEntity,CancellationToken)
  fullName: PostsListener.MongoDbSubscriptionsPersistence.RemoveAsync(SubscriptionEntity, CancellationToken)
  nameWithType: MongoDbSubscriptionsPersistence.RemoveAsync(SubscriptionEntity, CancellationToken)
- uid: PostsListener.MongoDbSubscriptionsPersistence.RemoveAsync*
  name: RemoveAsync
  href: api/PostsListener.MongoDbSubscriptionsPersistence.html#PostsListener_MongoDbSubscriptionsPersistence_RemoveAsync_
  commentId: Overload:PostsListener.MongoDbSubscriptionsPersistence.RemoveAsync
  isSpec: "True"
  fullName: PostsListener.MongoDbSubscriptionsPersistence.RemoveAsync
  nameWithType: MongoDbSubscriptionsPersistence.RemoveAsync
- uid: PostsListener.ObservableExtensions
  name: ObservableExtensions
  href: api/PostsListener.ObservableExtensions.html
  commentId: T:PostsListener.ObservableExtensions
  fullName: PostsListener.ObservableExtensions
  nameWithType: ObservableExtensions
- uid: PostsListener.ObservableExtensions.SubscribeAsync*
  name: SubscribeAsync
  href: api/PostsListener.ObservableExtensions.html#PostsListener_ObservableExtensions_SubscribeAsync_
  commentId: Overload:PostsListener.ObservableExtensions.SubscribeAsync
  isSpec: "True"
  fullName: PostsListener.ObservableExtensions.SubscribeAsync
  nameWithType: ObservableExtensions.SubscribeAsync
- uid: PostsListener.ObservableExtensions.SubscribeAsync``1(IObservable{``0},Func{``0,CancellationToken,Task})
  name: SubscribeAsync<T>(IObservable<T>, Func<T, CancellationToken, Task>)
  href: api/PostsListener.ObservableExtensions.html#PostsListener_ObservableExtensions_SubscribeAsync__1_IObservable___0__Func___0_CancellationToken_Task__
  commentId: M:PostsListener.ObservableExtensions.SubscribeAsync``1(IObservable{``0},Func{``0,CancellationToken,Task})
  name.vb: SubscribeAsync(Of T)(IObservable(Of T), Func(Of T, CancellationToken, Task))
  fullName: PostsListener.ObservableExtensions.SubscribeAsync<T>(IObservable<T>, Func<T, CancellationToken, Task>)
  fullName.vb: PostsListener.ObservableExtensions.SubscribeAsync(Of T)(IObservable(Of T), Func(Of T, CancellationToken, Task))
  nameWithType: ObservableExtensions.SubscribeAsync<T>(IObservable<T>, Func<T, CancellationToken, Task>)
  nameWithType.vb: ObservableExtensions.SubscribeAsync(Of T)(IObservable(Of T), Func(Of T, CancellationToken, Task))
- uid: PostsListener.ObservableExtensions.SubscribeAsync``1(IObservable{``0},Func{``0,Task})
  name: SubscribeAsync<T>(IObservable<T>, Func<T, Task>)
  href: api/PostsListener.ObservableExtensions.html#PostsListener_ObservableExtensions_SubscribeAsync__1_IObservable___0__Func___0_Task__
  commentId: M:PostsListener.ObservableExtensions.SubscribeAsync``1(IObservable{``0},Func{``0,Task})
  name.vb: SubscribeAsync(Of T)(IObservable(Of T), Func(Of T, Task))
  fullName: PostsListener.ObservableExtensions.SubscribeAsync<T>(IObservable<T>, Func<T, Task>)
  fullName.vb: PostsListener.ObservableExtensions.SubscribeAsync(Of T)(IObservable(Of T), Func(Of T, Task))
  nameWithType: ObservableExtensions.SubscribeAsync<T>(IObservable<T>, Func<T, Task>)
  nameWithType.vb: ObservableExtensions.SubscribeAsync(Of T)(IObservable(Of T), Func(Of T, Task))
- uid: PostsListener.PollNewPostSubscriptionConsumer
  name: PollNewPostSubscriptionConsumer
  href: api/PostsListener.PollNewPostSubscriptionConsumer.html
  commentId: T:PostsListener.PollNewPostSubscriptionConsumer
  fullName: PostsListener.PollNewPostSubscriptionConsumer
  nameWithType: PollNewPostSubscriptionConsumer
- uid: PostsListener.PollNewPostSubscriptionConsumer.#ctor(PostsListener.StreamManager,ILogger{PostsListener.PollNewPostSubscriptionConsumer})
  name: PollNewPostSubscriptionConsumer(StreamManager, ILogger<PollNewPostSubscriptionConsumer>)
  href: api/PostsListener.PollNewPostSubscriptionConsumer.html#PostsListener_PollNewPostSubscriptionConsumer__ctor_PostsListener_StreamManager_ILogger_PostsListener_PollNewPostSubscriptionConsumer__
  commentId: M:PostsListener.PollNewPostSubscriptionConsumer.#ctor(PostsListener.StreamManager,ILogger{PostsListener.PollNewPostSubscriptionConsumer})
  name.vb: PollNewPostSubscriptionConsumer(StreamManager, ILogger(Of PollNewPostSubscriptionConsumer))
  fullName: PostsListener.PollNewPostSubscriptionConsumer.PollNewPostSubscriptionConsumer(PostsListener.StreamManager, ILogger<PostsListener.PollNewPostSubscriptionConsumer>)
  fullName.vb: PostsListener.PollNewPostSubscriptionConsumer.PollNewPostSubscriptionConsumer(PostsListener.StreamManager, ILogger(Of PostsListener.PollNewPostSubscriptionConsumer))
  nameWithType: PollNewPostSubscriptionConsumer.PollNewPostSubscriptionConsumer(StreamManager, ILogger<PollNewPostSubscriptionConsumer>)
  nameWithType.vb: PollNewPostSubscriptionConsumer.PollNewPostSubscriptionConsumer(StreamManager, ILogger(Of PollNewPostSubscriptionConsumer))
- uid: PostsListener.PollNewPostSubscriptionConsumer.#ctor*
  name: PollNewPostSubscriptionConsumer
  href: api/PostsListener.PollNewPostSubscriptionConsumer.html#PostsListener_PollNewPostSubscriptionConsumer__ctor_
  commentId: Overload:PostsListener.PollNewPostSubscriptionConsumer.#ctor
  isSpec: "True"
  fullName: PostsListener.PollNewPostSubscriptionConsumer.PollNewPostSubscriptionConsumer
  nameWithType: PollNewPostSubscriptionConsumer.PollNewPostSubscriptionConsumer
- uid: PostsListener.PollNewPostSubscriptionConsumer.Consume(ConsumeContext{PollNewPostSubscription})
  name: Consume(ConsumeContext<PollNewPostSubscription>)
  href: api/PostsListener.PollNewPostSubscriptionConsumer.html#PostsListener_PollNewPostSubscriptionConsumer_Consume_ConsumeContext_PollNewPostSubscription__
  commentId: M:PostsListener.PollNewPostSubscriptionConsumer.Consume(ConsumeContext{PollNewPostSubscription})
  name.vb: Consume(ConsumeContext(Of PollNewPostSubscription))
  fullName: PostsListener.PollNewPostSubscriptionConsumer.Consume(ConsumeContext<PollNewPostSubscription>)
  fullName.vb: PostsListener.PollNewPostSubscriptionConsumer.Consume(ConsumeContext(Of PollNewPostSubscription))
  nameWithType: PollNewPostSubscriptionConsumer.Consume(ConsumeContext<PollNewPostSubscription>)
  nameWithType.vb: PollNewPostSubscriptionConsumer.Consume(ConsumeContext(Of PollNewPostSubscription))
- uid: PostsListener.PollNewPostSubscriptionConsumer.Consume*
  name: Consume
  href: api/PostsListener.PollNewPostSubscriptionConsumer.html#PostsListener_PollNewPostSubscriptionConsumer_Consume_
  commentId: Overload:PostsListener.PollNewPostSubscriptionConsumer.Consume
  isSpec: "True"
  fullName: PostsListener.PollNewPostSubscriptionConsumer.Consume
  nameWithType: PollNewPostSubscriptionConsumer.Consume
- uid: PostsListener.PostFilter
  name: PostFilter
  href: api/PostsListener.PostFilter.html
  commentId: T:PostsListener.PostFilter
  fullName: PostsListener.PostFilter
  nameWithType: PostFilter
- uid: PostsListener.PostFilter.#ctor(PostsListener.LastPostFilter,PostsListener.PostUrlFilter,ILogger{PostsListener.PostFilter})
  name: PostFilter(LastPostFilter, PostUrlFilter, ILogger<PostFilter>)
  href: api/PostsListener.PostFilter.html#PostsListener_PostFilter__ctor_PostsListener_LastPostFilter_PostsListener_PostUrlFilter_ILogger_PostsListener_PostFilter__
  commentId: M:PostsListener.PostFilter.#ctor(PostsListener.LastPostFilter,PostsListener.PostUrlFilter,ILogger{PostsListener.PostFilter})
  name.vb: PostFilter(LastPostFilter, PostUrlFilter, ILogger(Of PostFilter))
  fullName: PostsListener.PostFilter.PostFilter(PostsListener.LastPostFilter, PostsListener.PostUrlFilter, ILogger<PostsListener.PostFilter>)
  fullName.vb: PostsListener.PostFilter.PostFilter(PostsListener.LastPostFilter, PostsListener.PostUrlFilter, ILogger(Of PostsListener.PostFilter))
  nameWithType: PostFilter.PostFilter(LastPostFilter, PostUrlFilter, ILogger<PostFilter>)
  nameWithType.vb: PostFilter.PostFilter(LastPostFilter, PostUrlFilter, ILogger(Of PostFilter))
- uid: PostsListener.PostFilter.#ctor*
  name: PostFilter
  href: api/PostsListener.PostFilter.html#PostsListener_PostFilter__ctor_
  commentId: Overload:PostsListener.PostFilter.#ctor
  isSpec: "True"
  fullName: PostsListener.PostFilter.PostFilter
  nameWithType: PostFilter.PostFilter
- uid: PostsListener.PostFilter.FilterAsync(Post,System.String,CancellationToken)
  name: FilterAsync(Post, String, CancellationToken)
  href: api/PostsListener.PostFilter.html#PostsListener_PostFilter_FilterAsync_Post_System_String_CancellationToken_
  commentId: M:PostsListener.PostFilter.FilterAsync(Post,System.String,CancellationToken)
  fullName: PostsListener.PostFilter.FilterAsync(Post, System.String, CancellationToken)
  nameWithType: PostFilter.FilterAsync(Post, String, CancellationToken)
- uid: PostsListener.PostFilter.FilterAsync*
  name: FilterAsync
  href: api/PostsListener.PostFilter.html#PostsListener_PostFilter_FilterAsync_
  commentId: Overload:PostsListener.PostFilter.FilterAsync
  isSpec: "True"
  fullName: PostsListener.PostFilter.FilterAsync
  nameWithType: PostFilter.FilterAsync
- uid: PostsListener.PostSubscription
  name: PostSubscription
  href: api/PostsListener.PostSubscription.html
  commentId: T:PostsListener.PostSubscription
  fullName: PostsListener.PostSubscription
  nameWithType: PostSubscription
- uid: PostsListener.PostSubscription.#ctor(Scraper.Net.Stream.IPostStream,IDisposable)
  name: PostSubscription(IPostStream, IDisposable)
  href: api/PostsListener.PostSubscription.html#PostsListener_PostSubscription__ctor_Scraper_Net_Stream_IPostStream_IDisposable_
  commentId: M:PostsListener.PostSubscription.#ctor(Scraper.Net.Stream.IPostStream,IDisposable)
  fullName: PostsListener.PostSubscription.PostSubscription(Scraper.Net.Stream.IPostStream, IDisposable)
  nameWithType: PostSubscription.PostSubscription(IPostStream, IDisposable)
- uid: PostsListener.PostSubscription.#ctor*
  name: PostSubscription
  href: api/PostsListener.PostSubscription.html#PostsListener_PostSubscription__ctor_
  commentId: Overload:PostsListener.PostSubscription.#ctor
  isSpec: "True"
  fullName: PostsListener.PostSubscription.PostSubscription
  nameWithType: PostSubscription.PostSubscription
- uid: PostsListener.PostSubscription.Dispose
  name: Dispose()
  href: api/PostsListener.PostSubscription.html#PostsListener_PostSubscription_Dispose
  commentId: M:PostsListener.PostSubscription.Dispose
  fullName: PostsListener.PostSubscription.Dispose()
  nameWithType: PostSubscription.Dispose()
- uid: PostsListener.PostSubscription.Dispose*
  name: Dispose
  href: api/PostsListener.PostSubscription.html#PostsListener_PostSubscription_Dispose_
  commentId: Overload:PostsListener.PostSubscription.Dispose
  isSpec: "True"
  fullName: PostsListener.PostSubscription.Dispose
  nameWithType: PostSubscription.Dispose
- uid: PostsListener.PostSubscription.DueTime
  name: DueTime
  href: api/PostsListener.PostSubscription.html#PostsListener_PostSubscription_DueTime
  commentId: P:PostsListener.PostSubscription.DueTime
  fullName: PostsListener.PostSubscription.DueTime
  nameWithType: PostSubscription.DueTime
- uid: PostsListener.PostSubscription.DueTime*
  name: DueTime
  href: api/PostsListener.PostSubscription.html#PostsListener_PostSubscription_DueTime_
  commentId: Overload:PostsListener.PostSubscription.DueTime
  isSpec: "True"
  fullName: PostsListener.PostSubscription.DueTime
  nameWithType: PostSubscription.DueTime
- uid: PostsListener.PostSubscription.UpdateAsync(CancellationToken)
  name: UpdateAsync(CancellationToken)
  href: api/PostsListener.PostSubscription.html#PostsListener_PostSubscription_UpdateAsync_CancellationToken_
  commentId: M:PostsListener.PostSubscription.UpdateAsync(CancellationToken)
  fullName: PostsListener.PostSubscription.UpdateAsync(CancellationToken)
  nameWithType: PostSubscription.UpdateAsync(CancellationToken)
- uid: PostsListener.PostSubscription.UpdateAsync*
  name: UpdateAsync
  href: api/PostsListener.PostSubscription.html#PostsListener_PostSubscription_UpdateAsync_
  commentId: Overload:PostsListener.PostSubscription.UpdateAsync
  isSpec: "True"
  fullName: PostsListener.PostSubscription.UpdateAsync
  nameWithType: PostSubscription.UpdateAsync
- uid: PostsListener.PostUrlFilter
  name: PostUrlFilter
  href: api/PostsListener.PostUrlFilter.html
  commentId: T:PostsListener.PostUrlFilter
  fullName: PostsListener.PostUrlFilter
  nameWithType: PostUrlFilter
- uid: PostsListener.PostUrlFilter.#ctor(PostsListener.IPostUrlsPersistence)
  name: PostUrlFilter(IPostUrlsPersistence)
  href: api/PostsListener.PostUrlFilter.html#PostsListener_PostUrlFilter__ctor_PostsListener_IPostUrlsPersistence_
  commentId: M:PostsListener.PostUrlFilter.#ctor(PostsListener.IPostUrlsPersistence)
  fullName: PostsListener.PostUrlFilter.PostUrlFilter(PostsListener.IPostUrlsPersistence)
  nameWithType: PostUrlFilter.PostUrlFilter(IPostUrlsPersistence)
- uid: PostsListener.PostUrlFilter.#ctor*
  name: PostUrlFilter
  href: api/PostsListener.PostUrlFilter.html#PostsListener_PostUrlFilter__ctor_
  commentId: Overload:PostsListener.PostUrlFilter.#ctor
  isSpec: "True"
  fullName: PostsListener.PostUrlFilter.PostUrlFilter
  nameWithType: PostUrlFilter.PostUrlFilter
- uid: PostsListener.PostUrlFilter.FilterAsync(Post,CancellationToken)
  name: FilterAsync(Post, CancellationToken)
  href: api/PostsListener.PostUrlFilter.html#PostsListener_PostUrlFilter_FilterAsync_Post_CancellationToken_
  commentId: M:PostsListener.PostUrlFilter.FilterAsync(Post,CancellationToken)
  fullName: PostsListener.PostUrlFilter.FilterAsync(Post, CancellationToken)
  nameWithType: PostUrlFilter.FilterAsync(Post, CancellationToken)
- uid: PostsListener.PostUrlFilter.FilterAsync*
  name: FilterAsync
  href: api/PostsListener.PostUrlFilter.html#PostsListener_PostUrlFilter_FilterAsync_
  commentId: Overload:PostsListener.PostUrlFilter.FilterAsync
  isSpec: "True"
  fullName: PostsListener.PostUrlFilter.FilterAsync
  nameWithType: PostUrlFilter.FilterAsync
- uid: PostsListener.PostUrlsPersistenceConfig
  name: PostUrlsPersistenceConfig
  href: api/PostsListener.PostUrlsPersistenceConfig.html
  commentId: T:PostsListener.PostUrlsPersistenceConfig
  fullName: PostsListener.PostUrlsPersistenceConfig
  nameWithType: PostUrlsPersistenceConfig
- uid: PostsListener.PostUrlsPersistenceConfig.ExpirationTime
  name: ExpirationTime
  href: api/PostsListener.PostUrlsPersistenceConfig.html#PostsListener_PostUrlsPersistenceConfig_ExpirationTime
  commentId: P:PostsListener.PostUrlsPersistenceConfig.ExpirationTime
  fullName: PostsListener.PostUrlsPersistenceConfig.ExpirationTime
  nameWithType: PostUrlsPersistenceConfig.ExpirationTime
- uid: PostsListener.PostUrlsPersistenceConfig.ExpirationTime*
  name: ExpirationTime
  href: api/PostsListener.PostUrlsPersistenceConfig.html#PostsListener_PostUrlsPersistenceConfig_ExpirationTime_
  commentId: Overload:PostsListener.PostUrlsPersistenceConfig.ExpirationTime
  isSpec: "True"
  fullName: PostsListener.PostUrlsPersistenceConfig.ExpirationTime
  nameWithType: PostUrlsPersistenceConfig.ExpirationTime
- uid: PostsListener.Program
  name: Program
  href: api/PostsListener.Program.html
  commentId: T:PostsListener.Program
  fullName: PostsListener.Program
  nameWithType: Program
- uid: PostsListener.Program.Main(System.String[])
  name: Main(String[])
  href: api/PostsListener.Program.html#PostsListener_Program_Main_System_String___
  commentId: M:PostsListener.Program.Main(System.String[])
  name.vb: Main(String())
  fullName: PostsListener.Program.Main(System.String[])
  fullName.vb: PostsListener.Program.Main(System.String())
  nameWithType: Program.Main(String[])
  nameWithType.vb: Program.Main(String())
- uid: PostsListener.Program.Main*
  name: Main
  href: api/PostsListener.Program.html#PostsListener_Program_Main_
  commentId: Overload:PostsListener.Program.Main
  isSpec: "True"
  fullName: PostsListener.Program.Main
  nameWithType: Program.Main
- uid: PostsListener.RemoveNewPostSubscriptionConsumer
  name: RemoveNewPostSubscriptionConsumer
  href: api/PostsListener.RemoveNewPostSubscriptionConsumer.html
  commentId: T:PostsListener.RemoveNewPostSubscriptionConsumer
  fullName: PostsListener.RemoveNewPostSubscriptionConsumer
  nameWithType: RemoveNewPostSubscriptionConsumer
- uid: PostsListener.RemoveNewPostSubscriptionConsumer.#ctor(PostsListener.ISubscriptionsManager,ILogger{PostsListener.RemoveNewPostSubscriptionConsumer})
  name: RemoveNewPostSubscriptionConsumer(ISubscriptionsManager, ILogger<RemoveNewPostSubscriptionConsumer>)
  href: api/PostsListener.RemoveNewPostSubscriptionConsumer.html#PostsListener_RemoveNewPostSubscriptionConsumer__ctor_PostsListener_ISubscriptionsManager_ILogger_PostsListener_RemoveNewPostSubscriptionConsumer__
  commentId: M:PostsListener.RemoveNewPostSubscriptionConsumer.#ctor(PostsListener.ISubscriptionsManager,ILogger{PostsListener.RemoveNewPostSubscriptionConsumer})
  name.vb: RemoveNewPostSubscriptionConsumer(ISubscriptionsManager, ILogger(Of RemoveNewPostSubscriptionConsumer))
  fullName: PostsListener.RemoveNewPostSubscriptionConsumer.RemoveNewPostSubscriptionConsumer(PostsListener.ISubscriptionsManager, ILogger<PostsListener.RemoveNewPostSubscriptionConsumer>)
  fullName.vb: PostsListener.RemoveNewPostSubscriptionConsumer.RemoveNewPostSubscriptionConsumer(PostsListener.ISubscriptionsManager, ILogger(Of PostsListener.RemoveNewPostSubscriptionConsumer))
  nameWithType: RemoveNewPostSubscriptionConsumer.RemoveNewPostSubscriptionConsumer(ISubscriptionsManager, ILogger<RemoveNewPostSubscriptionConsumer>)
  nameWithType.vb: RemoveNewPostSubscriptionConsumer.RemoveNewPostSubscriptionConsumer(ISubscriptionsManager, ILogger(Of RemoveNewPostSubscriptionConsumer))
- uid: PostsListener.RemoveNewPostSubscriptionConsumer.#ctor*
  name: RemoveNewPostSubscriptionConsumer
  href: api/PostsListener.RemoveNewPostSubscriptionConsumer.html#PostsListener_RemoveNewPostSubscriptionConsumer__ctor_
  commentId: Overload:PostsListener.RemoveNewPostSubscriptionConsumer.#ctor
  isSpec: "True"
  fullName: PostsListener.RemoveNewPostSubscriptionConsumer.RemoveNewPostSubscriptionConsumer
  nameWithType: RemoveNewPostSubscriptionConsumer.RemoveNewPostSubscriptionConsumer
- uid: PostsListener.RemoveNewPostSubscriptionConsumer.Consume(ConsumeContext{RemoveNewPostSubscription})
  name: Consume(ConsumeContext<RemoveNewPostSubscription>)
  href: api/PostsListener.RemoveNewPostSubscriptionConsumer.html#PostsListener_RemoveNewPostSubscriptionConsumer_Consume_ConsumeContext_RemoveNewPostSubscription__
  commentId: M:PostsListener.RemoveNewPostSubscriptionConsumer.Consume(ConsumeContext{RemoveNewPostSubscription})
  name.vb: Consume(ConsumeContext(Of RemoveNewPostSubscription))
  fullName: PostsListener.RemoveNewPostSubscriptionConsumer.Consume(ConsumeContext<RemoveNewPostSubscription>)
  fullName.vb: PostsListener.RemoveNewPostSubscriptionConsumer.Consume(ConsumeContext(Of RemoveNewPostSubscription))
  nameWithType: RemoveNewPostSubscriptionConsumer.Consume(ConsumeContext<RemoveNewPostSubscription>)
  nameWithType.vb: RemoveNewPostSubscriptionConsumer.Consume(ConsumeContext(Of RemoveNewPostSubscription))
- uid: PostsListener.RemoveNewPostSubscriptionConsumer.Consume*
  name: Consume
  href: api/PostsListener.RemoveNewPostSubscriptionConsumer.html#PostsListener_RemoveNewPostSubscriptionConsumer_Consume_
  commentId: Overload:PostsListener.RemoveNewPostSubscriptionConsumer.Consume
  isSpec: "True"
  fullName: PostsListener.RemoveNewPostSubscriptionConsumer.Consume
  nameWithType: RemoveNewPostSubscriptionConsumer.Consume
- uid: PostsListener.Startup
  name: Startup
  href: api/PostsListener.Startup.html
  commentId: T:PostsListener.Startup
  fullName: PostsListener.Startup
  nameWithType: Startup
- uid: PostsListener.Startup.#ctor(IConfiguration)
  name: Startup(IConfiguration)
  href: api/PostsListener.Startup.html#PostsListener_Startup__ctor_IConfiguration_
  commentId: M:PostsListener.Startup.#ctor(IConfiguration)
  fullName: PostsListener.Startup.Startup(IConfiguration)
  nameWithType: Startup.Startup(IConfiguration)
- uid: PostsListener.Startup.#ctor*
  name: Startup
  href: api/PostsListener.Startup.html#PostsListener_Startup__ctor_
  commentId: Overload:PostsListener.Startup.#ctor
  isSpec: "True"
  fullName: PostsListener.Startup.Startup
  nameWithType: Startup.Startup
- uid: PostsListener.Startup.ConfigureServices(IServiceCollection)
  name: ConfigureServices(IServiceCollection)
  href: api/PostsListener.Startup.html#PostsListener_Startup_ConfigureServices_IServiceCollection_
  commentId: M:PostsListener.Startup.ConfigureServices(IServiceCollection)
  fullName: PostsListener.Startup.ConfigureServices(IServiceCollection)
  nameWithType: Startup.ConfigureServices(IServiceCollection)
- uid: PostsListener.Startup.ConfigureServices*
  name: ConfigureServices
  href: api/PostsListener.Startup.html#PostsListener_Startup_ConfigureServices_
  commentId: Overload:PostsListener.Startup.ConfigureServices
  isSpec: "True"
  fullName: PostsListener.Startup.ConfigureServices
  nameWithType: Startup.ConfigureServices
- uid: PostsListener.StreamConfig
  name: StreamConfig
  href: api/PostsListener.StreamConfig.html
  commentId: T:PostsListener.StreamConfig
  fullName: PostsListener.StreamConfig
  nameWithType: StreamConfig
- uid: PostsListener.StreamConfig.PlatformMultipliers
  name: PlatformMultipliers
  href: api/PostsListener.StreamConfig.html#PostsListener_StreamConfig_PlatformMultipliers
  commentId: P:PostsListener.StreamConfig.PlatformMultipliers
  fullName: PostsListener.StreamConfig.PlatformMultipliers
  nameWithType: StreamConfig.PlatformMultipliers
- uid: PostsListener.StreamConfig.PlatformMultipliers*
  name: PlatformMultipliers
  href: api/PostsListener.StreamConfig.html#PostsListener_StreamConfig_PlatformMultipliers_
  commentId: Overload:PostsListener.StreamConfig.PlatformMultipliers
  isSpec: "True"
  fullName: PostsListener.StreamConfig.PlatformMultipliers
  nameWithType: StreamConfig.PlatformMultipliers
- uid: PostsListener.StreamManager
  name: StreamManager
  href: api/PostsListener.StreamManager.html
  commentId: T:PostsListener.StreamManager
  fullName: PostsListener.StreamManager
  nameWithType: StreamManager
- uid: PostsListener.StreamManager.#ctor(PostsListener.StreamConfig,Scraper.Net.Stream.PostStreamFactory,IBus,ILogger{PostsListener.StreamManager})
  name: StreamManager(StreamConfig, PostStreamFactory, IBus, ILogger<StreamManager>)
  href: api/PostsListener.StreamManager.html#PostsListener_StreamManager__ctor_PostsListener_StreamConfig_Scraper_Net_Stream_PostStreamFactory_IBus_ILogger_PostsListener_StreamManager__
  commentId: M:PostsListener.StreamManager.#ctor(PostsListener.StreamConfig,Scraper.Net.Stream.PostStreamFactory,IBus,ILogger{PostsListener.StreamManager})
  name.vb: StreamManager(StreamConfig, PostStreamFactory, IBus, ILogger(Of StreamManager))
  fullName: PostsListener.StreamManager.StreamManager(PostsListener.StreamConfig, Scraper.Net.Stream.PostStreamFactory, IBus, ILogger<PostsListener.StreamManager>)
  fullName.vb: PostsListener.StreamManager.StreamManager(PostsListener.StreamConfig, Scraper.Net.Stream.PostStreamFactory, IBus, ILogger(Of PostsListener.StreamManager))
  nameWithType: StreamManager.StreamManager(StreamConfig, PostStreamFactory, IBus, ILogger<StreamManager>)
  nameWithType.vb: StreamManager.StreamManager(StreamConfig, PostStreamFactory, IBus, ILogger(Of StreamManager))
- uid: PostsListener.StreamManager.#ctor*
  name: StreamManager
  href: api/PostsListener.StreamManager.html#PostsListener_StreamManager__ctor_
  commentId: Overload:PostsListener.StreamManager.#ctor
  isSpec: "True"
  fullName: PostsListener.StreamManager.StreamManager
  nameWithType: StreamManager.StreamManager
- uid: PostsListener.StreamManager.AddOrUpdate(Subscription,DateTime)
  name: AddOrUpdate(Subscription, DateTime)
  href: api/PostsListener.StreamManager.html#PostsListener_StreamManager_AddOrUpdate_Subscription_DateTime_
  commentId: M:PostsListener.StreamManager.AddOrUpdate(Subscription,DateTime)
  fullName: PostsListener.StreamManager.AddOrUpdate(Subscription, DateTime)
  nameWithType: StreamManager.AddOrUpdate(Subscription, DateTime)
- uid: PostsListener.StreamManager.AddOrUpdate*
  name: AddOrUpdate
  href: api/PostsListener.StreamManager.html#PostsListener_StreamManager_AddOrUpdate_
  commentId: Overload:PostsListener.StreamManager.AddOrUpdate
  isSpec: "True"
  fullName: PostsListener.StreamManager.AddOrUpdate
  nameWithType: StreamManager.AddOrUpdate
- uid: PostsListener.StreamManager.Get
  name: Get()
  href: api/PostsListener.StreamManager.html#PostsListener_StreamManager_Get
  commentId: M:PostsListener.StreamManager.Get
  fullName: PostsListener.StreamManager.Get()
  nameWithType: StreamManager.Get()
- uid: PostsListener.StreamManager.Get*
  name: Get
  href: api/PostsListener.StreamManager.html#PostsListener_StreamManager_Get_
  commentId: Overload:PostsListener.StreamManager.Get
  isSpec: "True"
  fullName: PostsListener.StreamManager.Get
  nameWithType: StreamManager.Get
- uid: PostsListener.StreamManager.Remove(Subscription)
  name: Remove(Subscription)
  href: api/PostsListener.StreamManager.html#PostsListener_StreamManager_Remove_Subscription_
  commentId: M:PostsListener.StreamManager.Remove(Subscription)
  fullName: PostsListener.StreamManager.Remove(Subscription)
  nameWithType: StreamManager.Remove(Subscription)
- uid: PostsListener.StreamManager.Remove*
  name: Remove
  href: api/PostsListener.StreamManager.html#PostsListener_StreamManager_Remove_
  commentId: Overload:PostsListener.StreamManager.Remove
  isSpec: "True"
  fullName: PostsListener.StreamManager.Remove
  nameWithType: StreamManager.Remove
- uid: PostsListener.SubscriptionsExtensions
  name: SubscriptionsExtensions
  href: api/PostsListener.SubscriptionsExtensions.html
  commentId: T:PostsListener.SubscriptionsExtensions
  fullName: PostsListener.SubscriptionsExtensions
  nameWithType: SubscriptionsExtensions
- uid: PostsListener.SubscriptionsExtensions.ToNewEntity(Subscription)
  name: ToNewEntity(Subscription)
  href: api/PostsListener.SubscriptionsExtensions.html#PostsListener_SubscriptionsExtensions_ToNewEntity_Subscription_
  commentId: M:PostsListener.SubscriptionsExtensions.ToNewEntity(Subscription)
  fullName: PostsListener.SubscriptionsExtensions.ToNewEntity(Subscription)
  nameWithType: SubscriptionsExtensions.ToNewEntity(Subscription)
- uid: PostsListener.SubscriptionsExtensions.ToNewEntity*
  name: ToNewEntity
  href: api/PostsListener.SubscriptionsExtensions.html#PostsListener_SubscriptionsExtensions_ToNewEntity_
  commentId: Overload:PostsListener.SubscriptionsExtensions.ToNewEntity
  isSpec: "True"
  fullName: PostsListener.SubscriptionsExtensions.ToNewEntity
  nameWithType: SubscriptionsExtensions.ToNewEntity
- uid: PostsListener.SubscriptionsExtensions.ToSubscription(SubscriptionEntity)
  name: ToSubscription(SubscriptionEntity)
  href: api/PostsListener.SubscriptionsExtensions.html#PostsListener_SubscriptionsExtensions_ToSubscription_SubscriptionEntity_
  commentId: M:PostsListener.SubscriptionsExtensions.ToSubscription(SubscriptionEntity)
  fullName: PostsListener.SubscriptionsExtensions.ToSubscription(SubscriptionEntity)
  nameWithType: SubscriptionsExtensions.ToSubscription(SubscriptionEntity)
- uid: PostsListener.SubscriptionsExtensions.ToSubscription*
  name: ToSubscription
  href: api/PostsListener.SubscriptionsExtensions.html#PostsListener_SubscriptionsExtensions_ToSubscription_
  commentId: Overload:PostsListener.SubscriptionsExtensions.ToSubscription
  isSpec: "True"
  fullName: PostsListener.SubscriptionsExtensions.ToSubscription
  nameWithType: SubscriptionsExtensions.ToSubscription
- uid: PostsListener.SubscriptionsLoaderService
  name: SubscriptionsLoaderService
  href: api/PostsListener.SubscriptionsLoaderService.html
  commentId: T:PostsListener.SubscriptionsLoaderService
  fullName: PostsListener.SubscriptionsLoaderService
  nameWithType: SubscriptionsLoaderService
- uid: PostsListener.SubscriptionsLoaderService.#ctor(PostsListener.StreamManager,PostsListener.ISubscriptionsPersistence)
  name: SubscriptionsLoaderService(StreamManager, ISubscriptionsPersistence)
  href: api/PostsListener.SubscriptionsLoaderService.html#PostsListener_SubscriptionsLoaderService__ctor_PostsListener_StreamManager_PostsListener_ISubscriptionsPersistence_
  commentId: M:PostsListener.SubscriptionsLoaderService.#ctor(PostsListener.StreamManager,PostsListener.ISubscriptionsPersistence)
  fullName: PostsListener.SubscriptionsLoaderService.SubscriptionsLoaderService(PostsListener.StreamManager, PostsListener.ISubscriptionsPersistence)
  nameWithType: SubscriptionsLoaderService.SubscriptionsLoaderService(StreamManager, ISubscriptionsPersistence)
- uid: PostsListener.SubscriptionsLoaderService.#ctor*
  name: SubscriptionsLoaderService
  href: api/PostsListener.SubscriptionsLoaderService.html#PostsListener_SubscriptionsLoaderService__ctor_
  commentId: Overload:PostsListener.SubscriptionsLoaderService.#ctor
  isSpec: "True"
  fullName: PostsListener.SubscriptionsLoaderService.SubscriptionsLoaderService
  nameWithType: SubscriptionsLoaderService.SubscriptionsLoaderService
- uid: PostsListener.SubscriptionsLoaderService.StartAsync(CancellationToken)
  name: StartAsync(CancellationToken)
  href: api/PostsListener.SubscriptionsLoaderService.html#PostsListener_SubscriptionsLoaderService_StartAsync_CancellationToken_
  commentId: M:PostsListener.SubscriptionsLoaderService.StartAsync(CancellationToken)
  fullName: PostsListener.SubscriptionsLoaderService.StartAsync(CancellationToken)
  nameWithType: SubscriptionsLoaderService.StartAsync(CancellationToken)
- uid: PostsListener.SubscriptionsLoaderService.StartAsync*
  name: StartAsync
  href: api/PostsListener.SubscriptionsLoaderService.html#PostsListener_SubscriptionsLoaderService_StartAsync_
  commentId: Overload:PostsListener.SubscriptionsLoaderService.StartAsync
  isSpec: "True"
  fullName: PostsListener.SubscriptionsLoaderService.StartAsync
  nameWithType: SubscriptionsLoaderService.StartAsync
- uid: PostsListener.SubscriptionsLoaderService.StopAsync(CancellationToken)
  name: StopAsync(CancellationToken)
  href: api/PostsListener.SubscriptionsLoaderService.html#PostsListener_SubscriptionsLoaderService_StopAsync_CancellationToken_
  commentId: M:PostsListener.SubscriptionsLoaderService.StopAsync(CancellationToken)
  fullName: PostsListener.SubscriptionsLoaderService.StopAsync(CancellationToken)
  nameWithType: SubscriptionsLoaderService.StopAsync(CancellationToken)
- uid: PostsListener.SubscriptionsLoaderService.StopAsync*
  name: StopAsync
  href: api/PostsListener.SubscriptionsLoaderService.html#PostsListener_SubscriptionsLoaderService_StopAsync_
  commentId: Overload:PostsListener.SubscriptionsLoaderService.StopAsync
  isSpec: "True"
  fullName: PostsListener.SubscriptionsLoaderService.StopAsync
  nameWithType: SubscriptionsLoaderService.StopAsync
- uid: PostsListener.SubscriptionsManager
  name: SubscriptionsManager
  href: api/PostsListener.SubscriptionsManager.html
  commentId: T:PostsListener.SubscriptionsManager
  fullName: PostsListener.SubscriptionsManager
  nameWithType: SubscriptionsManager
- uid: PostsListener.SubscriptionsManager.#ctor(PostsListener.StreamManager,PostsListener.ISubscriptionsPersistence)
  name: SubscriptionsManager(StreamManager, ISubscriptionsPersistence)
  href: api/PostsListener.SubscriptionsManager.html#PostsListener_SubscriptionsManager__ctor_PostsListener_StreamManager_PostsListener_ISubscriptionsPersistence_
  commentId: M:PostsListener.SubscriptionsManager.#ctor(PostsListener.StreamManager,PostsListener.ISubscriptionsPersistence)
  fullName: PostsListener.SubscriptionsManager.SubscriptionsManager(PostsListener.StreamManager, PostsListener.ISubscriptionsPersistence)
  nameWithType: SubscriptionsManager.SubscriptionsManager(StreamManager, ISubscriptionsPersistence)
- uid: PostsListener.SubscriptionsManager.#ctor*
  name: SubscriptionsManager
  href: api/PostsListener.SubscriptionsManager.html#PostsListener_SubscriptionsManager__ctor_
  commentId: Overload:PostsListener.SubscriptionsManager.#ctor
  isSpec: "True"
  fullName: PostsListener.SubscriptionsManager.SubscriptionsManager
  nameWithType: SubscriptionsManager.SubscriptionsManager
- uid: PostsListener.SubscriptionsManager.AddOrUpdateAsync(Subscription,System.Nullable{DateTime},CancellationToken)
  name: AddOrUpdateAsync(Subscription, Nullable<DateTime>, CancellationToken)
  href: api/PostsListener.SubscriptionsManager.html#PostsListener_SubscriptionsManager_AddOrUpdateAsync_Subscription_System_Nullable_DateTime__CancellationToken_
  commentId: M:PostsListener.SubscriptionsManager.AddOrUpdateAsync(Subscription,System.Nullable{DateTime},CancellationToken)
  name.vb: AddOrUpdateAsync(Subscription, Nullable(Of DateTime), CancellationToken)
  fullName: PostsListener.SubscriptionsManager.AddOrUpdateAsync(Subscription, System.Nullable<DateTime>, CancellationToken)
  fullName.vb: PostsListener.SubscriptionsManager.AddOrUpdateAsync(Subscription, System.Nullable(Of DateTime), CancellationToken)
  nameWithType: SubscriptionsManager.AddOrUpdateAsync(Subscription, Nullable<DateTime>, CancellationToken)
  nameWithType.vb: SubscriptionsManager.AddOrUpdateAsync(Subscription, Nullable(Of DateTime), CancellationToken)
- uid: PostsListener.SubscriptionsManager.AddOrUpdateAsync*
  name: AddOrUpdateAsync
  href: api/PostsListener.SubscriptionsManager.html#PostsListener_SubscriptionsManager_AddOrUpdateAsync_
  commentId: Overload:PostsListener.SubscriptionsManager.AddOrUpdateAsync
  isSpec: "True"
  fullName: PostsListener.SubscriptionsManager.AddOrUpdateAsync
  nameWithType: SubscriptionsManager.AddOrUpdateAsync
- uid: PostsListener.SubscriptionsManager.Get
  name: Get()
  href: api/PostsListener.SubscriptionsManager.html#PostsListener_SubscriptionsManager_Get
  commentId: M:PostsListener.SubscriptionsManager.Get
  fullName: PostsListener.SubscriptionsManager.Get()
  nameWithType: SubscriptionsManager.Get()
- uid: PostsListener.SubscriptionsManager.Get*
  name: Get
  href: api/PostsListener.SubscriptionsManager.html#PostsListener_SubscriptionsManager_Get_
  commentId: Overload:PostsListener.SubscriptionsManager.Get
  isSpec: "True"
  fullName: PostsListener.SubscriptionsManager.Get
  nameWithType: SubscriptionsManager.Get
- uid: PostsListener.SubscriptionsManager.RemoveAsync(Subscription,CancellationToken)
  name: RemoveAsync(Subscription, CancellationToken)
  href: api/PostsListener.SubscriptionsManager.html#PostsListener_SubscriptionsManager_RemoveAsync_Subscription_CancellationToken_
  commentId: M:PostsListener.SubscriptionsManager.RemoveAsync(Subscription,CancellationToken)
  fullName: PostsListener.SubscriptionsManager.RemoveAsync(Subscription, CancellationToken)
  nameWithType: SubscriptionsManager.RemoveAsync(Subscription, CancellationToken)
- uid: PostsListener.SubscriptionsManager.RemoveAsync*
  name: RemoveAsync
  href: api/PostsListener.SubscriptionsManager.html#PostsListener_SubscriptionsManager_RemoveAsync_
  commentId: Overload:PostsListener.SubscriptionsManager.RemoveAsync
  isSpec: "True"
  fullName: PostsListener.SubscriptionsManager.RemoveAsync
  nameWithType: SubscriptionsManager.RemoveAsync
- uid: PostsListener.SubscriptionsManagerConfig
  name: SubscriptionsManagerConfig
  href: api/PostsListener.SubscriptionsManagerConfig.html
  commentId: T:PostsListener.SubscriptionsManagerConfig
  fullName: PostsListener.SubscriptionsManagerConfig
  nameWithType: SubscriptionsManagerConfig
- uid: PostsListener.SubscriptionsManagerConfig.MaxDegreeOfParallelism
  name: MaxDegreeOfParallelism
  href: api/PostsListener.SubscriptionsManagerConfig.html#PostsListener_SubscriptionsManagerConfig_MaxDegreeOfParallelism
  commentId: P:PostsListener.SubscriptionsManagerConfig.MaxDegreeOfParallelism
  fullName: PostsListener.SubscriptionsManagerConfig.MaxDegreeOfParallelism
  nameWithType: SubscriptionsManagerConfig.MaxDegreeOfParallelism
- uid: PostsListener.SubscriptionsManagerConfig.MaxDegreeOfParallelism*
  name: MaxDegreeOfParallelism
  href: api/PostsListener.SubscriptionsManagerConfig.html#PostsListener_SubscriptionsManagerConfig_MaxDegreeOfParallelism_
  commentId: Overload:PostsListener.SubscriptionsManagerConfig.MaxDegreeOfParallelism
  isSpec: "True"
  fullName: PostsListener.SubscriptionsManagerConfig.MaxDegreeOfParallelism
  nameWithType: SubscriptionsManagerConfig.MaxDegreeOfParallelism
- uid: root.home
  name: Scraper.Net
  href: index.html
- uid: Scraper.MassTransit
  name: Scraper.MassTransit
  href: api/Scraper.MassTransit.html
  commentId: N:Scraper.MassTransit
  fullName: Scraper.MassTransit
  nameWithType: Scraper.MassTransit
- uid: Scraper.MassTransit.Client
  name: Scraper.MassTransit.Client
  href: api/Scraper.MassTransit.Client.html
  commentId: N:Scraper.MassTransit.Client
  fullName: Scraper.MassTransit.Client
  nameWithType: Scraper.MassTransit.Client
- uid: Scraper.MassTransit.Client.BusExtensions
  name: BusExtensions
  href: api/Scraper.MassTransit.Client.BusExtensions.html
  commentId: T:Scraper.MassTransit.Client.BusExtensions
  fullName: Scraper.MassTransit.Client.BusExtensions
  nameWithType: BusExtensions
- uid: Scraper.MassTransit.Client.BusExtensions.ConnectRequestObservable*
  name: ConnectRequestObservable
  href: api/Scraper.MassTransit.Client.BusExtensions.html#Scraper_MassTransit_Client_BusExtensions_ConnectRequestObservable_
  commentId: Overload:Scraper.MassTransit.Client.BusExtensions.ConnectRequestObservable
  isSpec: "True"
  fullName: Scraper.MassTransit.Client.BusExtensions.ConnectRequestObservable
  nameWithType: BusExtensions.ConnectRequestObservable
- uid: Scraper.MassTransit.Client.BusExtensions.ConnectRequestObservable``1(IBus,Guid)
  name: ConnectRequestObservable<T>(IBus, Guid)
  href: api/Scraper.MassTransit.Client.BusExtensions.html#Scraper_MassTransit_Client_BusExtensions_ConnectRequestObservable__1_IBus_Guid_
  commentId: M:Scraper.MassTransit.Client.BusExtensions.ConnectRequestObservable``1(IBus,Guid)
  name.vb: ConnectRequestObservable(Of T)(IBus, Guid)
  fullName: Scraper.MassTransit.Client.BusExtensions.ConnectRequestObservable<T>(IBus, Guid)
  fullName.vb: Scraper.MassTransit.Client.BusExtensions.ConnectRequestObservable(Of T)(IBus, Guid)
  nameWithType: BusExtensions.ConnectRequestObservable<T>(IBus, Guid)
  nameWithType.vb: BusExtensions.ConnectRequestObservable(Of T)(IBus, Guid)
- uid: Scraper.MassTransit.Client.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/Scraper.MassTransit.Client.ServiceCollectionExtensions.html
  commentId: T:Scraper.MassTransit.Client.ServiceCollectionExtensions
  fullName: Scraper.MassTransit.Client.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: Scraper.MassTransit.Client.ServiceCollectionExtensions.AddScraperMassTransitClient(IServiceCollection,System.Nullable{TimeSpan})
  name: AddScraperMassTransitClient(IServiceCollection, Nullable<TimeSpan>)
  href: api/Scraper.MassTransit.Client.ServiceCollectionExtensions.html#Scraper_MassTransit_Client_ServiceCollectionExtensions_AddScraperMassTransitClient_IServiceCollection_System_Nullable_TimeSpan__
  commentId: M:Scraper.MassTransit.Client.ServiceCollectionExtensions.AddScraperMassTransitClient(IServiceCollection,System.Nullable{TimeSpan})
  name.vb: AddScraperMassTransitClient(IServiceCollection, Nullable(Of TimeSpan))
  fullName: Scraper.MassTransit.Client.ServiceCollectionExtensions.AddScraperMassTransitClient(IServiceCollection, System.Nullable<TimeSpan>)
  fullName.vb: Scraper.MassTransit.Client.ServiceCollectionExtensions.AddScraperMassTransitClient(IServiceCollection, System.Nullable(Of TimeSpan))
  nameWithType: ServiceCollectionExtensions.AddScraperMassTransitClient(IServiceCollection, Nullable<TimeSpan>)
  nameWithType.vb: ServiceCollectionExtensions.AddScraperMassTransitClient(IServiceCollection, Nullable(Of TimeSpan))
- uid: Scraper.MassTransit.Client.ServiceCollectionExtensions.AddScraperMassTransitClient*
  name: AddScraperMassTransitClient
  href: api/Scraper.MassTransit.Client.ServiceCollectionExtensions.html#Scraper_MassTransit_Client_ServiceCollectionExtensions_AddScraperMassTransitClient_
  commentId: Overload:Scraper.MassTransit.Client.ServiceCollectionExtensions.AddScraperMassTransitClient
  isSpec: "True"
  fullName: Scraper.MassTransit.Client.ServiceCollectionExtensions.AddScraperMassTransitClient
  nameWithType: ServiceCollectionExtensions.AddScraperMassTransitClient
- uid: Scraper.MassTransit.Common
  name: Scraper.MassTransit.Common
  href: api/Scraper.MassTransit.Common.html
  commentId: N:Scraper.MassTransit.Common
  fullName: Scraper.MassTransit.Common
  nameWithType: Scraper.MassTransit.Common
- uid: Scraper.MassTransit.Common.JsonConfigurator
  name: JsonConfigurator
  href: api/Scraper.MassTransit.Common.JsonConfigurator.html
  commentId: T:Scraper.MassTransit.Common.JsonConfigurator
  fullName: Scraper.MassTransit.Common.JsonConfigurator
  nameWithType: JsonConfigurator
- uid: Scraper.MassTransit.Common.JsonConfigurator.ConfigureInterfaceJsonSerialization(IBusFactoryConfigurator,Type[])
  name: ConfigureInterfaceJsonSerialization(IBusFactoryConfigurator, Type[])
  href: api/Scraper.MassTransit.Common.JsonConfigurator.html#Scraper_MassTransit_Common_JsonConfigurator_ConfigureInterfaceJsonSerialization_IBusFactoryConfigurator_Type___
  commentId: M:Scraper.MassTransit.Common.JsonConfigurator.ConfigureInterfaceJsonSerialization(IBusFactoryConfigurator,Type[])
  name.vb: ConfigureInterfaceJsonSerialization(IBusFactoryConfigurator, Type())
  fullName: Scraper.MassTransit.Common.JsonConfigurator.ConfigureInterfaceJsonSerialization(IBusFactoryConfigurator, Type[])
  fullName.vb: Scraper.MassTransit.Common.JsonConfigurator.ConfigureInterfaceJsonSerialization(IBusFactoryConfigurator, Type())
  nameWithType: JsonConfigurator.ConfigureInterfaceJsonSerialization(IBusFactoryConfigurator, Type[])
  nameWithType.vb: JsonConfigurator.ConfigureInterfaceJsonSerialization(IBusFactoryConfigurator, Type())
- uid: Scraper.MassTransit.Common.JsonConfigurator.ConfigureInterfaceJsonSerialization*
  name: ConfigureInterfaceJsonSerialization
  href: api/Scraper.MassTransit.Common.JsonConfigurator.html#Scraper_MassTransit_Common_JsonConfigurator_ConfigureInterfaceJsonSerialization_
  commentId: Overload:Scraper.MassTransit.Common.JsonConfigurator.ConfigureInterfaceJsonSerialization
  isSpec: "True"
  fullName: Scraper.MassTransit.Common.JsonConfigurator.ConfigureInterfaceJsonSerialization
  nameWithType: JsonConfigurator.ConfigureInterfaceJsonSerialization
- uid: Scraper.MassTransit.Common.RabbitMqConfig
  name: RabbitMqConfig
  href: api/Scraper.MassTransit.Common.RabbitMqConfig.html
  commentId: T:Scraper.MassTransit.Common.RabbitMqConfig
  fullName: Scraper.MassTransit.Common.RabbitMqConfig
  nameWithType: RabbitMqConfig
- uid: Scraper.MassTransit.Common.RabbitMqConfig.ConnectionString
  name: ConnectionString
  href: api/Scraper.MassTransit.Common.RabbitMqConfig.html#Scraper_MassTransit_Common_RabbitMqConfig_ConnectionString
  commentId: P:Scraper.MassTransit.Common.RabbitMqConfig.ConnectionString
  fullName: Scraper.MassTransit.Common.RabbitMqConfig.ConnectionString
  nameWithType: RabbitMqConfig.ConnectionString
- uid: Scraper.MassTransit.Common.RabbitMqConfig.ConnectionString*
  name: ConnectionString
  href: api/Scraper.MassTransit.Common.RabbitMqConfig.html#Scraper_MassTransit_Common_RabbitMqConfig_ConnectionString_
  commentId: Overload:Scraper.MassTransit.Common.RabbitMqConfig.ConnectionString
  isSpec: "True"
  fullName: Scraper.MassTransit.Common.RabbitMqConfig.ConnectionString
  nameWithType: RabbitMqConfig.ConnectionString
- uid: Scraper.MassTransit.GetAuthorConsumer
  name: GetAuthorConsumer
  href: api/Scraper.MassTransit.GetAuthorConsumer.html
  commentId: T:Scraper.MassTransit.GetAuthorConsumer
  fullName: Scraper.MassTransit.GetAuthorConsumer
  nameWithType: GetAuthorConsumer
- uid: Scraper.MassTransit.GetAuthorConsumer.#ctor(IScraperService)
  name: GetAuthorConsumer(IScraperService)
  href: api/Scraper.MassTransit.GetAuthorConsumer.html#Scraper_MassTransit_GetAuthorConsumer__ctor_IScraperService_
  commentId: M:Scraper.MassTransit.GetAuthorConsumer.#ctor(IScraperService)
  fullName: Scraper.MassTransit.GetAuthorConsumer.GetAuthorConsumer(IScraperService)
  nameWithType: GetAuthorConsumer.GetAuthorConsumer(IScraperService)
- uid: Scraper.MassTransit.GetAuthorConsumer.#ctor*
  name: GetAuthorConsumer
  href: api/Scraper.MassTransit.GetAuthorConsumer.html#Scraper_MassTransit_GetAuthorConsumer__ctor_
  commentId: Overload:Scraper.MassTransit.GetAuthorConsumer.#ctor
  isSpec: "True"
  fullName: Scraper.MassTransit.GetAuthorConsumer.GetAuthorConsumer
  nameWithType: GetAuthorConsumer.GetAuthorConsumer
- uid: Scraper.MassTransit.GetAuthorConsumer.Consume(ConsumeContext{GetAuthor})
  name: Consume(ConsumeContext<GetAuthor>)
  href: api/Scraper.MassTransit.GetAuthorConsumer.html#Scraper_MassTransit_GetAuthorConsumer_Consume_ConsumeContext_GetAuthor__
  commentId: M:Scraper.MassTransit.GetAuthorConsumer.Consume(ConsumeContext{GetAuthor})
  name.vb: Consume(ConsumeContext(Of GetAuthor))
  fullName: Scraper.MassTransit.GetAuthorConsumer.Consume(ConsumeContext<GetAuthor>)
  fullName.vb: Scraper.MassTransit.GetAuthorConsumer.Consume(ConsumeContext(Of GetAuthor))
  nameWithType: GetAuthorConsumer.Consume(ConsumeContext<GetAuthor>)
  nameWithType.vb: GetAuthorConsumer.Consume(ConsumeContext(Of GetAuthor))
- uid: Scraper.MassTransit.GetAuthorConsumer.Consume*
  name: Consume
  href: api/Scraper.MassTransit.GetAuthorConsumer.html#Scraper_MassTransit_GetAuthorConsumer_Consume_
  commentId: Overload:Scraper.MassTransit.GetAuthorConsumer.Consume
  isSpec: "True"
  fullName: Scraper.MassTransit.GetAuthorConsumer.Consume
  nameWithType: GetAuthorConsumer.Consume
- uid: Scraper.MassTransit.GetPostsConsumer
  name: GetPostsConsumer
  href: api/Scraper.MassTransit.GetPostsConsumer.html
  commentId: T:Scraper.MassTransit.GetPostsConsumer
  fullName: Scraper.MassTransit.GetPostsConsumer
  nameWithType: GetPostsConsumer
- uid: Scraper.MassTransit.GetPostsConsumer.#ctor(IScraperService)
  name: GetPostsConsumer(IScraperService)
  href: api/Scraper.MassTransit.GetPostsConsumer.html#Scraper_MassTransit_GetPostsConsumer__ctor_IScraperService_
  commentId: M:Scraper.MassTransit.GetPostsConsumer.#ctor(IScraperService)
  fullName: Scraper.MassTransit.GetPostsConsumer.GetPostsConsumer(IScraperService)
  nameWithType: GetPostsConsumer.GetPostsConsumer(IScraperService)
- uid: Scraper.MassTransit.GetPostsConsumer.#ctor*
  name: GetPostsConsumer
  href: api/Scraper.MassTransit.GetPostsConsumer.html#Scraper_MassTransit_GetPostsConsumer__ctor_
  commentId: Overload:Scraper.MassTransit.GetPostsConsumer.#ctor
  isSpec: "True"
  fullName: Scraper.MassTransit.GetPostsConsumer.GetPostsConsumer
  nameWithType: GetPostsConsumer.GetPostsConsumer
- uid: Scraper.MassTransit.GetPostsConsumer.Consume(ConsumeContext{GetPosts})
  name: Consume(ConsumeContext<GetPosts>)
  href: api/Scraper.MassTransit.GetPostsConsumer.html#Scraper_MassTransit_GetPostsConsumer_Consume_ConsumeContext_GetPosts__
  commentId: M:Scraper.MassTransit.GetPostsConsumer.Consume(ConsumeContext{GetPosts})
  name.vb: Consume(ConsumeContext(Of GetPosts))
  fullName: Scraper.MassTransit.GetPostsConsumer.Consume(ConsumeContext<GetPosts>)
  fullName.vb: Scraper.MassTransit.GetPostsConsumer.Consume(ConsumeContext(Of GetPosts))
  nameWithType: GetPostsConsumer.Consume(ConsumeContext<GetPosts>)
  nameWithType.vb: GetPostsConsumer.Consume(ConsumeContext(Of GetPosts))
- uid: Scraper.MassTransit.GetPostsConsumer.Consume*
  name: Consume
  href: api/Scraper.MassTransit.GetPostsConsumer.html#Scraper_MassTransit_GetPostsConsumer_Consume_
  commentId: Overload:Scraper.MassTransit.GetPostsConsumer.Consume
  isSpec: "True"
  fullName: Scraper.MassTransit.GetPostsConsumer.Consume
  nameWithType: GetPostsConsumer.Consume
- uid: Scraper.MassTransit.Program
  name: Program
  href: api/Scraper.MassTransit.Program.html
  commentId: T:Scraper.MassTransit.Program
  fullName: Scraper.MassTransit.Program
  nameWithType: Program
- uid: Scraper.MassTransit.Program.Main(System.String[])
  name: Main(String[])
  href: api/Scraper.MassTransit.Program.html#Scraper_MassTransit_Program_Main_System_String___
  commentId: M:Scraper.MassTransit.Program.Main(System.String[])
  name.vb: Main(String())
  fullName: Scraper.MassTransit.Program.Main(System.String[])
  fullName.vb: Scraper.MassTransit.Program.Main(System.String())
  nameWithType: Program.Main(String[])
  nameWithType.vb: Program.Main(String())
- uid: Scraper.MassTransit.Program.Main*
  name: Main
  href: api/Scraper.MassTransit.Program.html#Scraper_MassTransit_Program_Main_
  commentId: Overload:Scraper.MassTransit.Program.Main
  isSpec: "True"
  fullName: Scraper.MassTransit.Program.Main
  nameWithType: Program.Main
- uid: Scraper.MassTransit.Startup
  name: Startup
  href: api/Scraper.MassTransit.Startup.html
  commentId: T:Scraper.MassTransit.Startup
  fullName: Scraper.MassTransit.Startup
  nameWithType: Startup
- uid: Scraper.MassTransit.Startup.#ctor(IConfiguration)
  name: Startup(IConfiguration)
  href: api/Scraper.MassTransit.Startup.html#Scraper_MassTransit_Startup__ctor_IConfiguration_
  commentId: M:Scraper.MassTransit.Startup.#ctor(IConfiguration)
  fullName: Scraper.MassTransit.Startup.Startup(IConfiguration)
  nameWithType: Startup.Startup(IConfiguration)
- uid: Scraper.MassTransit.Startup.#ctor*
  name: Startup
  href: api/Scraper.MassTransit.Startup.html#Scraper_MassTransit_Startup__ctor_
  commentId: Overload:Scraper.MassTransit.Startup.#ctor
  isSpec: "True"
  fullName: Scraper.MassTransit.Startup.Startup
  nameWithType: Startup.Startup
- uid: Scraper.MassTransit.Startup.ConfigureServices(IServiceCollection)
  name: ConfigureServices(IServiceCollection)
  href: api/Scraper.MassTransit.Startup.html#Scraper_MassTransit_Startup_ConfigureServices_IServiceCollection_
  commentId: M:Scraper.MassTransit.Startup.ConfigureServices(IServiceCollection)
  fullName: Scraper.MassTransit.Startup.ConfigureServices(IServiceCollection)
  nameWithType: Startup.ConfigureServices(IServiceCollection)
- uid: Scraper.MassTransit.Startup.ConfigureServices*
  name: ConfigureServices
  href: api/Scraper.MassTransit.Startup.html#Scraper_MassTransit_Startup_ConfigureServices_
  commentId: Overload:Scraper.MassTransit.Startup.ConfigureServices
  isSpec: "True"
  fullName: Scraper.MassTransit.Startup.ConfigureServices
  nameWithType: Startup.ConfigureServices
- uid: Scraper.Net
  name: Scraper.Net
  href: api/Scraper.Net.html
  commentId: N:Scraper.Net
  fullName: Scraper.Net
  nameWithType: Scraper.Net
- uid: Scraper.Net.AsyncEnumerableExtensions
  name: AsyncEnumerableExtensions
  href: api/Scraper.Net.AsyncEnumerableExtensions.html
  commentId: T:Scraper.Net.AsyncEnumerableExtensions
  fullName: Scraper.Net.AsyncEnumerableExtensions
  nameWithType: AsyncEnumerableExtensions
- uid: Scraper.Net.AsyncEnumerableExtensions.Catch*
  name: Catch
  href: api/Scraper.Net.AsyncEnumerableExtensions.html#Scraper_Net_AsyncEnumerableExtensions_Catch_
  commentId: Overload:Scraper.Net.AsyncEnumerableExtensions.Catch
  isSpec: "True"
  fullName: Scraper.Net.AsyncEnumerableExtensions.Catch
  nameWithType: AsyncEnumerableExtensions.Catch
- uid: Scraper.Net.AsyncEnumerableExtensions.Catch``2(IAsyncEnumerable{``0},Action{``1})
  name: Catch<TSource, TException>(IAsyncEnumerable<TSource>, Action<TException>)
  href: api/Scraper.Net.AsyncEnumerableExtensions.html#Scraper_Net_AsyncEnumerableExtensions_Catch__2_IAsyncEnumerable___0__Action___1__
  commentId: M:Scraper.Net.AsyncEnumerableExtensions.Catch``2(IAsyncEnumerable{``0},Action{``1})
  name.vb: Catch(Of TSource, TException)(IAsyncEnumerable(Of TSource), Action(Of TException))
  fullName: Scraper.Net.AsyncEnumerableExtensions.Catch<TSource, TException>(IAsyncEnumerable<TSource>, Action<TException>)
  fullName.vb: Scraper.Net.AsyncEnumerableExtensions.Catch(Of TSource, TException)(IAsyncEnumerable(Of TSource), Action(Of TException))
  nameWithType: AsyncEnumerableExtensions.Catch<TSource, TException>(IAsyncEnumerable<TSource>, Action<TException>)
  nameWithType.vb: AsyncEnumerableExtensions.Catch(Of TSource, TException)(IAsyncEnumerable(Of TSource), Action(Of TException))
- uid: Scraper.Net.AsyncLazy`1
  name: AsyncLazy<T>
  href: api/Scraper.Net.AsyncLazy-1.html
  commentId: T:Scraper.Net.AsyncLazy`1
  name.vb: AsyncLazy(Of T)
  fullName: Scraper.Net.AsyncLazy<T>
  fullName.vb: Scraper.Net.AsyncLazy(Of T)
  nameWithType: AsyncLazy<T>
  nameWithType.vb: AsyncLazy(Of T)
- uid: Scraper.Net.AsyncLazy`1.#ctor(Func{`0})
  name: AsyncLazy(Func<T>)
  href: api/Scraper.Net.AsyncLazy-1.html#Scraper_Net_AsyncLazy_1__ctor_Func__0__
  commentId: M:Scraper.Net.AsyncLazy`1.#ctor(Func{`0})
  name.vb: AsyncLazy(Func(Of T))
  fullName: Scraper.Net.AsyncLazy<T>.AsyncLazy(Func<T>)
  fullName.vb: Scraper.Net.AsyncLazy(Of T).AsyncLazy(Func(Of T))
  nameWithType: AsyncLazy<T>.AsyncLazy(Func<T>)
  nameWithType.vb: AsyncLazy(Of T).AsyncLazy(Func(Of T))
- uid: Scraper.Net.AsyncLazy`1.#ctor(Func{Task{`0}})
  name: AsyncLazy(Func<Task<T>>)
  href: api/Scraper.Net.AsyncLazy-1.html#Scraper_Net_AsyncLazy_1__ctor_Func_Task__0___
  commentId: M:Scraper.Net.AsyncLazy`1.#ctor(Func{Task{`0}})
  name.vb: AsyncLazy(Func(Of Task(Of T)))
  fullName: Scraper.Net.AsyncLazy<T>.AsyncLazy(Func<Task<T>>)
  fullName.vb: Scraper.Net.AsyncLazy(Of T).AsyncLazy(Func(Of Task(Of T)))
  nameWithType: AsyncLazy<T>.AsyncLazy(Func<Task<T>>)
  nameWithType.vb: AsyncLazy(Of T).AsyncLazy(Func(Of Task(Of T)))
- uid: Scraper.Net.AsyncLazy`1.#ctor*
  name: AsyncLazy
  href: api/Scraper.Net.AsyncLazy-1.html#Scraper_Net_AsyncLazy_1__ctor_
  commentId: Overload:Scraper.Net.AsyncLazy`1.#ctor
  isSpec: "True"
  fullName: Scraper.Net.AsyncLazy<T>.AsyncLazy
  fullName.vb: Scraper.Net.AsyncLazy(Of T).AsyncLazy
  nameWithType: AsyncLazy<T>.AsyncLazy
  nameWithType.vb: AsyncLazy(Of T).AsyncLazy
- uid: Scraper.Net.AsyncLazy`1.GetAwaiter
  name: GetAwaiter()
  href: api/Scraper.Net.AsyncLazy-1.html#Scraper_Net_AsyncLazy_1_GetAwaiter
  commentId: M:Scraper.Net.AsyncLazy`1.GetAwaiter
  fullName: Scraper.Net.AsyncLazy<T>.GetAwaiter()
  fullName.vb: Scraper.Net.AsyncLazy(Of T).GetAwaiter()
  nameWithType: AsyncLazy<T>.GetAwaiter()
  nameWithType.vb: AsyncLazy(Of T).GetAwaiter()
- uid: Scraper.Net.AsyncLazy`1.GetAwaiter*
  name: GetAwaiter
  href: api/Scraper.Net.AsyncLazy-1.html#Scraper_Net_AsyncLazy_1_GetAwaiter_
  commentId: Overload:Scraper.Net.AsyncLazy`1.GetAwaiter
  isSpec: "True"
  fullName: Scraper.Net.AsyncLazy<T>.GetAwaiter
  fullName.vb: Scraper.Net.AsyncLazy(Of T).GetAwaiter
  nameWithType: AsyncLazy<T>.GetAwaiter
  nameWithType.vb: AsyncLazy(Of T).GetAwaiter
- uid: Scraper.Net.Facebook
  name: Scraper.Net.Facebook
  href: api/Scraper.Net.Facebook.html
  commentId: N:Scraper.Net.Facebook
  fullName: Scraper.Net.Facebook
  nameWithType: Scraper.Net.Facebook
- uid: Scraper.Net.Facebook.FacebookConfig
  name: FacebookConfig
  href: api/Scraper.Net.Facebook.FacebookConfig.html
  commentId: T:Scraper.Net.Facebook.FacebookConfig
  fullName: Scraper.Net.Facebook.FacebookConfig
  nameWithType: FacebookConfig
- uid: Scraper.Net.Facebook.FacebookConfig.CookiesFileNames
  name: CookiesFileNames
  href: api/Scraper.Net.Facebook.FacebookConfig.html#Scraper_Net_Facebook_FacebookConfig_CookiesFileNames
  commentId: P:Scraper.Net.Facebook.FacebookConfig.CookiesFileNames
  fullName: Scraper.Net.Facebook.FacebookConfig.CookiesFileNames
  nameWithType: FacebookConfig.CookiesFileNames
- uid: Scraper.Net.Facebook.FacebookConfig.CookiesFileNames*
  name: CookiesFileNames
  href: api/Scraper.Net.Facebook.FacebookConfig.html#Scraper_Net_Facebook_FacebookConfig_CookiesFileNames_
  commentId: Overload:Scraper.Net.Facebook.FacebookConfig.CookiesFileNames
  isSpec: "True"
  fullName: Scraper.Net.Facebook.FacebookConfig.CookiesFileNames
  nameWithType: FacebookConfig.CookiesFileNames
- uid: Scraper.Net.Facebook.FacebookConfig.MaxPageCount
  name: MaxPageCount
  href: api/Scraper.Net.Facebook.FacebookConfig.html#Scraper_Net_Facebook_FacebookConfig_MaxPageCount
  commentId: P:Scraper.Net.Facebook.FacebookConfig.MaxPageCount
  fullName: Scraper.Net.Facebook.FacebookConfig.MaxPageCount
  nameWithType: FacebookConfig.MaxPageCount
- uid: Scraper.Net.Facebook.FacebookConfig.MaxPageCount*
  name: MaxPageCount
  href: api/Scraper.Net.Facebook.FacebookConfig.html#Scraper_Net_Facebook_FacebookConfig_MaxPageCount_
  commentId: Overload:Scraper.Net.Facebook.FacebookConfig.MaxPageCount
  isSpec: "True"
  fullName: Scraper.Net.Facebook.FacebookConfig.MaxPageCount
  nameWithType: FacebookConfig.MaxPageCount
- uid: Scraper.Net.Facebook.FacebookConfig.PostsPerPage
  name: PostsPerPage
  href: api/Scraper.Net.Facebook.FacebookConfig.html#Scraper_Net_Facebook_FacebookConfig_PostsPerPage
  commentId: P:Scraper.Net.Facebook.FacebookConfig.PostsPerPage
  fullName: Scraper.Net.Facebook.FacebookConfig.PostsPerPage
  nameWithType: FacebookConfig.PostsPerPage
- uid: Scraper.Net.Facebook.FacebookConfig.PostsPerPage*
  name: PostsPerPage
  href: api/Scraper.Net.Facebook.FacebookConfig.html#Scraper_Net_Facebook_FacebookConfig_PostsPerPage_
  commentId: Overload:Scraper.Net.Facebook.FacebookConfig.PostsPerPage
  isSpec: "True"
  fullName: Scraper.Net.Facebook.FacebookConfig.PostsPerPage
  nameWithType: FacebookConfig.PostsPerPage
- uid: Scraper.Net.Facebook.FacebookConfig.PythonPath
  name: PythonPath
  href: api/Scraper.Net.Facebook.FacebookConfig.html#Scraper_Net_Facebook_FacebookConfig_PythonPath
  commentId: P:Scraper.Net.Facebook.FacebookConfig.PythonPath
  fullName: Scraper.Net.Facebook.FacebookConfig.PythonPath
  nameWithType: FacebookConfig.PythonPath
- uid: Scraper.Net.Facebook.FacebookConfig.PythonPath*
  name: PythonPath
  href: api/Scraper.Net.Facebook.FacebookConfig.html#Scraper_Net_Facebook_FacebookConfig_PythonPath_
  commentId: Overload:Scraper.Net.Facebook.FacebookConfig.PythonPath
  isSpec: "True"
  fullName: Scraper.Net.Facebook.FacebookConfig.PythonPath
  nameWithType: FacebookConfig.PythonPath
- uid: Scraper.Net.Facebook.FacebookConfig.Timeout
  name: Timeout
  href: api/Scraper.Net.Facebook.FacebookConfig.html#Scraper_Net_Facebook_FacebookConfig_Timeout
  commentId: P:Scraper.Net.Facebook.FacebookConfig.Timeout
  fullName: Scraper.Net.Facebook.FacebookConfig.Timeout
  nameWithType: FacebookConfig.Timeout
- uid: Scraper.Net.Facebook.FacebookConfig.Timeout*
  name: Timeout
  href: api/Scraper.Net.Facebook.FacebookConfig.html#Scraper_Net_Facebook_FacebookConfig_Timeout_
  commentId: Overload:Scraper.Net.Facebook.FacebookConfig.Timeout
  isSpec: "True"
  fullName: Scraper.Net.Facebook.FacebookConfig.Timeout
  nameWithType: FacebookConfig.Timeout
- uid: Scraper.Net.Facebook.FacebookConstants
  name: FacebookConstants
  href: api/Scraper.Net.Facebook.FacebookConstants.html
  commentId: T:Scraper.Net.Facebook.FacebookConstants
  fullName: Scraper.Net.Facebook.FacebookConstants
  nameWithType: FacebookConstants
- uid: Scraper.Net.Facebook.FacebookConstants.PlatformName
  name: PlatformName
  href: api/Scraper.Net.Facebook.FacebookConstants.html#Scraper_Net_Facebook_FacebookConstants_PlatformName
  commentId: F:Scraper.Net.Facebook.FacebookConstants.PlatformName
  fullName: Scraper.Net.Facebook.FacebookConstants.PlatformName
  nameWithType: FacebookConstants.PlatformName
- uid: Scraper.Net.Facebook.FacebookScraper
  name: FacebookScraper
  href: api/Scraper.Net.Facebook.FacebookScraper.html
  commentId: T:Scraper.Net.Facebook.FacebookScraper
  fullName: Scraper.Net.Facebook.FacebookScraper
  nameWithType: FacebookScraper
- uid: Scraper.Net.Facebook.FacebookScraper.#ctor(Scraper.Net.Facebook.FacebookConfig,ILoggerFactory)
  name: FacebookScraper(FacebookConfig, ILoggerFactory)
  href: api/Scraper.Net.Facebook.FacebookScraper.html#Scraper_Net_Facebook_FacebookScraper__ctor_Scraper_Net_Facebook_FacebookConfig_ILoggerFactory_
  commentId: M:Scraper.Net.Facebook.FacebookScraper.#ctor(Scraper.Net.Facebook.FacebookConfig,ILoggerFactory)
  fullName: Scraper.Net.Facebook.FacebookScraper.FacebookScraper(Scraper.Net.Facebook.FacebookConfig, ILoggerFactory)
  nameWithType: FacebookScraper.FacebookScraper(FacebookConfig, ILoggerFactory)
- uid: Scraper.Net.Facebook.FacebookScraper.#ctor*
  name: FacebookScraper
  href: api/Scraper.Net.Facebook.FacebookScraper.html#Scraper_Net_Facebook_FacebookScraper__ctor_
  commentId: Overload:Scraper.Net.Facebook.FacebookScraper.#ctor
  isSpec: "True"
  fullName: Scraper.Net.Facebook.FacebookScraper.FacebookScraper
  nameWithType: FacebookScraper.FacebookScraper
- uid: Scraper.Net.Facebook.FacebookScraper.GetAuthorAsync(System.String,CancellationToken)
  name: GetAuthorAsync(String, CancellationToken)
  href: api/Scraper.Net.Facebook.FacebookScraper.html#Scraper_Net_Facebook_FacebookScraper_GetAuthorAsync_System_String_CancellationToken_
  commentId: M:Scraper.Net.Facebook.FacebookScraper.GetAuthorAsync(System.String,CancellationToken)
  fullName: Scraper.Net.Facebook.FacebookScraper.GetAuthorAsync(System.String, CancellationToken)
  nameWithType: FacebookScraper.GetAuthorAsync(String, CancellationToken)
- uid: Scraper.Net.Facebook.FacebookScraper.GetAuthorAsync*
  name: GetAuthorAsync
  href: api/Scraper.Net.Facebook.FacebookScraper.html#Scraper_Net_Facebook_FacebookScraper_GetAuthorAsync_
  commentId: Overload:Scraper.Net.Facebook.FacebookScraper.GetAuthorAsync
  isSpec: "True"
  fullName: Scraper.Net.Facebook.FacebookScraper.GetAuthorAsync
  nameWithType: FacebookScraper.GetAuthorAsync
- uid: Scraper.Net.Facebook.FacebookScraper.GetPostsAsync(System.String,CancellationToken)
  name: GetPostsAsync(String, CancellationToken)
  href: api/Scraper.Net.Facebook.FacebookScraper.html#Scraper_Net_Facebook_FacebookScraper_GetPostsAsync_System_String_CancellationToken_
  commentId: M:Scraper.Net.Facebook.FacebookScraper.GetPostsAsync(System.String,CancellationToken)
  fullName: Scraper.Net.Facebook.FacebookScraper.GetPostsAsync(System.String, CancellationToken)
  nameWithType: FacebookScraper.GetPostsAsync(String, CancellationToken)
- uid: Scraper.Net.Facebook.FacebookScraper.GetPostsAsync*
  name: GetPostsAsync
  href: api/Scraper.Net.Facebook.FacebookScraper.html#Scraper_Net_Facebook_FacebookScraper_GetPostsAsync_
  commentId: Overload:Scraper.Net.Facebook.FacebookScraper.GetPostsAsync
  isSpec: "True"
  fullName: Scraper.Net.Facebook.FacebookScraper.GetPostsAsync
  nameWithType: FacebookScraper.GetPostsAsync
- uid: Scraper.Net.Facebook.FacebookScraperException
  name: FacebookScraperException
  href: api/Scraper.Net.Facebook.FacebookScraperException.html
  commentId: T:Scraper.Net.Facebook.FacebookScraperException
  fullName: Scraper.Net.Facebook.FacebookScraperException
  nameWithType: FacebookScraperException
- uid: Scraper.Net.Facebook.FacebookScraperException.Message
  name: Message
  href: api/Scraper.Net.Facebook.FacebookScraperException.html#Scraper_Net_Facebook_FacebookScraperException_Message
  commentId: P:Scraper.Net.Facebook.FacebookScraperException.Message
  fullName: Scraper.Net.Facebook.FacebookScraperException.Message
  nameWithType: FacebookScraperException.Message
- uid: Scraper.Net.Facebook.FacebookScraperException.Message*
  name: Message
  href: api/Scraper.Net.Facebook.FacebookScraperException.html#Scraper_Net_Facebook_FacebookScraperException_Message_
  commentId: Overload:Scraper.Net.Facebook.FacebookScraperException.Message
  isSpec: "True"
  fullName: Scraper.Net.Facebook.FacebookScraperException.Message
  nameWithType: FacebookScraperException.Message
- uid: Scraper.Net.Facebook.FacebookScraperException.OriginalMessage
  name: OriginalMessage
  href: api/Scraper.Net.Facebook.FacebookScraperException.html#Scraper_Net_Facebook_FacebookScraperException_OriginalMessage
  commentId: P:Scraper.Net.Facebook.FacebookScraperException.OriginalMessage
  fullName: Scraper.Net.Facebook.FacebookScraperException.OriginalMessage
  nameWithType: FacebookScraperException.OriginalMessage
- uid: Scraper.Net.Facebook.FacebookScraperException.OriginalMessage*
  name: OriginalMessage
  href: api/Scraper.Net.Facebook.FacebookScraperException.html#Scraper_Net_Facebook_FacebookScraperException_OriginalMessage_
  commentId: Overload:Scraper.Net.Facebook.FacebookScraperException.OriginalMessage
  isSpec: "True"
  fullName: Scraper.Net.Facebook.FacebookScraperException.OriginalMessage
  nameWithType: FacebookScraperException.OriginalMessage
- uid: Scraper.Net.Facebook.FacebookScraperException.OriginalStackTrace
  name: OriginalStackTrace
  href: api/Scraper.Net.Facebook.FacebookScraperException.html#Scraper_Net_Facebook_FacebookScraperException_OriginalStackTrace
  commentId: P:Scraper.Net.Facebook.FacebookScraperException.OriginalStackTrace
  fullName: Scraper.Net.Facebook.FacebookScraperException.OriginalStackTrace
  nameWithType: FacebookScraperException.OriginalStackTrace
- uid: Scraper.Net.Facebook.FacebookScraperException.OriginalStackTrace*
  name: OriginalStackTrace
  href: api/Scraper.Net.Facebook.FacebookScraperException.html#Scraper_Net_Facebook_FacebookScraperException_OriginalStackTrace_
  commentId: Overload:Scraper.Net.Facebook.FacebookScraperException.OriginalStackTrace
  isSpec: "True"
  fullName: Scraper.Net.Facebook.FacebookScraperException.OriginalStackTrace
  nameWithType: FacebookScraperException.OriginalStackTrace
- uid: Scraper.Net.Facebook.FacebookScraperException.StackTrace
  name: StackTrace
  href: api/Scraper.Net.Facebook.FacebookScraperException.html#Scraper_Net_Facebook_FacebookScraperException_StackTrace
  commentId: P:Scraper.Net.Facebook.FacebookScraperException.StackTrace
  fullName: Scraper.Net.Facebook.FacebookScraperException.StackTrace
  nameWithType: FacebookScraperException.StackTrace
- uid: Scraper.Net.Facebook.FacebookScraperException.StackTrace*
  name: StackTrace
  href: api/Scraper.Net.Facebook.FacebookScraperException.html#Scraper_Net_Facebook_FacebookScraperException_StackTrace_
  commentId: Overload:Scraper.Net.Facebook.FacebookScraperException.StackTrace
  isSpec: "True"
  fullName: Scraper.Net.Facebook.FacebookScraperException.StackTrace
  nameWithType: FacebookScraperException.StackTrace
- uid: Scraper.Net.Facebook.FacebookScraperException.Type
  name: Type
  href: api/Scraper.Net.Facebook.FacebookScraperException.html#Scraper_Net_Facebook_FacebookScraperException_Type
  commentId: P:Scraper.Net.Facebook.FacebookScraperException.Type
  fullName: Scraper.Net.Facebook.FacebookScraperException.Type
  nameWithType: FacebookScraperException.Type
- uid: Scraper.Net.Facebook.FacebookScraperException.Type*
  name: Type
  href: api/Scraper.Net.Facebook.FacebookScraperException.html#Scraper_Net_Facebook_FacebookScraperException_Type_
  commentId: Overload:Scraper.Net.Facebook.FacebookScraperException.Type
  isSpec: "True"
  fullName: Scraper.Net.Facebook.FacebookScraperException.Type
  nameWithType: FacebookScraperException.Type
- uid: Scraper.Net.Facebook.ScraperExtensions
  name: ScraperExtensions
  href: api/Scraper.Net.Facebook.ScraperExtensions.html
  commentId: T:Scraper.Net.Facebook.ScraperExtensions
  fullName: Scraper.Net.Facebook.ScraperExtensions
  nameWithType: ScraperExtensions
- uid: Scraper.Net.Facebook.ScraperExtensions.AddFacebook(Scraper.Net.ScraperBuilder,Scraper.Net.Facebook.FacebookConfig,System.String)
  name: AddFacebook(ScraperBuilder, FacebookConfig, String)
  href: api/Scraper.Net.Facebook.ScraperExtensions.html#Scraper_Net_Facebook_ScraperExtensions_AddFacebook_Scraper_Net_ScraperBuilder_Scraper_Net_Facebook_FacebookConfig_System_String_
  commentId: M:Scraper.Net.Facebook.ScraperExtensions.AddFacebook(Scraper.Net.ScraperBuilder,Scraper.Net.Facebook.FacebookConfig,System.String)
  fullName: Scraper.Net.Facebook.ScraperExtensions.AddFacebook(Scraper.Net.ScraperBuilder, Scraper.Net.Facebook.FacebookConfig, System.String)
  nameWithType: ScraperExtensions.AddFacebook(ScraperBuilder, FacebookConfig, String)
- uid: Scraper.Net.Facebook.ScraperExtensions.AddFacebook*
  name: AddFacebook
  href: api/Scraper.Net.Facebook.ScraperExtensions.html#Scraper_Net_Facebook_ScraperExtensions_AddFacebook_
  commentId: Overload:Scraper.Net.Facebook.ScraperExtensions.AddFacebook
  isSpec: "True"
  fullName: Scraper.Net.Facebook.ScraperExtensions.AddFacebook
  nameWithType: ScraperExtensions.AddFacebook
- uid: Scraper.Net.Facebook.ScraperExtensions.GetFacebookAuthor(Scraper.Net.IScraperService,System.String,CancellationToken)
  name: GetFacebookAuthor(IScraperService, String, CancellationToken)
  href: api/Scraper.Net.Facebook.ScraperExtensions.html#Scraper_Net_Facebook_ScraperExtensions_GetFacebookAuthor_Scraper_Net_IScraperService_System_String_CancellationToken_
  commentId: M:Scraper.Net.Facebook.ScraperExtensions.GetFacebookAuthor(Scraper.Net.IScraperService,System.String,CancellationToken)
  fullName: Scraper.Net.Facebook.ScraperExtensions.GetFacebookAuthor(Scraper.Net.IScraperService, System.String, CancellationToken)
  nameWithType: ScraperExtensions.GetFacebookAuthor(IScraperService, String, CancellationToken)
- uid: Scraper.Net.Facebook.ScraperExtensions.GetFacebookAuthor*
  name: GetFacebookAuthor
  href: api/Scraper.Net.Facebook.ScraperExtensions.html#Scraper_Net_Facebook_ScraperExtensions_GetFacebookAuthor_
  commentId: Overload:Scraper.Net.Facebook.ScraperExtensions.GetFacebookAuthor
  isSpec: "True"
  fullName: Scraper.Net.Facebook.ScraperExtensions.GetFacebookAuthor
  nameWithType: ScraperExtensions.GetFacebookAuthor
- uid: Scraper.Net.Facebook.ScraperExtensions.GetFacebookPosts(Scraper.Net.IScraperService,System.String,CancellationToken)
  name: GetFacebookPosts(IScraperService, String, CancellationToken)
  href: api/Scraper.Net.Facebook.ScraperExtensions.html#Scraper_Net_Facebook_ScraperExtensions_GetFacebookPosts_Scraper_Net_IScraperService_System_String_CancellationToken_
  commentId: M:Scraper.Net.Facebook.ScraperExtensions.GetFacebookPosts(Scraper.Net.IScraperService,System.String,CancellationToken)
  fullName: Scraper.Net.Facebook.ScraperExtensions.GetFacebookPosts(Scraper.Net.IScraperService, System.String, CancellationToken)
  nameWithType: ScraperExtensions.GetFacebookPosts(IScraperService, String, CancellationToken)
- uid: Scraper.Net.Facebook.ScraperExtensions.GetFacebookPosts*
  name: GetFacebookPosts
  href: api/Scraper.Net.Facebook.ScraperExtensions.html#Scraper_Net_Facebook_ScraperExtensions_GetFacebookPosts_
  commentId: Overload:Scraper.Net.Facebook.ScraperExtensions.GetFacebookPosts
  isSpec: "True"
  fullName: Scraper.Net.Facebook.ScraperExtensions.GetFacebookPosts
  nameWithType: ScraperExtensions.GetFacebookPosts
- uid: Scraper.Net.Feeds
  name: Scraper.Net.Feeds
  href: api/Scraper.Net.Feeds.html
  commentId: N:Scraper.Net.Feeds
  fullName: Scraper.Net.Feeds
  nameWithType: Scraper.Net.Feeds
- uid: Scraper.Net.Feeds.FeedsExtensions
  name: FeedsExtensions
  href: api/Scraper.Net.Feeds.FeedsExtensions.html
  commentId: T:Scraper.Net.Feeds.FeedsExtensions
  fullName: Scraper.Net.Feeds.FeedsExtensions
  nameWithType: FeedsExtensions
- uid: Scraper.Net.Feeds.FeedsExtensions.PlatformName
  name: PlatformName
  href: api/Scraper.Net.Feeds.FeedsExtensions.html#Scraper_Net_Feeds_FeedsExtensions_PlatformName
  commentId: F:Scraper.Net.Feeds.FeedsExtensions.PlatformName
  fullName: Scraper.Net.Feeds.FeedsExtensions.PlatformName
  nameWithType: FeedsExtensions.PlatformName
- uid: Scraper.Net.Feeds.FeedsScraper
  name: FeedsScraper
  href: api/Scraper.Net.Feeds.FeedsScraper.html
  commentId: T:Scraper.Net.Feeds.FeedsScraper
  fullName: Scraper.Net.Feeds.FeedsScraper
  nameWithType: FeedsScraper
- uid: Scraper.Net.Feeds.FeedsScraper.GetAuthorAsync(System.String,CancellationToken)
  name: GetAuthorAsync(String, CancellationToken)
  href: api/Scraper.Net.Feeds.FeedsScraper.html#Scraper_Net_Feeds_FeedsScraper_GetAuthorAsync_System_String_CancellationToken_
  commentId: M:Scraper.Net.Feeds.FeedsScraper.GetAuthorAsync(System.String,CancellationToken)
  fullName: Scraper.Net.Feeds.FeedsScraper.GetAuthorAsync(System.String, CancellationToken)
  nameWithType: FeedsScraper.GetAuthorAsync(String, CancellationToken)
- uid: Scraper.Net.Feeds.FeedsScraper.GetAuthorAsync*
  name: GetAuthorAsync
  href: api/Scraper.Net.Feeds.FeedsScraper.html#Scraper_Net_Feeds_FeedsScraper_GetAuthorAsync_
  commentId: Overload:Scraper.Net.Feeds.FeedsScraper.GetAuthorAsync
  isSpec: "True"
  fullName: Scraper.Net.Feeds.FeedsScraper.GetAuthorAsync
  nameWithType: FeedsScraper.GetAuthorAsync
- uid: Scraper.Net.Feeds.FeedsScraper.GetPostsAsync(System.String,CancellationToken)
  name: GetPostsAsync(String, CancellationToken)
  href: api/Scraper.Net.Feeds.FeedsScraper.html#Scraper_Net_Feeds_FeedsScraper_GetPostsAsync_System_String_CancellationToken_
  commentId: M:Scraper.Net.Feeds.FeedsScraper.GetPostsAsync(System.String,CancellationToken)
  fullName: Scraper.Net.Feeds.FeedsScraper.GetPostsAsync(System.String, CancellationToken)
  nameWithType: FeedsScraper.GetPostsAsync(String, CancellationToken)
- uid: Scraper.Net.Feeds.FeedsScraper.GetPostsAsync*
  name: GetPostsAsync
  href: api/Scraper.Net.Feeds.FeedsScraper.html#Scraper_Net_Feeds_FeedsScraper_GetPostsAsync_
  commentId: Overload:Scraper.Net.Feeds.FeedsScraper.GetPostsAsync
  isSpec: "True"
  fullName: Scraper.Net.Feeds.FeedsScraper.GetPostsAsync
  nameWithType: FeedsScraper.GetPostsAsync
- uid: Scraper.Net.Feeds.ScraperExtensions
  name: ScraperExtensions
  href: api/Scraper.Net.Feeds.ScraperExtensions.html
  commentId: T:Scraper.Net.Feeds.ScraperExtensions
  fullName: Scraper.Net.Feeds.ScraperExtensions
  nameWithType: ScraperExtensions
- uid: Scraper.Net.Feeds.ScraperExtensions.AddFeeds(Scraper.Net.ScraperBuilder,System.String)
  name: AddFeeds(ScraperBuilder, String)
  href: api/Scraper.Net.Feeds.ScraperExtensions.html#Scraper_Net_Feeds_ScraperExtensions_AddFeeds_Scraper_Net_ScraperBuilder_System_String_
  commentId: M:Scraper.Net.Feeds.ScraperExtensions.AddFeeds(Scraper.Net.ScraperBuilder,System.String)
  fullName: Scraper.Net.Feeds.ScraperExtensions.AddFeeds(Scraper.Net.ScraperBuilder, System.String)
  nameWithType: ScraperExtensions.AddFeeds(ScraperBuilder, String)
- uid: Scraper.Net.Feeds.ScraperExtensions.AddFeeds*
  name: AddFeeds
  href: api/Scraper.Net.Feeds.ScraperExtensions.html#Scraper_Net_Feeds_ScraperExtensions_AddFeeds_
  commentId: Overload:Scraper.Net.Feeds.ScraperExtensions.AddFeeds
  isSpec: "True"
  fullName: Scraper.Net.Feeds.ScraperExtensions.AddFeeds
  nameWithType: ScraperExtensions.AddFeeds
- uid: Scraper.Net.Feeds.ScraperExtensions.GetFeedsAuthor(Scraper.Net.IScraperService,System.String,CancellationToken)
  name: GetFeedsAuthor(IScraperService, String, CancellationToken)
  href: api/Scraper.Net.Feeds.ScraperExtensions.html#Scraper_Net_Feeds_ScraperExtensions_GetFeedsAuthor_Scraper_Net_IScraperService_System_String_CancellationToken_
  commentId: M:Scraper.Net.Feeds.ScraperExtensions.GetFeedsAuthor(Scraper.Net.IScraperService,System.String,CancellationToken)
  fullName: Scraper.Net.Feeds.ScraperExtensions.GetFeedsAuthor(Scraper.Net.IScraperService, System.String, CancellationToken)
  nameWithType: ScraperExtensions.GetFeedsAuthor(IScraperService, String, CancellationToken)
- uid: Scraper.Net.Feeds.ScraperExtensions.GetFeedsAuthor*
  name: GetFeedsAuthor
  href: api/Scraper.Net.Feeds.ScraperExtensions.html#Scraper_Net_Feeds_ScraperExtensions_GetFeedsAuthor_
  commentId: Overload:Scraper.Net.Feeds.ScraperExtensions.GetFeedsAuthor
  isSpec: "True"
  fullName: Scraper.Net.Feeds.ScraperExtensions.GetFeedsAuthor
  nameWithType: ScraperExtensions.GetFeedsAuthor
- uid: Scraper.Net.Feeds.ScraperExtensions.GetFeedsPosts(Scraper.Net.IScraperService,System.String,CancellationToken)
  name: GetFeedsPosts(IScraperService, String, CancellationToken)
  href: api/Scraper.Net.Feeds.ScraperExtensions.html#Scraper_Net_Feeds_ScraperExtensions_GetFeedsPosts_Scraper_Net_IScraperService_System_String_CancellationToken_
  commentId: M:Scraper.Net.Feeds.ScraperExtensions.GetFeedsPosts(Scraper.Net.IScraperService,System.String,CancellationToken)
  fullName: Scraper.Net.Feeds.ScraperExtensions.GetFeedsPosts(Scraper.Net.IScraperService, System.String, CancellationToken)
  nameWithType: ScraperExtensions.GetFeedsPosts(IScraperService, String, CancellationToken)
- uid: Scraper.Net.Feeds.ScraperExtensions.GetFeedsPosts*
  name: GetFeedsPosts
  href: api/Scraper.Net.Feeds.ScraperExtensions.html#Scraper_Net_Feeds_ScraperExtensions_GetFeedsPosts_
  commentId: Overload:Scraper.Net.Feeds.ScraperExtensions.GetFeedsPosts
  isSpec: "True"
  fullName: Scraper.Net.Feeds.ScraperExtensions.GetFeedsPosts
  nameWithType: ScraperExtensions.GetFeedsPosts
- uid: Scraper.Net.IdNotFoundException
  name: IdNotFoundException
  href: api/Scraper.Net.IdNotFoundException.html
  commentId: T:Scraper.Net.IdNotFoundException
  fullName: Scraper.Net.IdNotFoundException
  nameWithType: IdNotFoundException
- uid: Scraper.Net.IdNotFoundException.#ctor(System.String)
  name: IdNotFoundException(String)
  href: api/Scraper.Net.IdNotFoundException.html#Scraper_Net_IdNotFoundException__ctor_System_String_
  commentId: M:Scraper.Net.IdNotFoundException.#ctor(System.String)
  fullName: Scraper.Net.IdNotFoundException.IdNotFoundException(System.String)
  nameWithType: IdNotFoundException.IdNotFoundException(String)
- uid: Scraper.Net.IdNotFoundException.#ctor(System.String,Exception)
  name: IdNotFoundException(String, Exception)
  href: api/Scraper.Net.IdNotFoundException.html#Scraper_Net_IdNotFoundException__ctor_System_String_Exception_
  commentId: M:Scraper.Net.IdNotFoundException.#ctor(System.String,Exception)
  fullName: Scraper.Net.IdNotFoundException.IdNotFoundException(System.String, Exception)
  nameWithType: IdNotFoundException.IdNotFoundException(String, Exception)
- uid: Scraper.Net.IdNotFoundException.#ctor*
  name: IdNotFoundException
  href: api/Scraper.Net.IdNotFoundException.html#Scraper_Net_IdNotFoundException__ctor_
  commentId: Overload:Scraper.Net.IdNotFoundException.#ctor
  isSpec: "True"
  fullName: Scraper.Net.IdNotFoundException.IdNotFoundException
  nameWithType: IdNotFoundException.IdNotFoundException
- uid: Scraper.Net.IMediaItem
  name: IMediaItem
  href: api/Scraper.Net.IMediaItem.html
  commentId: T:Scraper.Net.IMediaItem
  fullName: Scraper.Net.IMediaItem
  nameWithType: IMediaItem
- uid: Scraper.Net.IMediaItem.Url
  name: Url
  href: api/Scraper.Net.IMediaItem.html#Scraper_Net_IMediaItem_Url
  commentId: P:Scraper.Net.IMediaItem.Url
  fullName: Scraper.Net.IMediaItem.Url
  nameWithType: IMediaItem.Url
- uid: Scraper.Net.IMediaItem.Url*
  name: Url
  href: api/Scraper.Net.IMediaItem.html#Scraper_Net_IMediaItem_Url_
  commentId: Overload:Scraper.Net.IMediaItem.Url
  isSpec: "True"
  fullName: Scraper.Net.IMediaItem.Url
  nameWithType: IMediaItem.Url
- uid: Scraper.Net.InterfaceConverter`1
  name: InterfaceConverter<T>
  href: api/Scraper.Net.InterfaceConverter-1.html
  commentId: T:Scraper.Net.InterfaceConverter`1
  name.vb: InterfaceConverter(Of T)
  fullName: Scraper.Net.InterfaceConverter<T>
  fullName.vb: Scraper.Net.InterfaceConverter(Of T)
  nameWithType: InterfaceConverter<T>
  nameWithType.vb: InterfaceConverter(Of T)
- uid: Scraper.Net.InterfaceConverter`1.Read(Utf8JsonReader@,Type,JsonSerializerOptions)
  name: Read(ref Utf8JsonReader, Type, JsonSerializerOptions)
  href: api/Scraper.Net.InterfaceConverter-1.html#Scraper_Net_InterfaceConverter_1_Read_Utf8JsonReader__Type_JsonSerializerOptions_
  commentId: M:Scraper.Net.InterfaceConverter`1.Read(Utf8JsonReader@,Type,JsonSerializerOptions)
  name.vb: Read(ByRef Utf8JsonReader, Type, JsonSerializerOptions)
  fullName: Scraper.Net.InterfaceConverter<T>.Read(ref Utf8JsonReader, Type, JsonSerializerOptions)
  fullName.vb: Scraper.Net.InterfaceConverter(Of T).Read(ByRef Utf8JsonReader, Type, JsonSerializerOptions)
  nameWithType: InterfaceConverter<T>.Read(ref Utf8JsonReader, Type, JsonSerializerOptions)
  nameWithType.vb: InterfaceConverter(Of T).Read(ByRef Utf8JsonReader, Type, JsonSerializerOptions)
- uid: Scraper.Net.InterfaceConverter`1.Read*
  name: Read
  href: api/Scraper.Net.InterfaceConverter-1.html#Scraper_Net_InterfaceConverter_1_Read_
  commentId: Overload:Scraper.Net.InterfaceConverter`1.Read
  isSpec: "True"
  fullName: Scraper.Net.InterfaceConverter<T>.Read
  fullName.vb: Scraper.Net.InterfaceConverter(Of T).Read
  nameWithType: InterfaceConverter<T>.Read
  nameWithType.vb: InterfaceConverter(Of T).Read
- uid: Scraper.Net.InterfaceConverter`1.Write(Utf8JsonWriter,`0,JsonSerializerOptions)
  name: Write(Utf8JsonWriter, T, JsonSerializerOptions)
  href: api/Scraper.Net.InterfaceConverter-1.html#Scraper_Net_InterfaceConverter_1_Write_Utf8JsonWriter__0_JsonSerializerOptions_
  commentId: M:Scraper.Net.InterfaceConverter`1.Write(Utf8JsonWriter,`0,JsonSerializerOptions)
  fullName: Scraper.Net.InterfaceConverter<T>.Write(Utf8JsonWriter, T, JsonSerializerOptions)
  fullName.vb: Scraper.Net.InterfaceConverter(Of T).Write(Utf8JsonWriter, T, JsonSerializerOptions)
  nameWithType: InterfaceConverter<T>.Write(Utf8JsonWriter, T, JsonSerializerOptions)
  nameWithType.vb: InterfaceConverter(Of T).Write(Utf8JsonWriter, T, JsonSerializerOptions)
- uid: Scraper.Net.InterfaceConverter`1.Write*
  name: Write
  href: api/Scraper.Net.InterfaceConverter-1.html#Scraper_Net_InterfaceConverter_1_Write_
  commentId: Overload:Scraper.Net.InterfaceConverter`1.Write
  isSpec: "True"
  fullName: Scraper.Net.InterfaceConverter<T>.Write
  fullName.vb: Scraper.Net.InterfaceConverter(Of T).Write
  nameWithType: InterfaceConverter<T>.Write
  nameWithType.vb: InterfaceConverter(Of T).Write
- uid: Scraper.Net.IPlatformScraper
  name: IPlatformScraper
  href: api/Scraper.Net.IPlatformScraper.html
  commentId: T:Scraper.Net.IPlatformScraper
  fullName: Scraper.Net.IPlatformScraper
  nameWithType: IPlatformScraper
- uid: Scraper.Net.IPlatformScraper.GetAuthorAsync(System.String,CancellationToken)
  name: GetAuthorAsync(String, CancellationToken)
  href: api/Scraper.Net.IPlatformScraper.html#Scraper_Net_IPlatformScraper_GetAuthorAsync_System_String_CancellationToken_
  commentId: M:Scraper.Net.IPlatformScraper.GetAuthorAsync(System.String,CancellationToken)
  fullName: Scraper.Net.IPlatformScraper.GetAuthorAsync(System.String, CancellationToken)
  nameWithType: IPlatformScraper.GetAuthorAsync(String, CancellationToken)
- uid: Scraper.Net.IPlatformScraper.GetAuthorAsync*
  name: GetAuthorAsync
  href: api/Scraper.Net.IPlatformScraper.html#Scraper_Net_IPlatformScraper_GetAuthorAsync_
  commentId: Overload:Scraper.Net.IPlatformScraper.GetAuthorAsync
  isSpec: "True"
  fullName: Scraper.Net.IPlatformScraper.GetAuthorAsync
  nameWithType: IPlatformScraper.GetAuthorAsync
- uid: Scraper.Net.IPlatformScraper.GetPostsAsync(System.String,CancellationToken)
  name: GetPostsAsync(String, CancellationToken)
  href: api/Scraper.Net.IPlatformScraper.html#Scraper_Net_IPlatformScraper_GetPostsAsync_System_String_CancellationToken_
  commentId: M:Scraper.Net.IPlatformScraper.GetPostsAsync(System.String,CancellationToken)
  fullName: Scraper.Net.IPlatformScraper.GetPostsAsync(System.String, CancellationToken)
  nameWithType: IPlatformScraper.GetPostsAsync(String, CancellationToken)
- uid: Scraper.Net.IPlatformScraper.GetPostsAsync*
  name: GetPostsAsync
  href: api/Scraper.Net.IPlatformScraper.html#Scraper_Net_IPlatformScraper_GetPostsAsync_
  commentId: Overload:Scraper.Net.IPlatformScraper.GetPostsAsync
  isSpec: "True"
  fullName: Scraper.Net.IPlatformScraper.GetPostsAsync
  nameWithType: IPlatformScraper.GetPostsAsync
- uid: Scraper.Net.IPostProcessor
  name: IPostProcessor
  href: api/Scraper.Net.IPostProcessor.html
  commentId: T:Scraper.Net.IPostProcessor
  fullName: Scraper.Net.IPostProcessor
  nameWithType: IPostProcessor
- uid: Scraper.Net.IPostProcessor.ProcessAsync(Post,System.String,CancellationToken)
  name: ProcessAsync(Post, String, CancellationToken)
  href: api/Scraper.Net.IPostProcessor.html#Scraper_Net_IPostProcessor_ProcessAsync_Post_System_String_CancellationToken_
  commentId: M:Scraper.Net.IPostProcessor.ProcessAsync(Post,System.String,CancellationToken)
  fullName: Scraper.Net.IPostProcessor.ProcessAsync(Post, System.String, CancellationToken)
  nameWithType: IPostProcessor.ProcessAsync(Post, String, CancellationToken)
- uid: Scraper.Net.IPostProcessor.ProcessAsync*
  name: ProcessAsync
  href: api/Scraper.Net.IPostProcessor.html#Scraper_Net_IPostProcessor_ProcessAsync_
  commentId: Overload:Scraper.Net.IPostProcessor.ProcessAsync
  isSpec: "True"
  fullName: Scraper.Net.IPostProcessor.ProcessAsync
  nameWithType: IPostProcessor.ProcessAsync
- uid: Scraper.Net.IScraperService
  name: IScraperService
  href: api/Scraper.Net.IScraperService.html
  commentId: T:Scraper.Net.IScraperService
  fullName: Scraper.Net.IScraperService
  nameWithType: IScraperService
- uid: Scraper.Net.IScraperService.GetAuthorAsync(System.String,System.String,CancellationToken)
  name: GetAuthorAsync(String, String, CancellationToken)
  href: api/Scraper.Net.IScraperService.html#Scraper_Net_IScraperService_GetAuthorAsync_System_String_System_String_CancellationToken_
  commentId: M:Scraper.Net.IScraperService.GetAuthorAsync(System.String,System.String,CancellationToken)
  fullName: Scraper.Net.IScraperService.GetAuthorAsync(System.String, System.String, CancellationToken)
  nameWithType: IScraperService.GetAuthorAsync(String, String, CancellationToken)
- uid: Scraper.Net.IScraperService.GetAuthorAsync*
  name: GetAuthorAsync
  href: api/Scraper.Net.IScraperService.html#Scraper_Net_IScraperService_GetAuthorAsync_
  commentId: Overload:Scraper.Net.IScraperService.GetAuthorAsync
  isSpec: "True"
  fullName: Scraper.Net.IScraperService.GetAuthorAsync
  nameWithType: IScraperService.GetAuthorAsync
- uid: Scraper.Net.IScraperService.GetPostsAsync(System.String,System.String,CancellationToken)
  name: GetPostsAsync(String, String, CancellationToken)
  href: api/Scraper.Net.IScraperService.html#Scraper_Net_IScraperService_GetPostsAsync_System_String_System_String_CancellationToken_
  commentId: M:Scraper.Net.IScraperService.GetPostsAsync(System.String,System.String,CancellationToken)
  fullName: Scraper.Net.IScraperService.GetPostsAsync(System.String, System.String, CancellationToken)
  nameWithType: IScraperService.GetPostsAsync(String, String, CancellationToken)
- uid: Scraper.Net.IScraperService.GetPostsAsync*
  name: GetPostsAsync
  href: api/Scraper.Net.IScraperService.html#Scraper_Net_IScraperService_GetPostsAsync_
  commentId: Overload:Scraper.Net.IScraperService.GetPostsAsync
  isSpec: "True"
  fullName: Scraper.Net.IScraperService.GetPostsAsync
  nameWithType: IScraperService.GetPostsAsync
- uid: Scraper.Net.JsonInterfaceConverterAttribute
  name: JsonInterfaceConverterAttribute
  href: api/Scraper.Net.JsonInterfaceConverterAttribute.html
  commentId: T:Scraper.Net.JsonInterfaceConverterAttribute
  fullName: Scraper.Net.JsonInterfaceConverterAttribute
  nameWithType: JsonInterfaceConverterAttribute
- uid: Scraper.Net.JsonInterfaceConverterAttribute.#ctor(Type)
  name: JsonInterfaceConverterAttribute(Type)
  href: api/Scraper.Net.JsonInterfaceConverterAttribute.html#Scraper_Net_JsonInterfaceConverterAttribute__ctor_Type_
  commentId: M:Scraper.Net.JsonInterfaceConverterAttribute.#ctor(Type)
  fullName: Scraper.Net.JsonInterfaceConverterAttribute.JsonInterfaceConverterAttribute(Type)
  nameWithType: JsonInterfaceConverterAttribute.JsonInterfaceConverterAttribute(Type)
- uid: Scraper.Net.JsonInterfaceConverterAttribute.#ctor*
  name: JsonInterfaceConverterAttribute
  href: api/Scraper.Net.JsonInterfaceConverterAttribute.html#Scraper_Net_JsonInterfaceConverterAttribute__ctor_
  commentId: Overload:Scraper.Net.JsonInterfaceConverterAttribute.#ctor
  isSpec: "True"
  fullName: Scraper.Net.JsonInterfaceConverterAttribute.JsonInterfaceConverterAttribute
  nameWithType: JsonInterfaceConverterAttribute.JsonInterfaceConverterAttribute
- uid: Scraper.Net.LoginRequiredException
  name: LoginRequiredException
  href: api/Scraper.Net.LoginRequiredException.html
  commentId: T:Scraper.Net.LoginRequiredException
  fullName: Scraper.Net.LoginRequiredException
  nameWithType: LoginRequiredException
- uid: Scraper.Net.LoginRequiredException.#ctor
  name: LoginRequiredException()
  href: api/Scraper.Net.LoginRequiredException.html#Scraper_Net_LoginRequiredException__ctor
  commentId: M:Scraper.Net.LoginRequiredException.#ctor
  fullName: Scraper.Net.LoginRequiredException.LoginRequiredException()
  nameWithType: LoginRequiredException.LoginRequiredException()
- uid: Scraper.Net.LoginRequiredException.#ctor(Exception)
  name: LoginRequiredException(Exception)
  href: api/Scraper.Net.LoginRequiredException.html#Scraper_Net_LoginRequiredException__ctor_Exception_
  commentId: M:Scraper.Net.LoginRequiredException.#ctor(Exception)
  fullName: Scraper.Net.LoginRequiredException.LoginRequiredException(Exception)
  nameWithType: LoginRequiredException.LoginRequiredException(Exception)
- uid: Scraper.Net.LoginRequiredException.#ctor(System.String,Exception)
  name: LoginRequiredException(String, Exception)
  href: api/Scraper.Net.LoginRequiredException.html#Scraper_Net_LoginRequiredException__ctor_System_String_Exception_
  commentId: M:Scraper.Net.LoginRequiredException.#ctor(System.String,Exception)
  fullName: Scraper.Net.LoginRequiredException.LoginRequiredException(System.String, Exception)
  nameWithType: LoginRequiredException.LoginRequiredException(String, Exception)
- uid: Scraper.Net.LoginRequiredException.#ctor*
  name: LoginRequiredException
  href: api/Scraper.Net.LoginRequiredException.html#Scraper_Net_LoginRequiredException__ctor_
  commentId: Overload:Scraper.Net.LoginRequiredException.#ctor
  isSpec: "True"
  fullName: Scraper.Net.LoginRequiredException.LoginRequiredException
  nameWithType: LoginRequiredException.LoginRequiredException
- uid: Scraper.Net.NullableTimeSpanConverter
  name: NullableTimeSpanConverter
  href: api/Scraper.Net.NullableTimeSpanConverter.html
  commentId: T:Scraper.Net.NullableTimeSpanConverter
  fullName: Scraper.Net.NullableTimeSpanConverter
  nameWithType: NullableTimeSpanConverter
- uid: Scraper.Net.NullableTimeSpanConverter.Read(Utf8JsonReader@,Type,JsonSerializerOptions)
  name: Read(ref Utf8JsonReader, Type, JsonSerializerOptions)
  href: api/Scraper.Net.NullableTimeSpanConverter.html#Scraper_Net_NullableTimeSpanConverter_Read_Utf8JsonReader__Type_JsonSerializerOptions_
  commentId: M:Scraper.Net.NullableTimeSpanConverter.Read(Utf8JsonReader@,Type,JsonSerializerOptions)
  name.vb: Read(ByRef Utf8JsonReader, Type, JsonSerializerOptions)
  fullName: Scraper.Net.NullableTimeSpanConverter.Read(ref Utf8JsonReader, Type, JsonSerializerOptions)
  fullName.vb: Scraper.Net.NullableTimeSpanConverter.Read(ByRef Utf8JsonReader, Type, JsonSerializerOptions)
  nameWithType: NullableTimeSpanConverter.Read(ref Utf8JsonReader, Type, JsonSerializerOptions)
  nameWithType.vb: NullableTimeSpanConverter.Read(ByRef Utf8JsonReader, Type, JsonSerializerOptions)
- uid: Scraper.Net.NullableTimeSpanConverter.Read*
  name: Read
  href: api/Scraper.Net.NullableTimeSpanConverter.html#Scraper_Net_NullableTimeSpanConverter_Read_
  commentId: Overload:Scraper.Net.NullableTimeSpanConverter.Read
  isSpec: "True"
  fullName: Scraper.Net.NullableTimeSpanConverter.Read
  nameWithType: NullableTimeSpanConverter.Read
- uid: Scraper.Net.NullableTimeSpanConverter.Write(Utf8JsonWriter,System.Nullable{TimeSpan},JsonSerializerOptions)
  name: Write(Utf8JsonWriter, Nullable<TimeSpan>, JsonSerializerOptions)
  href: api/Scraper.Net.NullableTimeSpanConverter.html#Scraper_Net_NullableTimeSpanConverter_Write_Utf8JsonWriter_System_Nullable_TimeSpan__JsonSerializerOptions_
  commentId: M:Scraper.Net.NullableTimeSpanConverter.Write(Utf8JsonWriter,System.Nullable{TimeSpan},JsonSerializerOptions)
  name.vb: Write(Utf8JsonWriter, Nullable(Of TimeSpan), JsonSerializerOptions)
  fullName: Scraper.Net.NullableTimeSpanConverter.Write(Utf8JsonWriter, System.Nullable<TimeSpan>, JsonSerializerOptions)
  fullName.vb: Scraper.Net.NullableTimeSpanConverter.Write(Utf8JsonWriter, System.Nullable(Of TimeSpan), JsonSerializerOptions)
  nameWithType: NullableTimeSpanConverter.Write(Utf8JsonWriter, Nullable<TimeSpan>, JsonSerializerOptions)
  nameWithType.vb: NullableTimeSpanConverter.Write(Utf8JsonWriter, Nullable(Of TimeSpan), JsonSerializerOptions)
- uid: Scraper.Net.NullableTimeSpanConverter.Write*
  name: Write
  href: api/Scraper.Net.NullableTimeSpanConverter.html#Scraper_Net_NullableTimeSpanConverter_Write_
  commentId: Overload:Scraper.Net.NullableTimeSpanConverter.Write
  isSpec: "True"
  fullName: Scraper.Net.NullableTimeSpanConverter.Write
  nameWithType: NullableTimeSpanConverter.Write
- uid: Scraper.Net.PostFilter
  name: PostFilter
  href: api/Scraper.Net.PostFilter.html
  commentId: T:Scraper.Net.PostFilter
  fullName: Scraper.Net.PostFilter
  nameWithType: PostFilter
- uid: Scraper.Net.PostType
  name: PostType
  href: api/Scraper.Net.PostType.html
  commentId: T:Scraper.Net.PostType
  fullName: Scraper.Net.PostType
  nameWithType: PostType
- uid: Scraper.Net.PostType.Post
  name: Post
  href: api/Scraper.Net.PostType.html#Scraper_Net_PostType_Post
  commentId: F:Scraper.Net.PostType.Post
  fullName: Scraper.Net.PostType.Post
  nameWithType: PostType.Post
- uid: Scraper.Net.PostType.Reply
  name: Reply
  href: api/Scraper.Net.PostType.html#Scraper_Net_PostType_Reply
  commentId: F:Scraper.Net.PostType.Reply
  fullName: Scraper.Net.PostType.Reply
  nameWithType: PostType.Reply
- uid: Scraper.Net.PostType.ReplyToSelf
  name: ReplyToSelf
  href: api/Scraper.Net.PostType.html#Scraper_Net_PostType_ReplyToSelf
  commentId: F:Scraper.Net.PostType.ReplyToSelf
  fullName: Scraper.Net.PostType.ReplyToSelf
  nameWithType: PostType.ReplyToSelf
- uid: Scraper.Net.PostType.Repost
  name: Repost
  href: api/Scraper.Net.PostType.html#Scraper_Net_PostType_Repost
  commentId: F:Scraper.Net.PostType.Repost
  fullName: Scraper.Net.PostType.Repost
  nameWithType: PostType.Repost
- uid: Scraper.Net.RateLimitedException
  name: RateLimitedException
  href: api/Scraper.Net.RateLimitedException.html
  commentId: T:Scraper.Net.RateLimitedException
  fullName: Scraper.Net.RateLimitedException
  nameWithType: RateLimitedException
- uid: Scraper.Net.RateLimitedException.#ctor
  name: RateLimitedException()
  href: api/Scraper.Net.RateLimitedException.html#Scraper_Net_RateLimitedException__ctor
  commentId: M:Scraper.Net.RateLimitedException.#ctor
  fullName: Scraper.Net.RateLimitedException.RateLimitedException()
  nameWithType: RateLimitedException.RateLimitedException()
- uid: Scraper.Net.RateLimitedException.#ctor(Exception)
  name: RateLimitedException(Exception)
  href: api/Scraper.Net.RateLimitedException.html#Scraper_Net_RateLimitedException__ctor_Exception_
  commentId: M:Scraper.Net.RateLimitedException.#ctor(Exception)
  fullName: Scraper.Net.RateLimitedException.RateLimitedException(Exception)
  nameWithType: RateLimitedException.RateLimitedException(Exception)
- uid: Scraper.Net.RateLimitedException.#ctor(System.String,Exception)
  name: RateLimitedException(String, Exception)
  href: api/Scraper.Net.RateLimitedException.html#Scraper_Net_RateLimitedException__ctor_System_String_Exception_
  commentId: M:Scraper.Net.RateLimitedException.#ctor(System.String,Exception)
  fullName: Scraper.Net.RateLimitedException.RateLimitedException(System.String, Exception)
  nameWithType: RateLimitedException.RateLimitedException(String, Exception)
- uid: Scraper.Net.RateLimitedException.#ctor*
  name: RateLimitedException
  href: api/Scraper.Net.RateLimitedException.html#Scraper_Net_RateLimitedException__ctor_
  commentId: Overload:Scraper.Net.RateLimitedException.#ctor
  isSpec: "True"
  fullName: Scraper.Net.RateLimitedException.RateLimitedException
  nameWithType: RateLimitedException.RateLimitedException
- uid: Scraper.Net.ScraperBuilder
  name: ScraperBuilder
  href: api/Scraper.Net.ScraperBuilder.html
  commentId: T:Scraper.Net.ScraperBuilder
  fullName: Scraper.Net.ScraperBuilder
  nameWithType: ScraperBuilder
- uid: Scraper.Net.ScraperBuilder.#ctor(IServiceCollection)
  name: ScraperBuilder(IServiceCollection)
  href: api/Scraper.Net.ScraperBuilder.html#Scraper_Net_ScraperBuilder__ctor_IServiceCollection_
  commentId: M:Scraper.Net.ScraperBuilder.#ctor(IServiceCollection)
  fullName: Scraper.Net.ScraperBuilder.ScraperBuilder(IServiceCollection)
  nameWithType: ScraperBuilder.ScraperBuilder(IServiceCollection)
- uid: Scraper.Net.ScraperBuilder.#ctor*
  name: ScraperBuilder
  href: api/Scraper.Net.ScraperBuilder.html#Scraper_Net_ScraperBuilder__ctor_
  commentId: Overload:Scraper.Net.ScraperBuilder.#ctor
  isSpec: "True"
  fullName: Scraper.Net.ScraperBuilder.ScraperBuilder
  nameWithType: ScraperBuilder.ScraperBuilder
- uid: Scraper.Net.ScraperBuilder.AddPostFilter(Scraper.Net.PostFilter)
  name: AddPostFilter(PostFilter)
  href: api/Scraper.Net.ScraperBuilder.html#Scraper_Net_ScraperBuilder_AddPostFilter_Scraper_Net_PostFilter_
  commentId: M:Scraper.Net.ScraperBuilder.AddPostFilter(Scraper.Net.PostFilter)
  fullName: Scraper.Net.ScraperBuilder.AddPostFilter(Scraper.Net.PostFilter)
  nameWithType: ScraperBuilder.AddPostFilter(PostFilter)
- uid: Scraper.Net.ScraperBuilder.AddPostFilter*
  name: AddPostFilter
  href: api/Scraper.Net.ScraperBuilder.html#Scraper_Net_ScraperBuilder_AddPostFilter_
  commentId: Overload:Scraper.Net.ScraperBuilder.AddPostFilter
  isSpec: "True"
  fullName: Scraper.Net.ScraperBuilder.AddPostFilter
  nameWithType: ScraperBuilder.AddPostFilter
- uid: Scraper.Net.ScraperBuilder.AddPostProcessor(Func{IServiceProvider,Scraper.Net.IPostProcessor})
  name: AddPostProcessor(Func<IServiceProvider, IPostProcessor>)
  href: api/Scraper.Net.ScraperBuilder.html#Scraper_Net_ScraperBuilder_AddPostProcessor_Func_IServiceProvider_Scraper_Net_IPostProcessor__
  commentId: M:Scraper.Net.ScraperBuilder.AddPostProcessor(Func{IServiceProvider,Scraper.Net.IPostProcessor})
  name.vb: AddPostProcessor(Func(Of IServiceProvider, IPostProcessor))
  fullName: Scraper.Net.ScraperBuilder.AddPostProcessor(Func<IServiceProvider, Scraper.Net.IPostProcessor>)
  fullName.vb: Scraper.Net.ScraperBuilder.AddPostProcessor(Func(Of IServiceProvider, Scraper.Net.IPostProcessor))
  nameWithType: ScraperBuilder.AddPostProcessor(Func<IServiceProvider, IPostProcessor>)
  nameWithType.vb: ScraperBuilder.AddPostProcessor(Func(Of IServiceProvider, IPostProcessor))
- uid: Scraper.Net.ScraperBuilder.AddPostProcessor*
  name: AddPostProcessor
  href: api/Scraper.Net.ScraperBuilder.html#Scraper_Net_ScraperBuilder_AddPostProcessor_
  commentId: Overload:Scraper.Net.ScraperBuilder.AddPostProcessor
  isSpec: "True"
  fullName: Scraper.Net.ScraperBuilder.AddPostProcessor
  nameWithType: ScraperBuilder.AddPostProcessor
- uid: Scraper.Net.ScraperBuilder.AddScraper(Func{IServiceProvider,System.ValueTuple{Scraper.Net.IPlatformScraper,System.String}})
  name: AddScraper(Func<IServiceProvider, (IPlatformScraper, String)>)
  href: api/Scraper.Net.ScraperBuilder.html#Scraper_Net_ScraperBuilder_AddScraper_Func_IServiceProvider_System_ValueTuple_Scraper_Net_IPlatformScraper_System_String___
  commentId: M:Scraper.Net.ScraperBuilder.AddScraper(Func{IServiceProvider,System.ValueTuple{Scraper.Net.IPlatformScraper,System.String}})
  name.vb: AddScraper(Func(Of IServiceProvider, (IPlatformScraper, String)))
  fullName: Scraper.Net.ScraperBuilder.AddScraper(Func<IServiceProvider, System.ValueTuple<Scraper.Net.IPlatformScraper, System.String>>)
  fullName.vb: Scraper.Net.ScraperBuilder.AddScraper(Func(Of IServiceProvider, System.ValueTuple(Of Scraper.Net.IPlatformScraper, System.String)))
  nameWithType: ScraperBuilder.AddScraper(Func<IServiceProvider, (IPlatformScraper, String)>)
  nameWithType.vb: ScraperBuilder.AddScraper(Func(Of IServiceProvider, (IPlatformScraper, String)))
- uid: Scraper.Net.ScraperBuilder.AddScraper*
  name: AddScraper
  href: api/Scraper.Net.ScraperBuilder.html#Scraper_Net_ScraperBuilder_AddScraper_
  commentId: Overload:Scraper.Net.ScraperBuilder.AddScraper
  isSpec: "True"
  fullName: Scraper.Net.ScraperBuilder.AddScraper
  nameWithType: ScraperBuilder.AddScraper
- uid: Scraper.Net.ScraperBuilder.Services
  name: Services
  href: api/Scraper.Net.ScraperBuilder.html#Scraper_Net_ScraperBuilder_Services
  commentId: P:Scraper.Net.ScraperBuilder.Services
  fullName: Scraper.Net.ScraperBuilder.Services
  nameWithType: ScraperBuilder.Services
- uid: Scraper.Net.ScraperBuilder.Services*
  name: Services
  href: api/Scraper.Net.ScraperBuilder.html#Scraper_Net_ScraperBuilder_Services_
  commentId: Overload:Scraper.Net.ScraperBuilder.Services
  isSpec: "True"
  fullName: Scraper.Net.ScraperBuilder.Services
  nameWithType: ScraperBuilder.Services
- uid: Scraper.Net.ScraperService
  name: ScraperService
  href: api/Scraper.Net.ScraperService.html
  commentId: T:Scraper.Net.ScraperService
  fullName: Scraper.Net.ScraperService
  nameWithType: ScraperService
- uid: Scraper.Net.ScraperService.#ctor(IDictionary{System.String,Scraper.Net.IPlatformScraper},IEnumerable{Scraper.Net.PostFilter},IEnumerable{Scraper.Net.IPostProcessor},ILogger{Scraper.Net.ScraperService})
  name: ScraperService(IDictionary<String, IPlatformScraper>, IEnumerable<PostFilter>, IEnumerable<IPostProcessor>, ILogger<ScraperService>)
  href: api/Scraper.Net.ScraperService.html#Scraper_Net_ScraperService__ctor_IDictionary_System_String_Scraper_Net_IPlatformScraper__IEnumerable_Scraper_Net_PostFilter__IEnumerable_Scraper_Net_IPostProcessor__ILogger_Scraper_Net_ScraperService__
  commentId: M:Scraper.Net.ScraperService.#ctor(IDictionary{System.String,Scraper.Net.IPlatformScraper},IEnumerable{Scraper.Net.PostFilter},IEnumerable{Scraper.Net.IPostProcessor},ILogger{Scraper.Net.ScraperService})
  name.vb: ScraperService(IDictionary(Of String, IPlatformScraper), IEnumerable(Of PostFilter), IEnumerable(Of IPostProcessor), ILogger(Of ScraperService))
  fullName: Scraper.Net.ScraperService.ScraperService(IDictionary<System.String, Scraper.Net.IPlatformScraper>, IEnumerable<Scraper.Net.PostFilter>, IEnumerable<Scraper.Net.IPostProcessor>, ILogger<Scraper.Net.ScraperService>)
  fullName.vb: Scraper.Net.ScraperService.ScraperService(IDictionary(Of System.String, Scraper.Net.IPlatformScraper), IEnumerable(Of Scraper.Net.PostFilter), IEnumerable(Of Scraper.Net.IPostProcessor), ILogger(Of Scraper.Net.ScraperService))
  nameWithType: ScraperService.ScraperService(IDictionary<String, IPlatformScraper>, IEnumerable<PostFilter>, IEnumerable<IPostProcessor>, ILogger<ScraperService>)
  nameWithType.vb: ScraperService.ScraperService(IDictionary(Of String, IPlatformScraper), IEnumerable(Of PostFilter), IEnumerable(Of IPostProcessor), ILogger(Of ScraperService))
- uid: Scraper.Net.ScraperService.#ctor*
  name: ScraperService
  href: api/Scraper.Net.ScraperService.html#Scraper_Net_ScraperService__ctor_
  commentId: Overload:Scraper.Net.ScraperService.#ctor
  isSpec: "True"
  fullName: Scraper.Net.ScraperService.ScraperService
  nameWithType: ScraperService.ScraperService
- uid: Scraper.Net.ScraperService.GetAuthorAsync(System.String,System.String,CancellationToken)
  name: GetAuthorAsync(String, String, CancellationToken)
  href: api/Scraper.Net.ScraperService.html#Scraper_Net_ScraperService_GetAuthorAsync_System_String_System_String_CancellationToken_
  commentId: M:Scraper.Net.ScraperService.GetAuthorAsync(System.String,System.String,CancellationToken)
  fullName: Scraper.Net.ScraperService.GetAuthorAsync(System.String, System.String, CancellationToken)
  nameWithType: ScraperService.GetAuthorAsync(String, String, CancellationToken)
- uid: Scraper.Net.ScraperService.GetAuthorAsync*
  name: GetAuthorAsync
  href: api/Scraper.Net.ScraperService.html#Scraper_Net_ScraperService_GetAuthorAsync_
  commentId: Overload:Scraper.Net.ScraperService.GetAuthorAsync
  isSpec: "True"
  fullName: Scraper.Net.ScraperService.GetAuthorAsync
  nameWithType: ScraperService.GetAuthorAsync
- uid: Scraper.Net.ScraperService.GetPostsAsync(System.String,System.String,CancellationToken)
  name: GetPostsAsync(String, String, CancellationToken)
  href: api/Scraper.Net.ScraperService.html#Scraper_Net_ScraperService_GetPostsAsync_System_String_System_String_CancellationToken_
  commentId: M:Scraper.Net.ScraperService.GetPostsAsync(System.String,System.String,CancellationToken)
  fullName: Scraper.Net.ScraperService.GetPostsAsync(System.String, System.String, CancellationToken)
  nameWithType: ScraperService.GetPostsAsync(String, String, CancellationToken)
- uid: Scraper.Net.ScraperService.GetPostsAsync*
  name: GetPostsAsync
  href: api/Scraper.Net.ScraperService.html#Scraper_Net_ScraperService_GetPostsAsync_
  commentId: Overload:Scraper.Net.ScraperService.GetPostsAsync
  isSpec: "True"
  fullName: Scraper.Net.ScraperService.GetPostsAsync
  nameWithType: ScraperService.GetPostsAsync
- uid: Scraper.Net.Screenshot
  name: Scraper.Net.Screenshot
  href: api/Scraper.Net.Screenshot.html
  commentId: N:Scraper.Net.Screenshot
  fullName: Scraper.Net.Screenshot
  nameWithType: Scraper.Net.Screenshot
- uid: Scraper.Net.Screenshot.IPlatformScreenshotter
  name: IPlatformScreenshotter
  href: api/Scraper.Net.Screenshot.IPlatformScreenshotter.html
  commentId: T:Scraper.Net.Screenshot.IPlatformScreenshotter
  fullName: Scraper.Net.Screenshot.IPlatformScreenshotter
  nameWithType: IPlatformScreenshotter
- uid: Scraper.Net.Screenshot.IPlatformScreenshotter.ScreenshotAsync(System.String)
  name: ScreenshotAsync(String)
  href: api/Scraper.Net.Screenshot.IPlatformScreenshotter.html#Scraper_Net_Screenshot_IPlatformScreenshotter_ScreenshotAsync_System_String_
  commentId: M:Scraper.Net.Screenshot.IPlatformScreenshotter.ScreenshotAsync(System.String)
  fullName: Scraper.Net.Screenshot.IPlatformScreenshotter.ScreenshotAsync(System.String)
  nameWithType: IPlatformScreenshotter.ScreenshotAsync(String)
- uid: Scraper.Net.Screenshot.IPlatformScreenshotter.ScreenshotAsync*
  name: ScreenshotAsync
  href: api/Scraper.Net.Screenshot.IPlatformScreenshotter.html#Scraper_Net_Screenshot_IPlatformScreenshotter_ScreenshotAsync_
  commentId: Overload:Scraper.Net.Screenshot.IPlatformScreenshotter.ScreenshotAsync
  isSpec: "True"
  fullName: Scraper.Net.Screenshot.IPlatformScreenshotter.ScreenshotAsync
  nameWithType: IPlatformScreenshotter.ScreenshotAsync
- uid: Scraper.Net.Screenshot.ScraperBuilderExtensions
  name: ScraperBuilderExtensions
  href: api/Scraper.Net.Screenshot.ScraperBuilderExtensions.html
  commentId: T:Scraper.Net.Screenshot.ScraperBuilderExtensions
  fullName: Scraper.Net.Screenshot.ScraperBuilderExtensions
  nameWithType: ScraperBuilderExtensions
- uid: Scraper.Net.Screenshot.ScraperBuilderExtensions.AddScreenshot(Scraper.Net.ScraperBuilder,Action{Scraper.Net.Screenshot.ScreenshotterBuilder},HtmlCssToImageCredentials,System.Boolean)
  name: AddScreenshot(ScraperBuilder, Action<ScreenshotterBuilder>, HtmlCssToImageCredentials, Boolean)
  href: api/Scraper.Net.Screenshot.ScraperBuilderExtensions.html#Scraper_Net_Screenshot_ScraperBuilderExtensions_AddScreenshot_Scraper_Net_ScraperBuilder_Action_Scraper_Net_Screenshot_ScreenshotterBuilder__HtmlCssToImageCredentials_System_Boolean_
  commentId: M:Scraper.Net.Screenshot.ScraperBuilderExtensions.AddScreenshot(Scraper.Net.ScraperBuilder,Action{Scraper.Net.Screenshot.ScreenshotterBuilder},HtmlCssToImageCredentials,System.Boolean)
  name.vb: AddScreenshot(ScraperBuilder, Action(Of ScreenshotterBuilder), HtmlCssToImageCredentials, Boolean)
  fullName: Scraper.Net.Screenshot.ScraperBuilderExtensions.AddScreenshot(Scraper.Net.ScraperBuilder, Action<Scraper.Net.Screenshot.ScreenshotterBuilder>, HtmlCssToImageCredentials, System.Boolean)
  fullName.vb: Scraper.Net.Screenshot.ScraperBuilderExtensions.AddScreenshot(Scraper.Net.ScraperBuilder, Action(Of Scraper.Net.Screenshot.ScreenshotterBuilder), HtmlCssToImageCredentials, System.Boolean)
  nameWithType: ScraperBuilderExtensions.AddScreenshot(ScraperBuilder, Action<ScreenshotterBuilder>, HtmlCssToImageCredentials, Boolean)
  nameWithType.vb: ScraperBuilderExtensions.AddScreenshot(ScraperBuilder, Action(Of ScreenshotterBuilder), HtmlCssToImageCredentials, Boolean)
- uid: Scraper.Net.Screenshot.ScraperBuilderExtensions.AddScreenshot*
  name: AddScreenshot
  href: api/Scraper.Net.Screenshot.ScraperBuilderExtensions.html#Scraper_Net_Screenshot_ScraperBuilderExtensions_AddScreenshot_
  commentId: Overload:Scraper.Net.Screenshot.ScraperBuilderExtensions.AddScreenshot
  isSpec: "True"
  fullName: Scraper.Net.Screenshot.ScraperBuilderExtensions.AddScreenshot
  nameWithType: ScraperBuilderExtensions.AddScreenshot
- uid: Scraper.Net.Screenshot.ScreenshotPostProcessor
  name: ScreenshotPostProcessor
  href: api/Scraper.Net.Screenshot.ScreenshotPostProcessor.html
  commentId: T:Scraper.Net.Screenshot.ScreenshotPostProcessor
  fullName: Scraper.Net.Screenshot.ScreenshotPostProcessor
  nameWithType: ScreenshotPostProcessor
- uid: Scraper.Net.Screenshot.ScreenshotPostProcessor.#ctor(System.Boolean,Dictionary{System.String,Scraper.Net.Screenshot.IPlatformScreenshotter})
  name: ScreenshotPostProcessor(Boolean, Dictionary<String, IPlatformScreenshotter>)
  href: api/Scraper.Net.Screenshot.ScreenshotPostProcessor.html#Scraper_Net_Screenshot_ScreenshotPostProcessor__ctor_System_Boolean_Dictionary_System_String_Scraper_Net_Screenshot_IPlatformScreenshotter__
  commentId: M:Scraper.Net.Screenshot.ScreenshotPostProcessor.#ctor(System.Boolean,Dictionary{System.String,Scraper.Net.Screenshot.IPlatformScreenshotter})
  name.vb: ScreenshotPostProcessor(Boolean, Dictionary(Of String, IPlatformScreenshotter))
  fullName: Scraper.Net.Screenshot.ScreenshotPostProcessor.ScreenshotPostProcessor(System.Boolean, Dictionary<System.String, Scraper.Net.Screenshot.IPlatformScreenshotter>)
  fullName.vb: Scraper.Net.Screenshot.ScreenshotPostProcessor.ScreenshotPostProcessor(System.Boolean, Dictionary(Of System.String, Scraper.Net.Screenshot.IPlatformScreenshotter))
  nameWithType: ScreenshotPostProcessor.ScreenshotPostProcessor(Boolean, Dictionary<String, IPlatformScreenshotter>)
  nameWithType.vb: ScreenshotPostProcessor.ScreenshotPostProcessor(Boolean, Dictionary(Of String, IPlatformScreenshotter))
- uid: Scraper.Net.Screenshot.ScreenshotPostProcessor.#ctor*
  name: ScreenshotPostProcessor
  href: api/Scraper.Net.Screenshot.ScreenshotPostProcessor.html#Scraper_Net_Screenshot_ScreenshotPostProcessor__ctor_
  commentId: Overload:Scraper.Net.Screenshot.ScreenshotPostProcessor.#ctor
  isSpec: "True"
  fullName: Scraper.Net.Screenshot.ScreenshotPostProcessor.ScreenshotPostProcessor
  nameWithType: ScreenshotPostProcessor.ScreenshotPostProcessor
- uid: Scraper.Net.Screenshot.ScreenshotPostProcessor.ProcessAsync(Post,System.String,CancellationToken)
  name: ProcessAsync(Post, String, CancellationToken)
  href: api/Scraper.Net.Screenshot.ScreenshotPostProcessor.html#Scraper_Net_Screenshot_ScreenshotPostProcessor_ProcessAsync_Post_System_String_CancellationToken_
  commentId: M:Scraper.Net.Screenshot.ScreenshotPostProcessor.ProcessAsync(Post,System.String,CancellationToken)
  fullName: Scraper.Net.Screenshot.ScreenshotPostProcessor.ProcessAsync(Post, System.String, CancellationToken)
  nameWithType: ScreenshotPostProcessor.ProcessAsync(Post, String, CancellationToken)
- uid: Scraper.Net.Screenshot.ScreenshotPostProcessor.ProcessAsync*
  name: ProcessAsync
  href: api/Scraper.Net.Screenshot.ScreenshotPostProcessor.html#Scraper_Net_Screenshot_ScreenshotPostProcessor_ProcessAsync_
  commentId: Overload:Scraper.Net.Screenshot.ScreenshotPostProcessor.ProcessAsync
  isSpec: "True"
  fullName: Scraper.Net.Screenshot.ScreenshotPostProcessor.ProcessAsync
  nameWithType: ScreenshotPostProcessor.ProcessAsync
- uid: Scraper.Net.Screenshot.ScreenshotterBuilder
  name: ScreenshotterBuilder
  href: api/Scraper.Net.Screenshot.ScreenshotterBuilder.html
  commentId: T:Scraper.Net.Screenshot.ScreenshotterBuilder
  fullName: Scraper.Net.Screenshot.ScreenshotterBuilder
  nameWithType: ScreenshotterBuilder
- uid: Scraper.Net.Screenshot.ScreenshotterBuilder.#ctor(IServiceCollection)
  name: ScreenshotterBuilder(IServiceCollection)
  href: api/Scraper.Net.Screenshot.ScreenshotterBuilder.html#Scraper_Net_Screenshot_ScreenshotterBuilder__ctor_IServiceCollection_
  commentId: M:Scraper.Net.Screenshot.ScreenshotterBuilder.#ctor(IServiceCollection)
  fullName: Scraper.Net.Screenshot.ScreenshotterBuilder.ScreenshotterBuilder(IServiceCollection)
  nameWithType: ScreenshotterBuilder.ScreenshotterBuilder(IServiceCollection)
- uid: Scraper.Net.Screenshot.ScreenshotterBuilder.#ctor*
  name: ScreenshotterBuilder
  href: api/Scraper.Net.Screenshot.ScreenshotterBuilder.html#Scraper_Net_Screenshot_ScreenshotterBuilder__ctor_
  commentId: Overload:Scraper.Net.Screenshot.ScreenshotterBuilder.#ctor
  isSpec: "True"
  fullName: Scraper.Net.Screenshot.ScreenshotterBuilder.ScreenshotterBuilder
  nameWithType: ScreenshotterBuilder.ScreenshotterBuilder
- uid: Scraper.Net.Screenshot.ScreenshotterBuilder.AddScreenshotter(Func{IServiceProvider,System.ValueTuple{Scraper.Net.Screenshot.IPlatformScreenshotter,System.String}})
  name: AddScreenshotter(Func<IServiceProvider, (IPlatformScreenshotter, String)>)
  href: api/Scraper.Net.Screenshot.ScreenshotterBuilder.html#Scraper_Net_Screenshot_ScreenshotterBuilder_AddScreenshotter_Func_IServiceProvider_System_ValueTuple_Scraper_Net_Screenshot_IPlatformScreenshotter_System_String___
  commentId: M:Scraper.Net.Screenshot.ScreenshotterBuilder.AddScreenshotter(Func{IServiceProvider,System.ValueTuple{Scraper.Net.Screenshot.IPlatformScreenshotter,System.String}})
  name.vb: AddScreenshotter(Func(Of IServiceProvider, (IPlatformScreenshotter, String)))
  fullName: Scraper.Net.Screenshot.ScreenshotterBuilder.AddScreenshotter(Func<IServiceProvider, System.ValueTuple<Scraper.Net.Screenshot.IPlatformScreenshotter, System.String>>)
  fullName.vb: Scraper.Net.Screenshot.ScreenshotterBuilder.AddScreenshotter(Func(Of IServiceProvider, System.ValueTuple(Of Scraper.Net.Screenshot.IPlatformScreenshotter, System.String)))
  nameWithType: ScreenshotterBuilder.AddScreenshotter(Func<IServiceProvider, (IPlatformScreenshotter, String)>)
  nameWithType.vb: ScreenshotterBuilder.AddScreenshotter(Func(Of IServiceProvider, (IPlatformScreenshotter, String)))
- uid: Scraper.Net.Screenshot.ScreenshotterBuilder.AddScreenshotter*
  name: AddScreenshotter
  href: api/Scraper.Net.Screenshot.ScreenshotterBuilder.html#Scraper_Net_Screenshot_ScreenshotterBuilder_AddScreenshotter_
  commentId: Overload:Scraper.Net.Screenshot.ScreenshotterBuilder.AddScreenshotter
  isSpec: "True"
  fullName: Scraper.Net.Screenshot.ScreenshotterBuilder.AddScreenshotter
  nameWithType: ScreenshotterBuilder.AddScreenshotter
- uid: Scraper.Net.Screenshot.ScreenshotterBuilder.Services
  name: Services
  href: api/Scraper.Net.Screenshot.ScreenshotterBuilder.html#Scraper_Net_Screenshot_ScreenshotterBuilder_Services
  commentId: P:Scraper.Net.Screenshot.ScreenshotterBuilder.Services
  fullName: Scraper.Net.Screenshot.ScreenshotterBuilder.Services
  nameWithType: ScreenshotterBuilder.Services
- uid: Scraper.Net.Screenshot.ScreenshotterBuilder.Services*
  name: Services
  href: api/Scraper.Net.Screenshot.ScreenshotterBuilder.html#Scraper_Net_Screenshot_ScreenshotterBuilder_Services_
  commentId: Overload:Scraper.Net.Screenshot.ScreenshotterBuilder.Services
  isSpec: "True"
  fullName: Scraper.Net.Screenshot.ScreenshotterBuilder.Services
  nameWithType: ScreenshotterBuilder.Services
- uid: Scraper.Net.Screenshot.ScreenshotterBuilderExtensions
  name: ScreenshotterBuilderExtensions
  href: api/Scraper.Net.Screenshot.ScreenshotterBuilderExtensions.html
  commentId: T:Scraper.Net.Screenshot.ScreenshotterBuilderExtensions
  fullName: Scraper.Net.Screenshot.ScreenshotterBuilderExtensions
  nameWithType: ScreenshotterBuilderExtensions
- uid: Scraper.Net.Screenshot.ScreenshotterBuilderExtensions.AddTwitter(Scraper.Net.Screenshot.ScreenshotterBuilder,System.String)
  name: AddTwitter(ScreenshotterBuilder, String)
  href: api/Scraper.Net.Screenshot.ScreenshotterBuilderExtensions.html#Scraper_Net_Screenshot_ScreenshotterBuilderExtensions_AddTwitter_Scraper_Net_Screenshot_ScreenshotterBuilder_System_String_
  commentId: M:Scraper.Net.Screenshot.ScreenshotterBuilderExtensions.AddTwitter(Scraper.Net.Screenshot.ScreenshotterBuilder,System.String)
  fullName: Scraper.Net.Screenshot.ScreenshotterBuilderExtensions.AddTwitter(Scraper.Net.Screenshot.ScreenshotterBuilder, System.String)
  nameWithType: ScreenshotterBuilderExtensions.AddTwitter(ScreenshotterBuilder, String)
- uid: Scraper.Net.Screenshot.ScreenshotterBuilderExtensions.AddTwitter*
  name: AddTwitter
  href: api/Scraper.Net.Screenshot.ScreenshotterBuilderExtensions.html#Scraper_Net_Screenshot_ScreenshotterBuilderExtensions_AddTwitter_
  commentId: Overload:Scraper.Net.Screenshot.ScreenshotterBuilderExtensions.AddTwitter
  isSpec: "True"
  fullName: Scraper.Net.Screenshot.ScreenshotterBuilderExtensions.AddTwitter
  nameWithType: ScreenshotterBuilderExtensions.AddTwitter
- uid: Scraper.Net.Screenshot.TwitterScreenshotter
  name: TwitterScreenshotter
  href: api/Scraper.Net.Screenshot.TwitterScreenshotter.html
  commentId: T:Scraper.Net.Screenshot.TwitterScreenshotter
  fullName: Scraper.Net.Screenshot.TwitterScreenshotter
  nameWithType: TwitterScreenshotter
- uid: Scraper.Net.Screenshot.TwitterScreenshotter.#ctor(IHtmlCssToImageClient)
  name: TwitterScreenshotter(IHtmlCssToImageClient)
  href: api/Scraper.Net.Screenshot.TwitterScreenshotter.html#Scraper_Net_Screenshot_TwitterScreenshotter__ctor_IHtmlCssToImageClient_
  commentId: M:Scraper.Net.Screenshot.TwitterScreenshotter.#ctor(IHtmlCssToImageClient)
  fullName: Scraper.Net.Screenshot.TwitterScreenshotter.TwitterScreenshotter(IHtmlCssToImageClient)
  nameWithType: TwitterScreenshotter.TwitterScreenshotter(IHtmlCssToImageClient)
- uid: Scraper.Net.Screenshot.TwitterScreenshotter.#ctor*
  name: TwitterScreenshotter
  href: api/Scraper.Net.Screenshot.TwitterScreenshotter.html#Scraper_Net_Screenshot_TwitterScreenshotter__ctor_
  commentId: Overload:Scraper.Net.Screenshot.TwitterScreenshotter.#ctor
  isSpec: "True"
  fullName: Scraper.Net.Screenshot.TwitterScreenshotter.TwitterScreenshotter
  nameWithType: TwitterScreenshotter.TwitterScreenshotter
- uid: Scraper.Net.Screenshot.TwitterScreenshotter.ScreenshotAsync(System.String)
  name: ScreenshotAsync(String)
  href: api/Scraper.Net.Screenshot.TwitterScreenshotter.html#Scraper_Net_Screenshot_TwitterScreenshotter_ScreenshotAsync_System_String_
  commentId: M:Scraper.Net.Screenshot.TwitterScreenshotter.ScreenshotAsync(System.String)
  fullName: Scraper.Net.Screenshot.TwitterScreenshotter.ScreenshotAsync(System.String)
  nameWithType: TwitterScreenshotter.ScreenshotAsync(String)
- uid: Scraper.Net.Screenshot.TwitterScreenshotter.ScreenshotAsync*
  name: ScreenshotAsync
  href: api/Scraper.Net.Screenshot.TwitterScreenshotter.html#Scraper_Net_Screenshot_TwitterScreenshotter_ScreenshotAsync_
  commentId: Overload:Scraper.Net.Screenshot.TwitterScreenshotter.ScreenshotAsync
  isSpec: "True"
  fullName: Scraper.Net.Screenshot.TwitterScreenshotter.ScreenshotAsync
  nameWithType: TwitterScreenshotter.ScreenshotAsync
- uid: Scraper.Net.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/Scraper.Net.ServiceCollectionExtensions.html
  commentId: T:Scraper.Net.ServiceCollectionExtensions
  fullName: Scraper.Net.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: Scraper.Net.ServiceCollectionExtensions.AddScraper(IServiceCollection,Action{Scraper.Net.ScraperBuilder})
  name: AddScraper(IServiceCollection, Action<ScraperBuilder>)
  href: api/Scraper.Net.ServiceCollectionExtensions.html#Scraper_Net_ServiceCollectionExtensions_AddScraper_IServiceCollection_Action_Scraper_Net_ScraperBuilder__
  commentId: M:Scraper.Net.ServiceCollectionExtensions.AddScraper(IServiceCollection,Action{Scraper.Net.ScraperBuilder})
  name.vb: AddScraper(IServiceCollection, Action(Of ScraperBuilder))
  fullName: Scraper.Net.ServiceCollectionExtensions.AddScraper(IServiceCollection, Action<Scraper.Net.ScraperBuilder>)
  fullName.vb: Scraper.Net.ServiceCollectionExtensions.AddScraper(IServiceCollection, Action(Of Scraper.Net.ScraperBuilder))
  nameWithType: ServiceCollectionExtensions.AddScraper(IServiceCollection, Action<ScraperBuilder>)
  nameWithType.vb: ServiceCollectionExtensions.AddScraper(IServiceCollection, Action(Of ScraperBuilder))
- uid: Scraper.Net.ServiceCollectionExtensions.AddScraper*
  name: AddScraper
  href: api/Scraper.Net.ServiceCollectionExtensions.html#Scraper_Net_ServiceCollectionExtensions_AddScraper_
  commentId: Overload:Scraper.Net.ServiceCollectionExtensions.AddScraper
  isSpec: "True"
  fullName: Scraper.Net.ServiceCollectionExtensions.AddScraper
  nameWithType: ServiceCollectionExtensions.AddScraper
- uid: Scraper.Net.Stream
  name: Scraper.Net.Stream
  href: api/Scraper.Net.Stream.html
  commentId: N:Scraper.Net.Stream
  fullName: Scraper.Net.Stream
  nameWithType: Scraper.Net.Stream
- uid: Scraper.Net.Stream.CancellationTokenExtensions
  name: CancellationTokenExtensions
  href: api/Scraper.Net.Stream.CancellationTokenExtensions.html
  commentId: T:Scraper.Net.Stream.CancellationTokenExtensions
  fullName: Scraper.Net.Stream.CancellationTokenExtensions
  nameWithType: CancellationTokenExtensions
- uid: Scraper.Net.Stream.CancellationTokenExtensions.WithTimeout(CancellationToken,System.Nullable{TimeSpan})
  name: WithTimeout(CancellationToken, Nullable<TimeSpan>)
  href: api/Scraper.Net.Stream.CancellationTokenExtensions.html#Scraper_Net_Stream_CancellationTokenExtensions_WithTimeout_CancellationToken_System_Nullable_TimeSpan__
  commentId: M:Scraper.Net.Stream.CancellationTokenExtensions.WithTimeout(CancellationToken,System.Nullable{TimeSpan})
  name.vb: WithTimeout(CancellationToken, Nullable(Of TimeSpan))
  fullName: Scraper.Net.Stream.CancellationTokenExtensions.WithTimeout(CancellationToken, System.Nullable<TimeSpan>)
  fullName.vb: Scraper.Net.Stream.CancellationTokenExtensions.WithTimeout(CancellationToken, System.Nullable(Of TimeSpan))
  nameWithType: CancellationTokenExtensions.WithTimeout(CancellationToken, Nullable<TimeSpan>)
  nameWithType.vb: CancellationTokenExtensions.WithTimeout(CancellationToken, Nullable(Of TimeSpan))
- uid: Scraper.Net.Stream.CancellationTokenExtensions.WithTimeout*
  name: WithTimeout
  href: api/Scraper.Net.Stream.CancellationTokenExtensions.html#Scraper_Net_Stream_CancellationTokenExtensions_WithTimeout_
  commentId: Overload:Scraper.Net.Stream.CancellationTokenExtensions.WithTimeout
  isSpec: "True"
  fullName: Scraper.Net.Stream.CancellationTokenExtensions.WithTimeout
  nameWithType: CancellationTokenExtensions.WithTimeout
- uid: Scraper.Net.Stream.InMemoryPostTimeFilter
  name: InMemoryPostTimeFilter
  href: api/Scraper.Net.Stream.InMemoryPostTimeFilter.html
  commentId: T:Scraper.Net.Stream.InMemoryPostTimeFilter
  fullName: Scraper.Net.Stream.InMemoryPostTimeFilter
  nameWithType: InMemoryPostTimeFilter
- uid: Scraper.Net.Stream.InMemoryPostTimeFilter.Filter(Post,System.String,CancellationToken)
  name: Filter(Post, String, CancellationToken)
  href: api/Scraper.Net.Stream.InMemoryPostTimeFilter.html#Scraper_Net_Stream_InMemoryPostTimeFilter_Filter_Post_System_String_CancellationToken_
  commentId: M:Scraper.Net.Stream.InMemoryPostTimeFilter.Filter(Post,System.String,CancellationToken)
  fullName: Scraper.Net.Stream.InMemoryPostTimeFilter.Filter(Post, System.String, CancellationToken)
  nameWithType: InMemoryPostTimeFilter.Filter(Post, String, CancellationToken)
- uid: Scraper.Net.Stream.InMemoryPostTimeFilter.Filter*
  name: Filter
  href: api/Scraper.Net.Stream.InMemoryPostTimeFilter.html#Scraper_Net_Stream_InMemoryPostTimeFilter_Filter_
  commentId: Overload:Scraper.Net.Stream.InMemoryPostTimeFilter.Filter
  isSpec: "True"
  fullName: Scraper.Net.Stream.InMemoryPostTimeFilter.Filter
  nameWithType: InMemoryPostTimeFilter.Filter
- uid: Scraper.Net.Stream.IPostStream
  name: IPostStream
  href: api/Scraper.Net.Stream.IPostStream.html
  commentId: T:Scraper.Net.Stream.IPostStream
  fullName: Scraper.Net.Stream.IPostStream
  nameWithType: IPostStream
- uid: Scraper.Net.Stream.IPostStream.DueTime
  name: DueTime
  href: api/Scraper.Net.Stream.IPostStream.html#Scraper_Net_Stream_IPostStream_DueTime
  commentId: P:Scraper.Net.Stream.IPostStream.DueTime
  fullName: Scraper.Net.Stream.IPostStream.DueTime
  nameWithType: IPostStream.DueTime
- uid: Scraper.Net.Stream.IPostStream.DueTime*
  name: DueTime
  href: api/Scraper.Net.Stream.IPostStream.html#Scraper_Net_Stream_IPostStream_DueTime_
  commentId: Overload:Scraper.Net.Stream.IPostStream.DueTime
  isSpec: "True"
  fullName: Scraper.Net.Stream.IPostStream.DueTime
  nameWithType: IPostStream.DueTime
- uid: Scraper.Net.Stream.IPostStream.Posts
  name: Posts
  href: api/Scraper.Net.Stream.IPostStream.html#Scraper_Net_Stream_IPostStream_Posts
  commentId: P:Scraper.Net.Stream.IPostStream.Posts
  fullName: Scraper.Net.Stream.IPostStream.Posts
  nameWithType: IPostStream.Posts
- uid: Scraper.Net.Stream.IPostStream.Posts*
  name: Posts
  href: api/Scraper.Net.Stream.IPostStream.html#Scraper_Net_Stream_IPostStream_Posts_
  commentId: Overload:Scraper.Net.Stream.IPostStream.Posts
  isSpec: "True"
  fullName: Scraper.Net.Stream.IPostStream.Posts
  nameWithType: IPostStream.Posts
- uid: Scraper.Net.Stream.IPostStream.UpdateAsync(CancellationToken)
  name: UpdateAsync(CancellationToken)
  href: api/Scraper.Net.Stream.IPostStream.html#Scraper_Net_Stream_IPostStream_UpdateAsync_CancellationToken_
  commentId: M:Scraper.Net.Stream.IPostStream.UpdateAsync(CancellationToken)
  fullName: Scraper.Net.Stream.IPostStream.UpdateAsync(CancellationToken)
  nameWithType: IPostStream.UpdateAsync(CancellationToken)
- uid: Scraper.Net.Stream.IPostStream.UpdateAsync*
  name: UpdateAsync
  href: api/Scraper.Net.Stream.IPostStream.html#Scraper_Net_Stream_IPostStream_UpdateAsync_
  commentId: Overload:Scraper.Net.Stream.IPostStream.UpdateAsync
  isSpec: "True"
  fullName: Scraper.Net.Stream.IPostStream.UpdateAsync
  nameWithType: IPostStream.UpdateAsync
- uid: Scraper.Net.Stream.ObservableExtensions
  name: ObservableExtensions
  href: api/Scraper.Net.Stream.ObservableExtensions.html
  commentId: T:Scraper.Net.Stream.ObservableExtensions
  fullName: Scraper.Net.Stream.ObservableExtensions
  nameWithType: ObservableExtensions
- uid: Scraper.Net.Stream.ObservableExtensions.WhereAwait*
  name: WhereAwait
  href: api/Scraper.Net.Stream.ObservableExtensions.html#Scraper_Net_Stream_ObservableExtensions_WhereAwait_
  commentId: Overload:Scraper.Net.Stream.ObservableExtensions.WhereAwait
  isSpec: "True"
  fullName: Scraper.Net.Stream.ObservableExtensions.WhereAwait
  nameWithType: ObservableExtensions.WhereAwait
- uid: Scraper.Net.Stream.ObservableExtensions.WhereAwait``1(IObservable{``0},Func{``0,Task{System.Boolean}})
  name: WhereAwait<TSource>(IObservable<TSource>, Func<TSource, Task<Boolean>>)
  href: api/Scraper.Net.Stream.ObservableExtensions.html#Scraper_Net_Stream_ObservableExtensions_WhereAwait__1_IObservable___0__Func___0_Task_System_Boolean___
  commentId: M:Scraper.Net.Stream.ObservableExtensions.WhereAwait``1(IObservable{``0},Func{``0,Task{System.Boolean}})
  name.vb: WhereAwait(Of TSource)(IObservable(Of TSource), Func(Of TSource, Task(Of Boolean)))
  fullName: Scraper.Net.Stream.ObservableExtensions.WhereAwait<TSource>(IObservable<TSource>, Func<TSource, Task<System.Boolean>>)
  fullName.vb: Scraper.Net.Stream.ObservableExtensions.WhereAwait(Of TSource)(IObservable(Of TSource), Func(Of TSource, Task(Of System.Boolean)))
  nameWithType: ObservableExtensions.WhereAwait<TSource>(IObservable<TSource>, Func<TSource, Task<Boolean>>)
  nameWithType.vb: ObservableExtensions.WhereAwait(Of TSource)(IObservable(Of TSource), Func(Of TSource, Task(Of Boolean)))
- uid: Scraper.Net.Stream.PostStreamConfig
  name: PostStreamConfig
  href: api/Scraper.Net.Stream.PostStreamConfig.html
  commentId: T:Scraper.Net.Stream.PostStreamConfig
  fullName: Scraper.Net.Stream.PostStreamConfig
  nameWithType: PostStreamConfig
- uid: Scraper.Net.Stream.PostStreamConfig.MaxDegreeOfParallelism
  name: MaxDegreeOfParallelism
  href: api/Scraper.Net.Stream.PostStreamConfig.html#Scraper_Net_Stream_PostStreamConfig_MaxDegreeOfParallelism
  commentId: P:Scraper.Net.Stream.PostStreamConfig.MaxDegreeOfParallelism
  fullName: Scraper.Net.Stream.PostStreamConfig.MaxDegreeOfParallelism
  nameWithType: PostStreamConfig.MaxDegreeOfParallelism
- uid: Scraper.Net.Stream.PostStreamConfig.MaxDegreeOfParallelism*
  name: MaxDegreeOfParallelism
  href: api/Scraper.Net.Stream.PostStreamConfig.html#Scraper_Net_Stream_PostStreamConfig_MaxDegreeOfParallelism_
  commentId: Overload:Scraper.Net.Stream.PostStreamConfig.MaxDegreeOfParallelism
  isSpec: "True"
  fullName: Scraper.Net.Stream.PostStreamConfig.MaxDegreeOfParallelism
  nameWithType: PostStreamConfig.MaxDegreeOfParallelism
- uid: Scraper.Net.Stream.PostStreamConfig.PollingTimeout
  name: PollingTimeout
  href: api/Scraper.Net.Stream.PostStreamConfig.html#Scraper_Net_Stream_PostStreamConfig_PollingTimeout
  commentId: P:Scraper.Net.Stream.PostStreamConfig.PollingTimeout
  fullName: Scraper.Net.Stream.PostStreamConfig.PollingTimeout
  nameWithType: PostStreamConfig.PollingTimeout
- uid: Scraper.Net.Stream.PostStreamConfig.PollingTimeout*
  name: PollingTimeout
  href: api/Scraper.Net.Stream.PostStreamConfig.html#Scraper_Net_Stream_PostStreamConfig_PollingTimeout_
  commentId: Overload:Scraper.Net.Stream.PostStreamConfig.PollingTimeout
  isSpec: "True"
  fullName: Scraper.Net.Stream.PostStreamConfig.PollingTimeout
  nameWithType: PostStreamConfig.PollingTimeout
- uid: Scraper.Net.Stream.PostStreamFactory
  name: PostStreamFactory
  href: api/Scraper.Net.Stream.PostStreamFactory.html
  commentId: T:Scraper.Net.Stream.PostStreamFactory
  fullName: Scraper.Net.Stream.PostStreamFactory
  nameWithType: PostStreamFactory
- uid: Scraper.Net.Stream.PostStreamFactory.#ctor(Scraper.Net.IScraperService,Scraper.Net.PostFilter,Scraper.Net.Stream.PostStreamConfig,ILogger{Scraper.Net.Stream.IPostStream})
  name: PostStreamFactory(IScraperService, PostFilter, PostStreamConfig, ILogger<IPostStream>)
  href: api/Scraper.Net.Stream.PostStreamFactory.html#Scraper_Net_Stream_PostStreamFactory__ctor_Scraper_Net_IScraperService_Scraper_Net_PostFilter_Scraper_Net_Stream_PostStreamConfig_ILogger_Scraper_Net_Stream_IPostStream__
  commentId: M:Scraper.Net.Stream.PostStreamFactory.#ctor(Scraper.Net.IScraperService,Scraper.Net.PostFilter,Scraper.Net.Stream.PostStreamConfig,ILogger{Scraper.Net.Stream.IPostStream})
  name.vb: PostStreamFactory(IScraperService, PostFilter, PostStreamConfig, ILogger(Of IPostStream))
  fullName: Scraper.Net.Stream.PostStreamFactory.PostStreamFactory(Scraper.Net.IScraperService, Scraper.Net.PostFilter, Scraper.Net.Stream.PostStreamConfig, ILogger<Scraper.Net.Stream.IPostStream>)
  fullName.vb: Scraper.Net.Stream.PostStreamFactory.PostStreamFactory(Scraper.Net.IScraperService, Scraper.Net.PostFilter, Scraper.Net.Stream.PostStreamConfig, ILogger(Of Scraper.Net.Stream.IPostStream))
  nameWithType: PostStreamFactory.PostStreamFactory(IScraperService, PostFilter, PostStreamConfig, ILogger<IPostStream>)
  nameWithType.vb: PostStreamFactory.PostStreamFactory(IScraperService, PostFilter, PostStreamConfig, ILogger(Of IPostStream))
- uid: Scraper.Net.Stream.PostStreamFactory.#ctor*
  name: PostStreamFactory
  href: api/Scraper.Net.Stream.PostStreamFactory.html#Scraper_Net_Stream_PostStreamFactory__ctor_
  commentId: Overload:Scraper.Net.Stream.PostStreamFactory.#ctor
  isSpec: "True"
  fullName: Scraper.Net.Stream.PostStreamFactory.PostStreamFactory
  nameWithType: PostStreamFactory.PostStreamFactory
- uid: Scraper.Net.Stream.PostStreamFactory.Stream(System.String,System.String,TimeSpan,System.Nullable{DateTime},IScheduler)
  name: Stream(String, String, TimeSpan, Nullable<DateTime>, IScheduler)
  href: api/Scraper.Net.Stream.PostStreamFactory.html#Scraper_Net_Stream_PostStreamFactory_Stream_System_String_System_String_TimeSpan_System_Nullable_DateTime__IScheduler_
  commentId: M:Scraper.Net.Stream.PostStreamFactory.Stream(System.String,System.String,TimeSpan,System.Nullable{DateTime},IScheduler)
  name.vb: Stream(String, String, TimeSpan, Nullable(Of DateTime), IScheduler)
  fullName: Scraper.Net.Stream.PostStreamFactory.Stream(System.String, System.String, TimeSpan, System.Nullable<DateTime>, IScheduler)
  fullName.vb: Scraper.Net.Stream.PostStreamFactory.Stream(System.String, System.String, TimeSpan, System.Nullable(Of DateTime), IScheduler)
  nameWithType: PostStreamFactory.Stream(String, String, TimeSpan, Nullable<DateTime>, IScheduler)
  nameWithType.vb: PostStreamFactory.Stream(String, String, TimeSpan, Nullable(Of DateTime), IScheduler)
- uid: Scraper.Net.Stream.PostStreamFactory.Stream*
  name: Stream
  href: api/Scraper.Net.Stream.PostStreamFactory.html#Scraper_Net_Stream_PostStreamFactory_Stream_
  commentId: Overload:Scraper.Net.Stream.PostStreamFactory.Stream
  isSpec: "True"
  fullName: Scraper.Net.Stream.PostStreamFactory.Stream
  nameWithType: PostStreamFactory.Stream
- uid: Scraper.Net.Stream.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/Scraper.Net.Stream.ServiceCollectionExtensions.html
  commentId: T:Scraper.Net.Stream.ServiceCollectionExtensions
  fullName: Scraper.Net.Stream.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: Scraper.Net.Stream.ServiceCollectionExtensions.AddStream(IServiceCollection,Func{IServiceProvider,Scraper.Net.PostFilter},Scraper.Net.Stream.PostStreamConfig)
  name: AddStream(IServiceCollection, Func<IServiceProvider, PostFilter>, PostStreamConfig)
  href: api/Scraper.Net.Stream.ServiceCollectionExtensions.html#Scraper_Net_Stream_ServiceCollectionExtensions_AddStream_IServiceCollection_Func_IServiceProvider_Scraper_Net_PostFilter__Scraper_Net_Stream_PostStreamConfig_
  commentId: M:Scraper.Net.Stream.ServiceCollectionExtensions.AddStream(IServiceCollection,Func{IServiceProvider,Scraper.Net.PostFilter},Scraper.Net.Stream.PostStreamConfig)
  name.vb: AddStream(IServiceCollection, Func(Of IServiceProvider, PostFilter), PostStreamConfig)
  fullName: Scraper.Net.Stream.ServiceCollectionExtensions.AddStream(IServiceCollection, Func<IServiceProvider, Scraper.Net.PostFilter>, Scraper.Net.Stream.PostStreamConfig)
  fullName.vb: Scraper.Net.Stream.ServiceCollectionExtensions.AddStream(IServiceCollection, Func(Of IServiceProvider, Scraper.Net.PostFilter), Scraper.Net.Stream.PostStreamConfig)
  nameWithType: ServiceCollectionExtensions.AddStream(IServiceCollection, Func<IServiceProvider, PostFilter>, PostStreamConfig)
  nameWithType.vb: ServiceCollectionExtensions.AddStream(IServiceCollection, Func(Of IServiceProvider, PostFilter), PostStreamConfig)
- uid: Scraper.Net.Stream.ServiceCollectionExtensions.AddStream(IServiceCollection,Scraper.Net.PostFilter,Scraper.Net.Stream.PostStreamConfig)
  name: AddStream(IServiceCollection, PostFilter, PostStreamConfig)
  href: api/Scraper.Net.Stream.ServiceCollectionExtensions.html#Scraper_Net_Stream_ServiceCollectionExtensions_AddStream_IServiceCollection_Scraper_Net_PostFilter_Scraper_Net_Stream_PostStreamConfig_
  commentId: M:Scraper.Net.Stream.ServiceCollectionExtensions.AddStream(IServiceCollection,Scraper.Net.PostFilter,Scraper.Net.Stream.PostStreamConfig)
  fullName: Scraper.Net.Stream.ServiceCollectionExtensions.AddStream(IServiceCollection, Scraper.Net.PostFilter, Scraper.Net.Stream.PostStreamConfig)
  nameWithType: ServiceCollectionExtensions.AddStream(IServiceCollection, PostFilter, PostStreamConfig)
- uid: Scraper.Net.Stream.ServiceCollectionExtensions.AddStream*
  name: AddStream
  href: api/Scraper.Net.Stream.ServiceCollectionExtensions.html#Scraper_Net_Stream_ServiceCollectionExtensions_AddStream_
  commentId: Overload:Scraper.Net.Stream.ServiceCollectionExtensions.AddStream
  isSpec: "True"
  fullName: Scraper.Net.Stream.ServiceCollectionExtensions.AddStream
  nameWithType: ServiceCollectionExtensions.AddStream
- uid: Scraper.Net.StringExtensions
  name: StringExtensions
  href: api/Scraper.Net.StringExtensions.html
  commentId: T:Scraper.Net.StringExtensions
  fullName: Scraper.Net.StringExtensions
  nameWithType: StringExtensions
- uid: Scraper.Net.StringExtensions.Replace(System.String,IEnumerable{System.String},System.String)
  name: Replace(String, IEnumerable<String>, String)
  href: api/Scraper.Net.StringExtensions.html#Scraper_Net_StringExtensions_Replace_System_String_IEnumerable_System_String__System_String_
  commentId: M:Scraper.Net.StringExtensions.Replace(System.String,IEnumerable{System.String},System.String)
  name.vb: Replace(String, IEnumerable(Of String), String)
  fullName: Scraper.Net.StringExtensions.Replace(System.String, IEnumerable<System.String>, System.String)
  fullName.vb: Scraper.Net.StringExtensions.Replace(System.String, IEnumerable(Of System.String), System.String)
  nameWithType: StringExtensions.Replace(String, IEnumerable<String>, String)
  nameWithType.vb: StringExtensions.Replace(String, IEnumerable(Of String), String)
- uid: Scraper.Net.StringExtensions.Replace*
  name: Replace
  href: api/Scraper.Net.StringExtensions.html#Scraper_Net_StringExtensions_Replace_
  commentId: Overload:Scraper.Net.StringExtensions.Replace
  isSpec: "True"
  fullName: Scraper.Net.StringExtensions.Replace
  nameWithType: StringExtensions.Replace
- uid: Scraper.Net.Twitter
  name: Scraper.Net.Twitter
  href: api/Scraper.Net.Twitter.html
  commentId: N:Scraper.Net.Twitter
  fullName: Scraper.Net.Twitter
  nameWithType: Scraper.Net.Twitter
- uid: Scraper.Net.Twitter.ScraperExtensions
  name: ScraperExtensions
  href: api/Scraper.Net.Twitter.ScraperExtensions.html
  commentId: T:Scraper.Net.Twitter.ScraperExtensions
  fullName: Scraper.Net.Twitter.ScraperExtensions
  nameWithType: ScraperExtensions
- uid: Scraper.Net.Twitter.ScraperExtensions.AddTwitter(Scraper.Net.ScraperBuilder,TwitterConfig,System.String)
  name: AddTwitter(ScraperBuilder, TwitterConfig, String)
  href: api/Scraper.Net.Twitter.ScraperExtensions.html#Scraper_Net_Twitter_ScraperExtensions_AddTwitter_Scraper_Net_ScraperBuilder_TwitterConfig_System_String_
  commentId: M:Scraper.Net.Twitter.ScraperExtensions.AddTwitter(Scraper.Net.ScraperBuilder,TwitterConfig,System.String)
  fullName: Scraper.Net.Twitter.ScraperExtensions.AddTwitter(Scraper.Net.ScraperBuilder, TwitterConfig, System.String)
  nameWithType: ScraperExtensions.AddTwitter(ScraperBuilder, TwitterConfig, String)
- uid: Scraper.Net.Twitter.ScraperExtensions.AddTwitter*
  name: AddTwitter
  href: api/Scraper.Net.Twitter.ScraperExtensions.html#Scraper_Net_Twitter_ScraperExtensions_AddTwitter_
  commentId: Overload:Scraper.Net.Twitter.ScraperExtensions.AddTwitter
  isSpec: "True"
  fullName: Scraper.Net.Twitter.ScraperExtensions.AddTwitter
  nameWithType: ScraperExtensions.AddTwitter
- uid: Scraper.Net.Twitter.ScraperExtensions.GetTwitterAuthor(Scraper.Net.IScraperService,System.String,CancellationToken)
  name: GetTwitterAuthor(IScraperService, String, CancellationToken)
  href: api/Scraper.Net.Twitter.ScraperExtensions.html#Scraper_Net_Twitter_ScraperExtensions_GetTwitterAuthor_Scraper_Net_IScraperService_System_String_CancellationToken_
  commentId: M:Scraper.Net.Twitter.ScraperExtensions.GetTwitterAuthor(Scraper.Net.IScraperService,System.String,CancellationToken)
  fullName: Scraper.Net.Twitter.ScraperExtensions.GetTwitterAuthor(Scraper.Net.IScraperService, System.String, CancellationToken)
  nameWithType: ScraperExtensions.GetTwitterAuthor(IScraperService, String, CancellationToken)
- uid: Scraper.Net.Twitter.ScraperExtensions.GetTwitterAuthor*
  name: GetTwitterAuthor
  href: api/Scraper.Net.Twitter.ScraperExtensions.html#Scraper_Net_Twitter_ScraperExtensions_GetTwitterAuthor_
  commentId: Overload:Scraper.Net.Twitter.ScraperExtensions.GetTwitterAuthor
  isSpec: "True"
  fullName: Scraper.Net.Twitter.ScraperExtensions.GetTwitterAuthor
  nameWithType: ScraperExtensions.GetTwitterAuthor
- uid: Scraper.Net.Twitter.ScraperExtensions.GetTwitterPosts(Scraper.Net.IScraperService,System.String,CancellationToken)
  name: GetTwitterPosts(IScraperService, String, CancellationToken)
  href: api/Scraper.Net.Twitter.ScraperExtensions.html#Scraper_Net_Twitter_ScraperExtensions_GetTwitterPosts_Scraper_Net_IScraperService_System_String_CancellationToken_
  commentId: M:Scraper.Net.Twitter.ScraperExtensions.GetTwitterPosts(Scraper.Net.IScraperService,System.String,CancellationToken)
  fullName: Scraper.Net.Twitter.ScraperExtensions.GetTwitterPosts(Scraper.Net.IScraperService, System.String, CancellationToken)
  nameWithType: ScraperExtensions.GetTwitterPosts(IScraperService, String, CancellationToken)
- uid: Scraper.Net.Twitter.ScraperExtensions.GetTwitterPosts*
  name: GetTwitterPosts
  href: api/Scraper.Net.Twitter.ScraperExtensions.html#Scraper_Net_Twitter_ScraperExtensions_GetTwitterPosts_
  commentId: Overload:Scraper.Net.Twitter.ScraperExtensions.GetTwitterPosts
  isSpec: "True"
  fullName: Scraper.Net.Twitter.ScraperExtensions.GetTwitterPosts
  nameWithType: ScraperExtensions.GetTwitterPosts
- uid: Scraper.Net.Twitter.TwitterConstants
  name: TwitterConstants
  href: api/Scraper.Net.Twitter.TwitterConstants.html
  commentId: T:Scraper.Net.Twitter.TwitterConstants
  fullName: Scraper.Net.Twitter.TwitterConstants
  nameWithType: TwitterConstants
- uid: Scraper.Net.Twitter.TwitterConstants.PlatformName
  name: PlatformName
  href: api/Scraper.Net.Twitter.TwitterConstants.html#Scraper_Net_Twitter_TwitterConstants_PlatformName
  commentId: F:Scraper.Net.Twitter.TwitterConstants.PlatformName
  fullName: Scraper.Net.Twitter.TwitterConstants.PlatformName
  nameWithType: TwitterConstants.PlatformName
- uid: Scraper.Net.Twitter.TwitterConstants.TwitterBaseDomain
  name: TwitterBaseDomain
  href: api/Scraper.Net.Twitter.TwitterConstants.html#Scraper_Net_Twitter_TwitterConstants_TwitterBaseDomain
  commentId: F:Scraper.Net.Twitter.TwitterConstants.TwitterBaseDomain
  fullName: Scraper.Net.Twitter.TwitterConstants.TwitterBaseDomain
  nameWithType: TwitterConstants.TwitterBaseDomain
- uid: Scraper.Net.Twitter.TwitterScraper
  name: TwitterScraper
  href: api/Scraper.Net.Twitter.TwitterScraper.html
  commentId: T:Scraper.Net.Twitter.TwitterScraper
  fullName: Scraper.Net.Twitter.TwitterScraper
  nameWithType: TwitterScraper
- uid: Scraper.Net.Twitter.TwitterScraper.#ctor(TwitterConfig)
  name: TwitterScraper(TwitterConfig)
  href: api/Scraper.Net.Twitter.TwitterScraper.html#Scraper_Net_Twitter_TwitterScraper__ctor_TwitterConfig_
  commentId: M:Scraper.Net.Twitter.TwitterScraper.#ctor(TwitterConfig)
  fullName: Scraper.Net.Twitter.TwitterScraper.TwitterScraper(TwitterConfig)
  nameWithType: TwitterScraper.TwitterScraper(TwitterConfig)
- uid: Scraper.Net.Twitter.TwitterScraper.#ctor*
  name: TwitterScraper
  href: api/Scraper.Net.Twitter.TwitterScraper.html#Scraper_Net_Twitter_TwitterScraper__ctor_
  commentId: Overload:Scraper.Net.Twitter.TwitterScraper.#ctor
  isSpec: "True"
  fullName: Scraper.Net.Twitter.TwitterScraper.TwitterScraper
  nameWithType: TwitterScraper.TwitterScraper
- uid: Scraper.Net.Twitter.TwitterScraper.GetAuthorAsync(System.String,CancellationToken)
  name: GetAuthorAsync(String, CancellationToken)
  href: api/Scraper.Net.Twitter.TwitterScraper.html#Scraper_Net_Twitter_TwitterScraper_GetAuthorAsync_System_String_CancellationToken_
  commentId: M:Scraper.Net.Twitter.TwitterScraper.GetAuthorAsync(System.String,CancellationToken)
  fullName: Scraper.Net.Twitter.TwitterScraper.GetAuthorAsync(System.String, CancellationToken)
  nameWithType: TwitterScraper.GetAuthorAsync(String, CancellationToken)
- uid: Scraper.Net.Twitter.TwitterScraper.GetAuthorAsync*
  name: GetAuthorAsync
  href: api/Scraper.Net.Twitter.TwitterScraper.html#Scraper_Net_Twitter_TwitterScraper_GetAuthorAsync_
  commentId: Overload:Scraper.Net.Twitter.TwitterScraper.GetAuthorAsync
  isSpec: "True"
  fullName: Scraper.Net.Twitter.TwitterScraper.GetAuthorAsync
  nameWithType: TwitterScraper.GetAuthorAsync
- uid: Scraper.Net.Twitter.TwitterScraper.GetPostsAsync(System.String,CancellationToken)
  name: GetPostsAsync(String, CancellationToken)
  href: api/Scraper.Net.Twitter.TwitterScraper.html#Scraper_Net_Twitter_TwitterScraper_GetPostsAsync_System_String_CancellationToken_
  commentId: M:Scraper.Net.Twitter.TwitterScraper.GetPostsAsync(System.String,CancellationToken)
  fullName: Scraper.Net.Twitter.TwitterScraper.GetPostsAsync(System.String, CancellationToken)
  nameWithType: TwitterScraper.GetPostsAsync(String, CancellationToken)
- uid: Scraper.Net.Twitter.TwitterScraper.GetPostsAsync*
  name: GetPostsAsync
  href: api/Scraper.Net.Twitter.TwitterScraper.html#Scraper_Net_Twitter_TwitterScraper_GetPostsAsync_
  commentId: Overload:Scraper.Net.Twitter.TwitterScraper.GetPostsAsync
  isSpec: "True"
  fullName: Scraper.Net.Twitter.TwitterScraper.GetPostsAsync
  nameWithType: TwitterScraper.GetPostsAsync
- uid: Scraper.Net.UrlType
  name: UrlType
  href: api/Scraper.Net.UrlType.html
  commentId: T:Scraper.Net.UrlType
  fullName: Scraper.Net.UrlType
  nameWithType: UrlType
- uid: Scraper.Net.UrlType.DirectUrl
  name: DirectUrl
  href: api/Scraper.Net.UrlType.html#Scraper_Net_UrlType_DirectUrl
  commentId: F:Scraper.Net.UrlType.DirectUrl
  fullName: Scraper.Net.UrlType.DirectUrl
  nameWithType: UrlType.DirectUrl
- uid: Scraper.Net.UrlType.WebpageUrl
  name: WebpageUrl
  href: api/Scraper.Net.UrlType.html#Scraper_Net_UrlType_WebpageUrl
  commentId: F:Scraper.Net.UrlType.WebpageUrl
  fullName: Scraper.Net.UrlType.WebpageUrl
  nameWithType: UrlType.WebpageUrl
- uid: Scraper.Net.Youtube
  name: Scraper.Net.Youtube
  href: api/Scraper.Net.Youtube.html
  commentId: N:Scraper.Net.Youtube
  fullName: Scraper.Net.Youtube
  nameWithType: Scraper.Net.Youtube
- uid: Scraper.Net.Youtube.ScraperExtensions
  name: ScraperExtensions
  href: api/Scraper.Net.Youtube.ScraperExtensions.html
  commentId: T:Scraper.Net.Youtube.ScraperExtensions
  fullName: Scraper.Net.Youtube.ScraperExtensions
  nameWithType: ScraperExtensions
- uid: Scraper.Net.Youtube.ScraperExtensions.AddYoutube(Scraper.Net.ScraperBuilder,Scraper.Net.Youtube.YoutubeConfig,System.String)
  name: AddYoutube(ScraperBuilder, YoutubeConfig, String)
  href: api/Scraper.Net.Youtube.ScraperExtensions.html#Scraper_Net_Youtube_ScraperExtensions_AddYoutube_Scraper_Net_ScraperBuilder_Scraper_Net_Youtube_YoutubeConfig_System_String_
  commentId: M:Scraper.Net.Youtube.ScraperExtensions.AddYoutube(Scraper.Net.ScraperBuilder,Scraper.Net.Youtube.YoutubeConfig,System.String)
  fullName: Scraper.Net.Youtube.ScraperExtensions.AddYoutube(Scraper.Net.ScraperBuilder, Scraper.Net.Youtube.YoutubeConfig, System.String)
  nameWithType: ScraperExtensions.AddYoutube(ScraperBuilder, YoutubeConfig, String)
- uid: Scraper.Net.Youtube.ScraperExtensions.AddYoutube*
  name: AddYoutube
  href: api/Scraper.Net.Youtube.ScraperExtensions.html#Scraper_Net_Youtube_ScraperExtensions_AddYoutube_
  commentId: Overload:Scraper.Net.Youtube.ScraperExtensions.AddYoutube
  isSpec: "True"
  fullName: Scraper.Net.Youtube.ScraperExtensions.AddYoutube
  nameWithType: ScraperExtensions.AddYoutube
- uid: Scraper.Net.Youtube.ScraperExtensions.GetYoutubeAuthor(Scraper.Net.IScraperService,System.String,CancellationToken)
  name: GetYoutubeAuthor(IScraperService, String, CancellationToken)
  href: api/Scraper.Net.Youtube.ScraperExtensions.html#Scraper_Net_Youtube_ScraperExtensions_GetYoutubeAuthor_Scraper_Net_IScraperService_System_String_CancellationToken_
  commentId: M:Scraper.Net.Youtube.ScraperExtensions.GetYoutubeAuthor(Scraper.Net.IScraperService,System.String,CancellationToken)
  fullName: Scraper.Net.Youtube.ScraperExtensions.GetYoutubeAuthor(Scraper.Net.IScraperService, System.String, CancellationToken)
  nameWithType: ScraperExtensions.GetYoutubeAuthor(IScraperService, String, CancellationToken)
- uid: Scraper.Net.Youtube.ScraperExtensions.GetYoutubeAuthor*
  name: GetYoutubeAuthor
  href: api/Scraper.Net.Youtube.ScraperExtensions.html#Scraper_Net_Youtube_ScraperExtensions_GetYoutubeAuthor_
  commentId: Overload:Scraper.Net.Youtube.ScraperExtensions.GetYoutubeAuthor
  isSpec: "True"
  fullName: Scraper.Net.Youtube.ScraperExtensions.GetYoutubeAuthor
  nameWithType: ScraperExtensions.GetYoutubeAuthor
- uid: Scraper.Net.Youtube.ScraperExtensions.GetYoutubePosts(Scraper.Net.IScraperService,System.String,CancellationToken)
  name: GetYoutubePosts(IScraperService, String, CancellationToken)
  href: api/Scraper.Net.Youtube.ScraperExtensions.html#Scraper_Net_Youtube_ScraperExtensions_GetYoutubePosts_Scraper_Net_IScraperService_System_String_CancellationToken_
  commentId: M:Scraper.Net.Youtube.ScraperExtensions.GetYoutubePosts(Scraper.Net.IScraperService,System.String,CancellationToken)
  fullName: Scraper.Net.Youtube.ScraperExtensions.GetYoutubePosts(Scraper.Net.IScraperService, System.String, CancellationToken)
  nameWithType: ScraperExtensions.GetYoutubePosts(IScraperService, String, CancellationToken)
- uid: Scraper.Net.Youtube.ScraperExtensions.GetYoutubePosts*
  name: GetYoutubePosts
  href: api/Scraper.Net.Youtube.ScraperExtensions.html#Scraper_Net_Youtube_ScraperExtensions_GetYoutubePosts_
  commentId: Overload:Scraper.Net.Youtube.ScraperExtensions.GetYoutubePosts
  isSpec: "True"
  fullName: Scraper.Net.Youtube.ScraperExtensions.GetYoutubePosts
  nameWithType: ScraperExtensions.GetYoutubePosts
- uid: Scraper.Net.Youtube.YoutubeConfig
  name: YoutubeConfig
  href: api/Scraper.Net.Youtube.YoutubeConfig.html
  commentId: T:Scraper.Net.Youtube.YoutubeConfig
  fullName: Scraper.Net.Youtube.YoutubeConfig
  nameWithType: YoutubeConfig
- uid: Scraper.Net.Youtube.YoutubeConfig.ApiKey
  name: ApiKey
  href: api/Scraper.Net.Youtube.YoutubeConfig.html#Scraper_Net_Youtube_YoutubeConfig_ApiKey
  commentId: P:Scraper.Net.Youtube.YoutubeConfig.ApiKey
  fullName: Scraper.Net.Youtube.YoutubeConfig.ApiKey
  nameWithType: YoutubeConfig.ApiKey
- uid: Scraper.Net.Youtube.YoutubeConfig.ApiKey*
  name: ApiKey
  href: api/Scraper.Net.Youtube.YoutubeConfig.html#Scraper_Net_Youtube_YoutubeConfig_ApiKey_
  commentId: Overload:Scraper.Net.Youtube.YoutubeConfig.ApiKey
  isSpec: "True"
  fullName: Scraper.Net.Youtube.YoutubeConfig.ApiKey
  nameWithType: YoutubeConfig.ApiKey
- uid: Scraper.Net.Youtube.YoutubeConfig.AppName
  name: AppName
  href: api/Scraper.Net.Youtube.YoutubeConfig.html#Scraper_Net_Youtube_YoutubeConfig_AppName
  commentId: P:Scraper.Net.Youtube.YoutubeConfig.AppName
  fullName: Scraper.Net.Youtube.YoutubeConfig.AppName
  nameWithType: YoutubeConfig.AppName
- uid: Scraper.Net.Youtube.YoutubeConfig.AppName*
  name: AppName
  href: api/Scraper.Net.Youtube.YoutubeConfig.html#Scraper_Net_Youtube_YoutubeConfig_AppName_
  commentId: Overload:Scraper.Net.Youtube.YoutubeConfig.AppName
  isSpec: "True"
  fullName: Scraper.Net.Youtube.YoutubeConfig.AppName
  nameWithType: YoutubeConfig.AppName
- uid: Scraper.Net.Youtube.YoutubeConstants
  name: YoutubeConstants
  href: api/Scraper.Net.Youtube.YoutubeConstants.html
  commentId: T:Scraper.Net.Youtube.YoutubeConstants
  fullName: Scraper.Net.Youtube.YoutubeConstants
  nameWithType: YoutubeConstants
- uid: Scraper.Net.Youtube.YoutubeConstants.BaseUrl
  name: BaseUrl
  href: api/Scraper.Net.Youtube.YoutubeConstants.html#Scraper_Net_Youtube_YoutubeConstants_BaseUrl
  commentId: F:Scraper.Net.Youtube.YoutubeConstants.BaseUrl
  fullName: Scraper.Net.Youtube.YoutubeConstants.BaseUrl
  nameWithType: YoutubeConstants.BaseUrl
- uid: Scraper.Net.Youtube.YoutubeConstants.PlatformName
  name: PlatformName
  href: api/Scraper.Net.Youtube.YoutubeConstants.html#Scraper_Net_Youtube_YoutubeConstants_PlatformName
  commentId: F:Scraper.Net.Youtube.YoutubeConstants.PlatformName
  fullName: Scraper.Net.Youtube.YoutubeConstants.PlatformName
  nameWithType: YoutubeConstants.PlatformName
- uid: Scraper.Net.Youtube.YoutubeScraper
  name: YoutubeScraper
  href: api/Scraper.Net.Youtube.YoutubeScraper.html
  commentId: T:Scraper.Net.Youtube.YoutubeScraper
  fullName: Scraper.Net.Youtube.YoutubeScraper
  nameWithType: YoutubeScraper
- uid: Scraper.Net.Youtube.YoutubeScraper.#ctor(Scraper.Net.Youtube.YoutubeConfig,ILoggerFactory)
  name: YoutubeScraper(YoutubeConfig, ILoggerFactory)
  href: api/Scraper.Net.Youtube.YoutubeScraper.html#Scraper_Net_Youtube_YoutubeScraper__ctor_Scraper_Net_Youtube_YoutubeConfig_ILoggerFactory_
  commentId: M:Scraper.Net.Youtube.YoutubeScraper.#ctor(Scraper.Net.Youtube.YoutubeConfig,ILoggerFactory)
  fullName: Scraper.Net.Youtube.YoutubeScraper.YoutubeScraper(Scraper.Net.Youtube.YoutubeConfig, ILoggerFactory)
  nameWithType: YoutubeScraper.YoutubeScraper(YoutubeConfig, ILoggerFactory)
- uid: Scraper.Net.Youtube.YoutubeScraper.#ctor*
  name: YoutubeScraper
  href: api/Scraper.Net.Youtube.YoutubeScraper.html#Scraper_Net_Youtube_YoutubeScraper__ctor_
  commentId: Overload:Scraper.Net.Youtube.YoutubeScraper.#ctor
  isSpec: "True"
  fullName: Scraper.Net.Youtube.YoutubeScraper.YoutubeScraper
  nameWithType: YoutubeScraper.YoutubeScraper
- uid: Scraper.Net.Youtube.YoutubeScraper.GetAuthorAsync(System.String,CancellationToken)
  name: GetAuthorAsync(String, CancellationToken)
  href: api/Scraper.Net.Youtube.YoutubeScraper.html#Scraper_Net_Youtube_YoutubeScraper_GetAuthorAsync_System_String_CancellationToken_
  commentId: M:Scraper.Net.Youtube.YoutubeScraper.GetAuthorAsync(System.String,CancellationToken)
  fullName: Scraper.Net.Youtube.YoutubeScraper.GetAuthorAsync(System.String, CancellationToken)
  nameWithType: YoutubeScraper.GetAuthorAsync(String, CancellationToken)
- uid: Scraper.Net.Youtube.YoutubeScraper.GetAuthorAsync*
  name: GetAuthorAsync
  href: api/Scraper.Net.Youtube.YoutubeScraper.html#Scraper_Net_Youtube_YoutubeScraper_GetAuthorAsync_
  commentId: Overload:Scraper.Net.Youtube.YoutubeScraper.GetAuthorAsync
  isSpec: "True"
  fullName: Scraper.Net.Youtube.YoutubeScraper.GetAuthorAsync
  nameWithType: YoutubeScraper.GetAuthorAsync
- uid: Scraper.Net.Youtube.YoutubeScraper.GetPostsAsync(System.String,CancellationToken)
  name: GetPostsAsync(String, CancellationToken)
  href: api/Scraper.Net.Youtube.YoutubeScraper.html#Scraper_Net_Youtube_YoutubeScraper_GetPostsAsync_System_String_CancellationToken_
  commentId: M:Scraper.Net.Youtube.YoutubeScraper.GetPostsAsync(System.String,CancellationToken)
  fullName: Scraper.Net.Youtube.YoutubeScraper.GetPostsAsync(System.String, CancellationToken)
  nameWithType: YoutubeScraper.GetPostsAsync(String, CancellationToken)
- uid: Scraper.Net.Youtube.YoutubeScraper.GetPostsAsync*
  name: GetPostsAsync
  href: api/Scraper.Net.Youtube.YoutubeScraper.html#Scraper_Net_Youtube_YoutubeScraper_GetPostsAsync_
  commentId: Overload:Scraper.Net.Youtube.YoutubeScraper.GetPostsAsync
  isSpec: "True"
  fullName: Scraper.Net.Youtube.YoutubeScraper.GetPostsAsync
  nameWithType: YoutubeScraper.GetPostsAsync
- uid: Scraper.Net.YoutubeDl
  name: Scraper.Net.YoutubeDl
  href: api/Scraper.Net.YoutubeDl.html
  commentId: N:Scraper.Net.YoutubeDl
  fullName: Scraper.Net.YoutubeDl
  nameWithType: Scraper.Net.YoutubeDl
- uid: Scraper.Net.YoutubeDl.ScraperBuilderExtensions
  name: ScraperBuilderExtensions
  href: api/Scraper.Net.YoutubeDl.ScraperBuilderExtensions.html
  commentId: T:Scraper.Net.YoutubeDl.ScraperBuilderExtensions
  fullName: Scraper.Net.YoutubeDl.ScraperBuilderExtensions
  nameWithType: ScraperBuilderExtensions
- uid: Scraper.Net.YoutubeDl.ScraperBuilderExtensions.AddYoutubeDl(Scraper.Net.ScraperBuilder,YoutubeDlConfig)
  name: AddYoutubeDl(ScraperBuilder, YoutubeDlConfig)
  href: api/Scraper.Net.YoutubeDl.ScraperBuilderExtensions.html#Scraper_Net_YoutubeDl_ScraperBuilderExtensions_AddYoutubeDl_Scraper_Net_ScraperBuilder_YoutubeDlConfig_
  commentId: M:Scraper.Net.YoutubeDl.ScraperBuilderExtensions.AddYoutubeDl(Scraper.Net.ScraperBuilder,YoutubeDlConfig)
  fullName: Scraper.Net.YoutubeDl.ScraperBuilderExtensions.AddYoutubeDl(Scraper.Net.ScraperBuilder, YoutubeDlConfig)
  nameWithType: ScraperBuilderExtensions.AddYoutubeDl(ScraperBuilder, YoutubeDlConfig)
- uid: Scraper.Net.YoutubeDl.ScraperBuilderExtensions.AddYoutubeDl*
  name: AddYoutubeDl
  href: api/Scraper.Net.YoutubeDl.ScraperBuilderExtensions.html#Scraper_Net_YoutubeDl_ScraperBuilderExtensions_AddYoutubeDl_
  commentId: Overload:Scraper.Net.YoutubeDl.ScraperBuilderExtensions.AddYoutubeDl
  isSpec: "True"
  fullName: Scraper.Net.YoutubeDl.ScraperBuilderExtensions.AddYoutubeDl
  nameWithType: ScraperBuilderExtensions.AddYoutubeDl
- uid: Scraper.Net.YoutubeDl.VideoExtractor
  name: VideoExtractor
  href: api/Scraper.Net.YoutubeDl.VideoExtractor.html
  commentId: T:Scraper.Net.YoutubeDl.VideoExtractor
  fullName: Scraper.Net.YoutubeDl.VideoExtractor
  nameWithType: VideoExtractor
- uid: Scraper.Net.YoutubeDl.VideoExtractor.#ctor(YoutubeDL,OptionSet)
  name: VideoExtractor(YoutubeDL, OptionSet)
  href: api/Scraper.Net.YoutubeDl.VideoExtractor.html#Scraper_Net_YoutubeDl_VideoExtractor__ctor_YoutubeDL_OptionSet_
  commentId: M:Scraper.Net.YoutubeDl.VideoExtractor.#ctor(YoutubeDL,OptionSet)
  fullName: Scraper.Net.YoutubeDl.VideoExtractor.VideoExtractor(YoutubeDL, OptionSet)
  nameWithType: VideoExtractor.VideoExtractor(YoutubeDL, OptionSet)
- uid: Scraper.Net.YoutubeDl.VideoExtractor.#ctor*
  name: VideoExtractor
  href: api/Scraper.Net.YoutubeDl.VideoExtractor.html#Scraper_Net_YoutubeDl_VideoExtractor__ctor_
  commentId: Overload:Scraper.Net.YoutubeDl.VideoExtractor.#ctor
  isSpec: "True"
  fullName: Scraper.Net.YoutubeDl.VideoExtractor.VideoExtractor
  nameWithType: VideoExtractor.VideoExtractor
- uid: Scraper.Net.YoutubeDl.VideoExtractor.ExtractAsync(System.String,CancellationToken)
  name: ExtractAsync(String, CancellationToken)
  href: api/Scraper.Net.YoutubeDl.VideoExtractor.html#Scraper_Net_YoutubeDl_VideoExtractor_ExtractAsync_System_String_CancellationToken_
  commentId: M:Scraper.Net.YoutubeDl.VideoExtractor.ExtractAsync(System.String,CancellationToken)
  fullName: Scraper.Net.YoutubeDl.VideoExtractor.ExtractAsync(System.String, CancellationToken)
  nameWithType: VideoExtractor.ExtractAsync(String, CancellationToken)
- uid: Scraper.Net.YoutubeDl.VideoExtractor.ExtractAsync*
  name: ExtractAsync
  href: api/Scraper.Net.YoutubeDl.VideoExtractor.html#Scraper_Net_YoutubeDl_VideoExtractor_ExtractAsync_
  commentId: Overload:Scraper.Net.YoutubeDl.VideoExtractor.ExtractAsync
  isSpec: "True"
  fullName: Scraper.Net.YoutubeDl.VideoExtractor.ExtractAsync
  nameWithType: VideoExtractor.ExtractAsync
- uid: Scraper.Net.YoutubeDl.YoutubeDlException
  name: YoutubeDlException
  href: api/Scraper.Net.YoutubeDl.YoutubeDlException.html
  commentId: T:Scraper.Net.YoutubeDl.YoutubeDlException
  fullName: Scraper.Net.YoutubeDl.YoutubeDlException
  nameWithType: YoutubeDlException
- uid: Scraper.Net.YoutubeDl.YoutubeDlException.#ctor(System.String)
  name: YoutubeDlException(String)
  href: api/Scraper.Net.YoutubeDl.YoutubeDlException.html#Scraper_Net_YoutubeDl_YoutubeDlException__ctor_System_String_
  commentId: M:Scraper.Net.YoutubeDl.YoutubeDlException.#ctor(System.String)
  fullName: Scraper.Net.YoutubeDl.YoutubeDlException.YoutubeDlException(System.String)
  nameWithType: YoutubeDlException.YoutubeDlException(String)
- uid: Scraper.Net.YoutubeDl.YoutubeDlException.#ctor*
  name: YoutubeDlException
  href: api/Scraper.Net.YoutubeDl.YoutubeDlException.html#Scraper_Net_YoutubeDl_YoutubeDlException__ctor_
  commentId: Overload:Scraper.Net.YoutubeDl.YoutubeDlException.#ctor
  isSpec: "True"
  fullName: Scraper.Net.YoutubeDl.YoutubeDlException.YoutubeDlException
  nameWithType: YoutubeDlException.YoutubeDlException
- uid: Scraper.Net.YoutubeDl.YoutubeDlPostProcessor
  name: YoutubeDlPostProcessor
  href: api/Scraper.Net.YoutubeDl.YoutubeDlPostProcessor.html
  commentId: T:Scraper.Net.YoutubeDl.YoutubeDlPostProcessor
  fullName: Scraper.Net.YoutubeDl.YoutubeDlPostProcessor
  nameWithType: YoutubeDlPostProcessor
- uid: Scraper.Net.YoutubeDl.YoutubeDlPostProcessor.#ctor(YoutubeDlConfig)
  name: YoutubeDlPostProcessor(YoutubeDlConfig)
  href: api/Scraper.Net.YoutubeDl.YoutubeDlPostProcessor.html#Scraper_Net_YoutubeDl_YoutubeDlPostProcessor__ctor_YoutubeDlConfig_
  commentId: M:Scraper.Net.YoutubeDl.YoutubeDlPostProcessor.#ctor(YoutubeDlConfig)
  fullName: Scraper.Net.YoutubeDl.YoutubeDlPostProcessor.YoutubeDlPostProcessor(YoutubeDlConfig)
  nameWithType: YoutubeDlPostProcessor.YoutubeDlPostProcessor(YoutubeDlConfig)
- uid: Scraper.Net.YoutubeDl.YoutubeDlPostProcessor.#ctor*
  name: YoutubeDlPostProcessor
  href: api/Scraper.Net.YoutubeDl.YoutubeDlPostProcessor.html#Scraper_Net_YoutubeDl_YoutubeDlPostProcessor__ctor_
  commentId: Overload:Scraper.Net.YoutubeDl.YoutubeDlPostProcessor.#ctor
  isSpec: "True"
  fullName: Scraper.Net.YoutubeDl.YoutubeDlPostProcessor.YoutubeDlPostProcessor
  nameWithType: YoutubeDlPostProcessor.YoutubeDlPostProcessor
- uid: Scraper.Net.YoutubeDl.YoutubeDlPostProcessor.ProcessAsync(Post,System.String,CancellationToken)
  name: ProcessAsync(Post, String, CancellationToken)
  href: api/Scraper.Net.YoutubeDl.YoutubeDlPostProcessor.html#Scraper_Net_YoutubeDl_YoutubeDlPostProcessor_ProcessAsync_Post_System_String_CancellationToken_
  commentId: M:Scraper.Net.YoutubeDl.YoutubeDlPostProcessor.ProcessAsync(Post,System.String,CancellationToken)
  fullName: Scraper.Net.YoutubeDl.YoutubeDlPostProcessor.ProcessAsync(Post, System.String, CancellationToken)
  nameWithType: YoutubeDlPostProcessor.ProcessAsync(Post, String, CancellationToken)
- uid: Scraper.Net.YoutubeDl.YoutubeDlPostProcessor.ProcessAsync*
  name: ProcessAsync
  href: api/Scraper.Net.YoutubeDl.YoutubeDlPostProcessor.html#Scraper_Net_YoutubeDl_YoutubeDlPostProcessor_ProcessAsync_
  commentId: Overload:Scraper.Net.YoutubeDl.YoutubeDlPostProcessor.ProcessAsync
  isSpec: "True"
  fullName: Scraper.Net.YoutubeDl.YoutubeDlPostProcessor.ProcessAsync
  nameWithType: YoutubeDlPostProcessor.ProcessAsync
